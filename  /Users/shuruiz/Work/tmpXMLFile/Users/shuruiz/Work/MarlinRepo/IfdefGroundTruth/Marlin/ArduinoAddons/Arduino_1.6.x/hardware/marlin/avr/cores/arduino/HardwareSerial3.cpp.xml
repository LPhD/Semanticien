<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/cores/arduino/HardwareSerial3.cpp" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*
  HardwareSerial3.cpp - Hardware serial library for Wiring
  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

  Modified 23 November 2006 by David A. Mellis
  Modified 28 September 2010 by Mark Sproul
  Modified 14 August 2012 by Alarus
  Modified 3 December 2013 by Matthijs Kooijman
*/</comment>

<cpp:include PREFIX:line="25" PREFIX:column="1">#<cpp:directive PREFIX:line="25" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="25" PREFIX:column="10">"Arduino.h"</cpp:file></cpp:include>
<cpp:include PREFIX:line="26" PREFIX:column="1">#<cpp:directive PREFIX:line="26" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="26" PREFIX:column="10">"HardwareSerial.h"</cpp:file></cpp:include>
<cpp:include PREFIX:line="27" PREFIX:column="1">#<cpp:directive PREFIX:line="27" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="27" PREFIX:column="10">"HardwareSerial_private.h"</cpp:file></cpp:include>

<comment type="line" PREFIX:line="29" PREFIX:column="1">// Each HardwareSerial is defined in its own file, sine the linker pulls</comment>
<comment type="line" PREFIX:line="30" PREFIX:column="1">// in the entire file when any element inside is used. --gc-sections can</comment>
<comment type="line" PREFIX:line="31" PREFIX:column="1">// additionally cause unused symbols to be dropped, but ISRs have the</comment>
<comment type="line" PREFIX:line="32" PREFIX:column="1">// "used" attribute so are never dropped and they keep the</comment>
<comment type="line" PREFIX:line="33" PREFIX:column="1">// HardwareSerial instance in as well. Putting each instance in its own</comment>
<comment type="line" PREFIX:line="34" PREFIX:column="1">// file prevents the linker from pulling in any unused instances in the</comment>
<comment type="line" PREFIX:line="35" PREFIX:column="1">// first place.</comment>

<cpp:if PREFIX:line="37" PREFIX:column="1">#<cpp:directive PREFIX:line="37" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="37" PREFIX:column="5">defined</name><argument_list PREFIX:line="37" PREFIX:column="12">(<argument><expr><name PREFIX:line="37" PREFIX:column="13">HAVE_HWSERIAL3</name></expr></argument>)</argument_list></call></expr></cpp:if>

<macro><name PREFIX:line="39" PREFIX:column="1">ISR</name><argument_list PREFIX:line="39" PREFIX:column="4">(<argument PREFIX:line="39" PREFIX:column="5">USART3_RX_vect</argument>)</argument_list></macro>
<block PREFIX:line="40" PREFIX:column="1">{
  <expr_stmt><expr><call><name><name PREFIX:line="41" PREFIX:column="3">Serial3</name>.<name PREFIX:line="41" PREFIX:column="11">_rx_complete_irq</name></name><argument_list PREFIX:line="41" PREFIX:column="27">()</argument_list></call></expr>;</expr_stmt>
}</block>

<macro><name PREFIX:line="44" PREFIX:column="1">ISR</name><argument_list PREFIX:line="44" PREFIX:column="4">(<argument PREFIX:line="44" PREFIX:column="5">USART3_UDRE_vect</argument>)</argument_list></macro>
<block PREFIX:line="45" PREFIX:column="1">{
  <expr_stmt><expr><call><name><name PREFIX:line="46" PREFIX:column="3">Serial3</name>.<name PREFIX:line="46" PREFIX:column="11">_tx_udr_empty_irq</name></name><argument_list PREFIX:line="46" PREFIX:column="28">()</argument_list></call></expr>;</expr_stmt>
}</block>

<decl_stmt><decl><type><name PREFIX:line="49" PREFIX:column="1">HardwareSerial</name></type> <name PREFIX:line="49" PREFIX:column="16">Serial3</name><argument_list PREFIX:line="49" PREFIX:column="23">(<argument><expr PREFIX:line="49" PREFIX:column="24">&amp;<name PREFIX:line="49" PREFIX:column="25">UBRR3H</name></expr></argument>, <argument><expr PREFIX:line="49" PREFIX:column="33">&amp;<name PREFIX:line="49" PREFIX:column="34">UBRR3L</name></expr></argument>, <argument><expr PREFIX:line="49" PREFIX:column="42">&amp;<name PREFIX:line="49" PREFIX:column="43">UCSR3A</name></expr></argument>, <argument><expr PREFIX:line="49" PREFIX:column="51">&amp;<name PREFIX:line="49" PREFIX:column="52">UCSR3B</name></expr></argument>, <argument><expr PREFIX:line="49" PREFIX:column="60">&amp;<name PREFIX:line="49" PREFIX:column="61">UCSR3C</name></expr></argument>, <argument><expr PREFIX:line="49" PREFIX:column="69">&amp;<name PREFIX:line="49" PREFIX:column="70">UDR3</name></expr></argument>)</argument_list></decl>;</decl_stmt>

<comment type="line" PREFIX:line="51" PREFIX:column="1">// Function that can be weakly referenced by serialEventRun to prevent</comment>
<comment type="line" PREFIX:line="52" PREFIX:column="1">// pulling in this file if it's not otherwise used.</comment>
<function><type><name PREFIX:line="53" PREFIX:column="1">bool</name></type> <name PREFIX:line="53" PREFIX:column="6">Serial3_available</name><parameter_list PREFIX:line="53" PREFIX:column="23">()</parameter_list> <block PREFIX:line="53" PREFIX:column="26">{
  <return PREFIX:line="54" PREFIX:column="3">return <expr><call><name><name PREFIX:line="54" PREFIX:column="10">Serial3</name>.<name PREFIX:line="54" PREFIX:column="18">available</name></name><argument_list PREFIX:line="54" PREFIX:column="27">()</argument_list></call></expr>;</return>
}</block></function>

<cpp:endif PREFIX:line="57" PREFIX:column="1">#<cpp:directive PREFIX:line="57" PREFIX:column="2">endif</cpp:directive></cpp:endif> <comment type="line" PREFIX:line="57" PREFIX:column="8">// HAVE_HWSERIAL3</comment>
</unit>
