<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.0.x/libraries/U8glib/utility/u8g_com_api.c" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*

  u8g_com_api.c

  Universal 8bit Graphics Library
  
  Copyright (c) 2011, olikraus@gmail.com
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this list 
    of conditions and the following disclaimer.
    
  * Redistributions in binary form must reproduce the above copyright notice, this 
    list of conditions and the following disclaimer in the documentation and/or other 
    materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  
  
*/</comment>

<cpp:include PREFIX:line="37" PREFIX:column="1">#<cpp:directive PREFIX:line="37" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="37" PREFIX:column="10">"u8g.h"</cpp:file></cpp:include>

<function><type><name PREFIX:line="39" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="39" PREFIX:column="9">u8g_InitCom</name><parameter_list PREFIX:line="39" PREFIX:column="20">(<param><decl><type><name PREFIX:line="39" PREFIX:column="21">u8g_t</name> *</type><name PREFIX:line="39" PREFIX:column="28">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="39" PREFIX:column="33">u8g_dev_t</name> *</type><name PREFIX:line="39" PREFIX:column="44">dev</name></decl></param>, <param><decl><type><name PREFIX:line="39" PREFIX:column="49">uint8_t</name></type> <name PREFIX:line="39" PREFIX:column="57">clk_cycle_time</name></decl></param>)</parameter_list>
<block PREFIX:line="40" PREFIX:column="1">{
  <return PREFIX:line="41" PREFIX:column="3">return <expr><call><name><name PREFIX:line="41" PREFIX:column="10">dev</name>-&gt;<name PREFIX:line="41" PREFIX:column="15">com_fn</name></name><argument_list PREFIX:line="41" PREFIX:column="21">(<argument><expr><name PREFIX:line="41" PREFIX:column="22">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="41" PREFIX:column="27">U8G_COM_MSG_INIT</name></expr></argument>, <argument><expr><name PREFIX:line="41" PREFIX:column="45">clk_cycle_time</name></expr></argument>, <argument><expr><name PREFIX:line="41" PREFIX:column="61">NULL</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name PREFIX:line="44" PREFIX:column="1">void</name></type> <name PREFIX:line="44" PREFIX:column="6">u8g_StopCom</name><parameter_list PREFIX:line="44" PREFIX:column="17">(<param><decl><type><name PREFIX:line="44" PREFIX:column="18">u8g_t</name> *</type><name PREFIX:line="44" PREFIX:column="25">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="44" PREFIX:column="30">u8g_dev_t</name> *</type><name PREFIX:line="44" PREFIX:column="41">dev</name></decl></param>)</parameter_list>
<block PREFIX:line="45" PREFIX:column="1">{
  <expr_stmt><expr><call><name><name PREFIX:line="46" PREFIX:column="3">dev</name>-&gt;<name PREFIX:line="46" PREFIX:column="8">com_fn</name></name><argument_list PREFIX:line="46" PREFIX:column="14">(<argument><expr><name PREFIX:line="46" PREFIX:column="15">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="46" PREFIX:column="20">U8G_COM_MSG_STOP</name></expr></argument>, <argument><expr PREFIX:line="46" PREFIX:column="38">0</expr></argument>, <argument><expr><name PREFIX:line="46" PREFIX:column="41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="block" PREFIX:line="49" PREFIX:column="1">/* cs contains the chip number, which should be enabled */</comment>
<function><type><name PREFIX:line="50" PREFIX:column="1">void</name></type> <name PREFIX:line="50" PREFIX:column="6">u8g_SetChipSelect</name><parameter_list PREFIX:line="50" PREFIX:column="23">(<param><decl><type><name PREFIX:line="50" PREFIX:column="24">u8g_t</name> *</type><name PREFIX:line="50" PREFIX:column="31">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="50" PREFIX:column="36">u8g_dev_t</name> *</type><name PREFIX:line="50" PREFIX:column="47">dev</name></decl></param>, <param><decl><type><name PREFIX:line="50" PREFIX:column="52">uint8_t</name></type> <name PREFIX:line="50" PREFIX:column="60">cs</name></decl></param>)</parameter_list>
<block PREFIX:line="51" PREFIX:column="1">{
  <expr_stmt><expr><call><name><name PREFIX:line="52" PREFIX:column="3">dev</name>-&gt;<name PREFIX:line="52" PREFIX:column="8">com_fn</name></name><argument_list PREFIX:line="52" PREFIX:column="14">(<argument><expr><name PREFIX:line="52" PREFIX:column="15">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="52" PREFIX:column="20">U8G_COM_MSG_CHIP_SELECT</name></expr></argument>, <argument><expr><name PREFIX:line="52" PREFIX:column="45">cs</name></expr></argument>, <argument><expr><name PREFIX:line="52" PREFIX:column="49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name PREFIX:line="55" PREFIX:column="1">void</name></type> <name PREFIX:line="55" PREFIX:column="6">u8g_SetResetLow</name><parameter_list PREFIX:line="55" PREFIX:column="21">(<param><decl><type><name PREFIX:line="55" PREFIX:column="22">u8g_t</name> *</type><name PREFIX:line="55" PREFIX:column="29">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="55" PREFIX:column="34">u8g_dev_t</name> *</type><name PREFIX:line="55" PREFIX:column="45">dev</name></decl></param>)</parameter_list>
<block PREFIX:line="56" PREFIX:column="1">{
  <expr_stmt><expr><call><name><name PREFIX:line="57" PREFIX:column="3">dev</name>-&gt;<name PREFIX:line="57" PREFIX:column="8">com_fn</name></name><argument_list PREFIX:line="57" PREFIX:column="14">(<argument><expr><name PREFIX:line="57" PREFIX:column="15">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="57" PREFIX:column="20">U8G_COM_MSG_RESET</name></expr></argument>, <argument><expr PREFIX:line="57" PREFIX:column="39">0</expr></argument>, <argument><expr><name PREFIX:line="57" PREFIX:column="42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name PREFIX:line="60" PREFIX:column="1">void</name></type> <name PREFIX:line="60" PREFIX:column="6">u8g_SetResetHigh</name><parameter_list PREFIX:line="60" PREFIX:column="22">(<param><decl><type><name PREFIX:line="60" PREFIX:column="23">u8g_t</name> *</type><name PREFIX:line="60" PREFIX:column="30">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="60" PREFIX:column="35">u8g_dev_t</name> *</type><name PREFIX:line="60" PREFIX:column="46">dev</name></decl></param>)</parameter_list>
<block PREFIX:line="61" PREFIX:column="1">{
  <expr_stmt><expr><call><name><name PREFIX:line="62" PREFIX:column="3">dev</name>-&gt;<name PREFIX:line="62" PREFIX:column="8">com_fn</name></name><argument_list PREFIX:line="62" PREFIX:column="14">(<argument><expr><name PREFIX:line="62" PREFIX:column="15">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="62" PREFIX:column="20">U8G_COM_MSG_RESET</name></expr></argument>, <argument><expr PREFIX:line="62" PREFIX:column="39">1</expr></argument>, <argument><expr><name PREFIX:line="62" PREFIX:column="42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>


<function><type><name PREFIX:line="66" PREFIX:column="1">void</name></type> <name PREFIX:line="66" PREFIX:column="6">u8g_SetAddress</name><parameter_list PREFIX:line="66" PREFIX:column="20">(<param><decl><type><name PREFIX:line="66" PREFIX:column="21">u8g_t</name> *</type><name PREFIX:line="66" PREFIX:column="28">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="66" PREFIX:column="33">u8g_dev_t</name> *</type><name PREFIX:line="66" PREFIX:column="44">dev</name></decl></param>, <param><decl><type><name PREFIX:line="66" PREFIX:column="49">uint8_t</name></type> <name PREFIX:line="66" PREFIX:column="57">address</name></decl></param>)</parameter_list>
<block PREFIX:line="67" PREFIX:column="1">{
  <expr_stmt><expr><call><name><name PREFIX:line="68" PREFIX:column="3">dev</name>-&gt;<name PREFIX:line="68" PREFIX:column="8">com_fn</name></name><argument_list PREFIX:line="68" PREFIX:column="14">(<argument><expr><name PREFIX:line="68" PREFIX:column="15">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="68" PREFIX:column="20">U8G_COM_MSG_ADDRESS</name></expr></argument>, <argument><expr><name PREFIX:line="68" PREFIX:column="41">address</name></expr></argument>, <argument><expr><name PREFIX:line="68" PREFIX:column="50">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name PREFIX:line="71" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="71" PREFIX:column="9">u8g_WriteByte</name><parameter_list PREFIX:line="71" PREFIX:column="22">(<param><decl><type><name PREFIX:line="71" PREFIX:column="23">u8g_t</name> *</type><name PREFIX:line="71" PREFIX:column="30">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="71" PREFIX:column="35">u8g_dev_t</name> *</type><name PREFIX:line="71" PREFIX:column="46">dev</name></decl></param>, <param><decl><type><name PREFIX:line="71" PREFIX:column="51">uint8_t</name></type> <name PREFIX:line="71" PREFIX:column="59">val</name></decl></param>)</parameter_list>
<block PREFIX:line="72" PREFIX:column="1">{
  <return PREFIX:line="73" PREFIX:column="3">return <expr><call><name><name PREFIX:line="73" PREFIX:column="10">dev</name>-&gt;<name PREFIX:line="73" PREFIX:column="15">com_fn</name></name><argument_list PREFIX:line="73" PREFIX:column="21">(<argument><expr><name PREFIX:line="73" PREFIX:column="22">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="73" PREFIX:column="27">U8G_COM_MSG_WRITE_BYTE</name></expr></argument>, <argument><expr><name PREFIX:line="73" PREFIX:column="51">val</name></expr></argument>, <argument><expr><name PREFIX:line="73" PREFIX:column="56">NULL</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name PREFIX:line="76" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="76" PREFIX:column="9">u8g_WriteSequence</name><parameter_list PREFIX:line="76" PREFIX:column="26">(<param><decl><type><name PREFIX:line="76" PREFIX:column="27">u8g_t</name> *</type><name PREFIX:line="76" PREFIX:column="34">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="76" PREFIX:column="39">u8g_dev_t</name> *</type><name PREFIX:line="76" PREFIX:column="50">dev</name></decl></param>, <param><decl><type><name PREFIX:line="76" PREFIX:column="55">uint8_t</name></type> <name PREFIX:line="76" PREFIX:column="63">cnt</name></decl></param>, <param><decl><type><name PREFIX:line="76" PREFIX:column="68">uint8_t</name> *</type><name PREFIX:line="76" PREFIX:column="77">seq</name></decl></param>)</parameter_list>
<block PREFIX:line="77" PREFIX:column="1">{
  <return PREFIX:line="78" PREFIX:column="3">return <expr><call><name><name PREFIX:line="78" PREFIX:column="10">dev</name>-&gt;<name PREFIX:line="78" PREFIX:column="15">com_fn</name></name><argument_list PREFIX:line="78" PREFIX:column="21">(<argument><expr><name PREFIX:line="78" PREFIX:column="22">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="78" PREFIX:column="27">U8G_COM_MSG_WRITE_SEQ</name></expr></argument>, <argument><expr><name PREFIX:line="78" PREFIX:column="50">cnt</name></expr></argument>, <argument><expr><name PREFIX:line="78" PREFIX:column="55">seq</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name PREFIX:line="81" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="81" PREFIX:column="9">u8g_WriteSequenceP</name><parameter_list PREFIX:line="81" PREFIX:column="27">(<param><decl><type><name PREFIX:line="81" PREFIX:column="28">u8g_t</name> *</type><name PREFIX:line="81" PREFIX:column="35">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="81" PREFIX:column="40">u8g_dev_t</name> *</type><name PREFIX:line="81" PREFIX:column="51">dev</name></decl></param>, <param><decl><type><name PREFIX:line="81" PREFIX:column="56">uint8_t</name></type> <name PREFIX:line="81" PREFIX:column="64">cnt</name></decl></param>,  <param><decl><type><name PREFIX:line="81" PREFIX:column="70">uint8_t</name> *</type><name PREFIX:line="81" PREFIX:column="79">seq</name></decl></param>)</parameter_list>
<block PREFIX:line="82" PREFIX:column="1">{
  <return PREFIX:line="83" PREFIX:column="3">return <expr><call><name><name PREFIX:line="83" PREFIX:column="10">dev</name>-&gt;<name PREFIX:line="83" PREFIX:column="15">com_fn</name></name><argument_list PREFIX:line="83" PREFIX:column="21">(<argument><expr><name PREFIX:line="83" PREFIX:column="22">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="83" PREFIX:column="27">U8G_COM_MSG_WRITE_SEQ_P</name></expr></argument>, <argument><expr><name PREFIX:line="83" PREFIX:column="52">cnt</name></expr></argument>, <argument><expr><name PREFIX:line="83" PREFIX:column="57">seq</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<comment type="block" PREFIX:line="86" PREFIX:column="1">/*
  sequence := { direct_value | escape_sequence }
  direct_value := 0..254
  escape_sequence := value_255 | sequence_end | delay | adr | cs | not_used 
  value_255 := 255 255
  sequence_end = 255 254
  delay := 255 0..127
  adr := 255 0x0e0 .. 0x0ef 
  cs := 255 0x0d0 .. 0x0df 
  not_used := 255 101..254

#define U8G_ESC_DLY(x) 255, ((x) &amp; 0x7f)
#define U8G_ESC_CS(x) 255, (0xd0 | ((x)&amp;0x0f))
#define U8G_ESC_ADR(x) 255, (0xe0 | ((x)&amp;0x0f))
#define U8G_ESC_VCC(x) 255, (0xbe | ((x)&amp;0x01))
#define U8G_ESC_END 255, 254
#define U8G_ESC_255 255, 255
#define U8G_ESC_RST(x) 255, (0xc0 | ((x)&amp;0x0f))

*/</comment>
<function><type><name PREFIX:line="106" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="106" PREFIX:column="9">u8g_WriteEscSeqP</name><parameter_list PREFIX:line="106" PREFIX:column="25">(<param><decl><type><name PREFIX:line="106" PREFIX:column="26">u8g_t</name> *</type><name PREFIX:line="106" PREFIX:column="33">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="106" PREFIX:column="38">u8g_dev_t</name> *</type><name PREFIX:line="106" PREFIX:column="49">dev</name></decl></param>,  <param><decl><type><name PREFIX:line="106" PREFIX:column="55">uint8_t</name> *</type><name PREFIX:line="106" PREFIX:column="64">esc_seq</name></decl></param>)</parameter_list>
<block PREFIX:line="107" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="108" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="108" PREFIX:column="11">is_escape</name> <init PREFIX:line="108" PREFIX:column="21">= <expr PREFIX:line="108" PREFIX:column="23">0</expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="109" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="109" PREFIX:column="11">value</name></decl>;</decl_stmt>
  <for PREFIX:line="110" PREFIX:column="3">for(<init PREFIX:line="110" PREFIX:column="7">;</init><condition PREFIX:line="110" PREFIX:column="8">;</condition><incr/>)
  <block PREFIX:line="111" PREFIX:column="3">{
    <expr_stmt><expr><name PREFIX:line="112" PREFIX:column="5">value</name> = <call><name PREFIX:line="112" PREFIX:column="13">u8g_pgm_read</name><argument_list PREFIX:line="112" PREFIX:column="25">(<argument><expr><name PREFIX:line="112" PREFIX:column="26">esc_seq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if PREFIX:line="113" PREFIX:column="5">if <condition PREFIX:line="113" PREFIX:column="8">( <expr><name PREFIX:line="113" PREFIX:column="10">is_escape</name> == 0</expr> )</condition><then PREFIX:line="113" PREFIX:column="26">
    <block PREFIX:line="114" PREFIX:column="5">{
      <if PREFIX:line="115" PREFIX:column="7">if <condition PREFIX:line="115" PREFIX:column="10">( <expr><name PREFIX:line="115" PREFIX:column="12">value</name> != 255</expr> )</condition><then PREFIX:line="115" PREFIX:column="26">
      <block PREFIX:line="116" PREFIX:column="7">{
        <if PREFIX:line="117" PREFIX:column="9">if <condition PREFIX:line="117" PREFIX:column="12">( <expr><call><name PREFIX:line="117" PREFIX:column="14">u8g_WriteByte</name><argument_list PREFIX:line="117" PREFIX:column="27">(<argument><expr><name PREFIX:line="117" PREFIX:column="28">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="117" PREFIX:column="33">dev</name></expr></argument>, <argument><expr><name PREFIX:line="117" PREFIX:column="38">value</name></expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="117" PREFIX:column="51">
          <return PREFIX:line="118" PREFIX:column="11">return <expr PREFIX:line="118" PREFIX:column="18">0</expr>;</return></then></if>
      }</block></then>
      <else PREFIX:line="120" PREFIX:column="7">else
      <block PREFIX:line="121" PREFIX:column="7">{
        <expr_stmt><expr><name PREFIX:line="122" PREFIX:column="9">is_escape</name> = 1</expr>;</expr_stmt>
      }</block></else></if>
    }</block></then>
    <else PREFIX:line="125" PREFIX:column="5">else
    <block PREFIX:line="126" PREFIX:column="5">{
      <if PREFIX:line="127" PREFIX:column="7">if <condition PREFIX:line="127" PREFIX:column="10">( <expr><name PREFIX:line="127" PREFIX:column="12">value</name> == 255</expr> )</condition><then PREFIX:line="127" PREFIX:column="26">
      <block PREFIX:line="128" PREFIX:column="7">{
        <if PREFIX:line="129" PREFIX:column="9">if <condition PREFIX:line="129" PREFIX:column="12">( <expr><call><name PREFIX:line="129" PREFIX:column="14">u8g_WriteByte</name><argument_list PREFIX:line="129" PREFIX:column="27">(<argument><expr><name PREFIX:line="129" PREFIX:column="28">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="129" PREFIX:column="33">dev</name></expr></argument>, <argument><expr><name PREFIX:line="129" PREFIX:column="38">value</name></expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="129" PREFIX:column="51">
          <return PREFIX:line="130" PREFIX:column="11">return <expr PREFIX:line="130" PREFIX:column="18">0</expr>;</return></then></if>
      }</block></then>
      <else PREFIX:line="132" PREFIX:column="7">else <if PREFIX:line="132" PREFIX:column="12">if <condition PREFIX:line="132" PREFIX:column="15">( <expr><name PREFIX:line="132" PREFIX:column="17">value</name> == 254</expr> )</condition><then PREFIX:line="132" PREFIX:column="31">
      <block PREFIX:line="133" PREFIX:column="7">{
        <break PREFIX:line="134" PREFIX:column="9">break;</break>
      }</block></then>
      <else PREFIX:line="136" PREFIX:column="7">else <if PREFIX:line="136" PREFIX:column="12">if <condition PREFIX:line="136" PREFIX:column="15">( <expr><name PREFIX:line="136" PREFIX:column="17">value</name> &gt;= 0x0f0</expr> )</condition><then PREFIX:line="136" PREFIX:column="33">
      <block PREFIX:line="137" PREFIX:column="7">{
        <comment type="block" PREFIX:line="138" PREFIX:column="9">/* not yet used, do nothing */</comment>
      }</block></then>
      <else PREFIX:line="140" PREFIX:column="7">else <if PREFIX:line="140" PREFIX:column="12">if <condition PREFIX:line="140" PREFIX:column="15">( <expr><name PREFIX:line="140" PREFIX:column="17">value</name> &gt;= 0xe0</expr>  )</condition><then PREFIX:line="140" PREFIX:column="33">
      <block PREFIX:line="141" PREFIX:column="7">{
        <expr_stmt><expr><call><name PREFIX:line="142" PREFIX:column="9">u8g_SetAddress</name><argument_list PREFIX:line="142" PREFIX:column="23">(<argument><expr><name PREFIX:line="142" PREFIX:column="24">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="142" PREFIX:column="29">dev</name></expr></argument>, <argument><expr><name PREFIX:line="142" PREFIX:column="34">value</name> &amp; 0x0f</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then>
      <else PREFIX:line="144" PREFIX:column="7">else <if PREFIX:line="144" PREFIX:column="12">if <condition PREFIX:line="144" PREFIX:column="15">( <expr><name PREFIX:line="144" PREFIX:column="17">value</name> &gt;= 0xd0</expr> )</condition><then PREFIX:line="144" PREFIX:column="32">
      <block PREFIX:line="145" PREFIX:column="7">{
        <expr_stmt><expr><call><name PREFIX:line="146" PREFIX:column="9">u8g_SetChipSelect</name><argument_list PREFIX:line="146" PREFIX:column="26">(<argument><expr><name PREFIX:line="146" PREFIX:column="27">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="146" PREFIX:column="32">dev</name></expr></argument>, <argument><expr><name PREFIX:line="146" PREFIX:column="37">value</name> &amp; 0x0f</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then>
      <else PREFIX:line="148" PREFIX:column="7">else <if PREFIX:line="148" PREFIX:column="12">if <condition PREFIX:line="148" PREFIX:column="15">( <expr><name PREFIX:line="148" PREFIX:column="17">value</name> &gt;= 0xc0</expr> )</condition><then PREFIX:line="148" PREFIX:column="32">
      <block PREFIX:line="149" PREFIX:column="7">{
        <expr_stmt><expr><call><name PREFIX:line="150" PREFIX:column="9">u8g_SetResetLow</name><argument_list PREFIX:line="150" PREFIX:column="24">(<argument><expr><name PREFIX:line="150" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="150" PREFIX:column="30">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><name PREFIX:line="151" PREFIX:column="9">value</name> &amp;= 0x0f</expr>;</expr_stmt>
        <expr_stmt><expr><name PREFIX:line="152" PREFIX:column="9">value</name> &lt;&lt;= 4</expr>;</expr_stmt>
        <expr_stmt><expr><name PREFIX:line="153" PREFIX:column="9">value</name>+=2</expr>;</expr_stmt>
        <expr_stmt><expr><call><name PREFIX:line="154" PREFIX:column="9">u8g_Delay</name><argument_list PREFIX:line="154" PREFIX:column="18">(<argument><expr><name PREFIX:line="154" PREFIX:column="19">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name PREFIX:line="155" PREFIX:column="9">u8g_SetResetHigh</name><argument_list PREFIX:line="155" PREFIX:column="25">(<argument><expr><name PREFIX:line="155" PREFIX:column="26">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="155" PREFIX:column="31">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name PREFIX:line="156" PREFIX:column="9">u8g_Delay</name><argument_list PREFIX:line="156" PREFIX:column="18">(<argument><expr><name PREFIX:line="156" PREFIX:column="19">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then>
      <else PREFIX:line="158" PREFIX:column="7">else <if PREFIX:line="158" PREFIX:column="12">if <condition PREFIX:line="158" PREFIX:column="15">( <expr><name PREFIX:line="158" PREFIX:column="17">value</name> &gt;= 0xbe</expr> )</condition><then PREFIX:line="158" PREFIX:column="32">
      <block PREFIX:line="159" PREFIX:column="7">{
	<comment type="block" PREFIX:line="160" PREFIX:column="9">/* not yet implemented */</comment>
        <comment type="block" PREFIX:line="161" PREFIX:column="9">/* u8g_SetVCC(u8g, dev, value &amp; 0x01); */</comment>
      }</block></then>
      <else PREFIX:line="163" PREFIX:column="7">else <if PREFIX:line="163" PREFIX:column="12">if <condition PREFIX:line="163" PREFIX:column="15">( <expr><name PREFIX:line="163" PREFIX:column="17">value</name> &lt;= 127</expr> )</condition><then PREFIX:line="163" PREFIX:column="31">
      <block PREFIX:line="164" PREFIX:column="7">{
        <expr_stmt><expr><call><name PREFIX:line="165" PREFIX:column="9">u8g_Delay</name><argument_list PREFIX:line="165" PREFIX:column="18">(<argument><expr><name PREFIX:line="165" PREFIX:column="19">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if></else></if></else></if></else></if></else></if></else></if></else></if></else></if>
      <expr_stmt><expr><name PREFIX:line="167" PREFIX:column="7">is_escape</name> = 0</expr>;</expr_stmt>
    }</block></else></if>
    <expr_stmt><expr><name PREFIX:line="169" PREFIX:column="5">esc_seq</name>++</expr>;</expr_stmt>
  }</block></for>
  <return PREFIX:line="171" PREFIX:column="3">return <expr PREFIX:line="171" PREFIX:column="10">1</expr>;</return>
}</block></function>

</unit>
