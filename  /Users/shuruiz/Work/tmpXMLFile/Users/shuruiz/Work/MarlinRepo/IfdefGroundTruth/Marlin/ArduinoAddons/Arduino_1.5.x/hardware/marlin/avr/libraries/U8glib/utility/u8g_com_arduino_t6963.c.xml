<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.5.x/hardware/marlin/avr/libraries/U8glib/utility/u8g_com_arduino_t6963.c" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*
  
  u8g_com_arduino_t6963.c

  Universal 8bit Graphics Library
  
  Copyright (c) 2011, olikraus@gmail.com
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this list 
    of conditions and the following disclaimer.
    
  * Redistributions in binary form must reproduce the above copyright notice, this 
    list of conditions and the following disclaimer in the documentation and/or other 
    materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  


  PIN_D0 8
  PIN_D1 9
  PIN_D2 10
  PIN_D3 11
  PIN_D4 4
  PIN_D5 5
  PIN_D6 6
  PIN_D7 7

  PIN_CS 14
  PIN_A0 15
  PIN_RESET 16
  PIN_WR 17
  PIN_RD 18
  
  u8g_InitRW8Bit(u8g, dev, d0, d1, d2, d3, d4, d5, d6, d7, cs, a0, wr, rd, reset)
  u8g_InitRW8Bit(u8g, dev,  8,  9, 10, 11,  4,  5,  6,  7, 14, 15, 17, 18, 16)

*/</comment>

<cpp:include PREFIX:line="55" PREFIX:column="1">#<cpp:directive PREFIX:line="55" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="55" PREFIX:column="10">"u8g.h"</cpp:file></cpp:include>

<cpp:if PREFIX:line="57" PREFIX:column="1">#<cpp:directive PREFIX:line="57" PREFIX:column="2">if</cpp:directive>  <expr><call><name PREFIX:line="57" PREFIX:column="6">defined</name><argument_list PREFIX:line="57" PREFIX:column="13">(<argument><expr><name PREFIX:line="57" PREFIX:column="14">ARDUINO</name></expr></argument>)</argument_list></call></expr></cpp:if>

<cpp:if PREFIX:line="59" PREFIX:column="1">#<cpp:directive PREFIX:line="59" PREFIX:column="2">if</cpp:directive> <expr><name PREFIX:line="59" PREFIX:column="5">ARDUINO</name> &lt; 100</expr></cpp:if> 
<comment type="line" PREFIX:line="60" PREFIX:column="1">//#include &lt;WProgram.h&gt; </comment>
<cpp:include PREFIX:line="61" PREFIX:column="1">#<cpp:directive PREFIX:line="61" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="61" PREFIX:column="10">&lt;wiring_private.h&gt;</cpp:file></cpp:include> 
<cpp:include PREFIX:line="62" PREFIX:column="1">#<cpp:directive PREFIX:line="62" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="62" PREFIX:column="10">&lt;pins_arduino.h&gt;</cpp:file></cpp:include> 
<cpp:else PREFIX:line="63" PREFIX:column="1">#<cpp:directive PREFIX:line="63" PREFIX:column="2">else</cpp:directive></cpp:else> 
<cpp:include PREFIX:line="64" PREFIX:column="1">#<cpp:directive PREFIX:line="64" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="64" PREFIX:column="10">&lt;Arduino.h&gt;</cpp:file></cpp:include> 
<cpp:endif PREFIX:line="65" PREFIX:column="1">#<cpp:directive PREFIX:line="65" PREFIX:column="2">endif</cpp:directive></cpp:endif>


<cpp:if PREFIX:line="68" PREFIX:column="1">#<cpp:directive PREFIX:line="68" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="68" PREFIX:column="5">defined</name><argument_list PREFIX:line="68" PREFIX:column="12">(<argument><expr><name PREFIX:line="68" PREFIX:column="13">__PIC32MX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<comment type="block" PREFIX:line="69" PREFIX:column="1">/* CHIPKIT PIC32 */</comment>
<decl_stmt><decl><type><specifier PREFIX:line="70" PREFIX:column="1">static</specifier> <specifier PREFIX:line="70" PREFIX:column="8">volatile</specifier> <name PREFIX:line="70" PREFIX:column="17">uint32_t</name> *</type><name><name PREFIX:line="70" PREFIX:column="27">u8g_output_data_port</name><index PREFIX:line="70" PREFIX:column="47">[<expr PREFIX:line="70" PREFIX:column="48">8</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier PREFIX:line="71" PREFIX:column="1">static</specifier> <specifier PREFIX:line="71" PREFIX:column="8">volatile</specifier> <name PREFIX:line="71" PREFIX:column="17">uint32_t</name> *</type><name><name PREFIX:line="71" PREFIX:column="27">u8g_input_data_port</name><index PREFIX:line="71" PREFIX:column="46">[<expr PREFIX:line="71" PREFIX:column="47">8</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier PREFIX:line="72" PREFIX:column="1">static</specifier> <specifier PREFIX:line="72" PREFIX:column="8">volatile</specifier> <name PREFIX:line="72" PREFIX:column="17">uint32_t</name> *</type><name><name PREFIX:line="72" PREFIX:column="27">u8g_mode_port</name><index PREFIX:line="72" PREFIX:column="40">[<expr PREFIX:line="72" PREFIX:column="41">8</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier PREFIX:line="73" PREFIX:column="1">static</specifier> <name PREFIX:line="73" PREFIX:column="8">uint32_t</name></type> <name><name PREFIX:line="73" PREFIX:column="17">u8g_data_mask</name><index PREFIX:line="73" PREFIX:column="30">[<expr PREFIX:line="73" PREFIX:column="31">8</expr>]</index></name></decl>;</decl_stmt>
<cpp:else PREFIX:line="74" PREFIX:column="1">#<cpp:directive PREFIX:line="74" PREFIX:column="2">else</cpp:directive></cpp:else>
<decl_stmt><decl><type><specifier PREFIX:line="75" PREFIX:column="1">static</specifier> <specifier PREFIX:line="75" PREFIX:column="8">volatile</specifier> <name PREFIX:line="75" PREFIX:column="17">uint8_t</name> *</type><name><name PREFIX:line="75" PREFIX:column="26">u8g_output_data_port</name><index PREFIX:line="75" PREFIX:column="46">[<expr PREFIX:line="75" PREFIX:column="47">8</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier PREFIX:line="76" PREFIX:column="1">static</specifier> <specifier PREFIX:line="76" PREFIX:column="8">volatile</specifier> <name PREFIX:line="76" PREFIX:column="17">uint8_t</name> *</type><name><name PREFIX:line="76" PREFIX:column="26">u8g_input_data_port</name><index PREFIX:line="76" PREFIX:column="45">[<expr PREFIX:line="76" PREFIX:column="46">8</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier PREFIX:line="77" PREFIX:column="1">static</specifier> <specifier PREFIX:line="77" PREFIX:column="8">volatile</specifier> <name PREFIX:line="77" PREFIX:column="17">uint8_t</name> *</type><name><name PREFIX:line="77" PREFIX:column="26">u8g_mode_port</name><index PREFIX:line="77" PREFIX:column="39">[<expr PREFIX:line="77" PREFIX:column="40">8</expr>]</index></name></decl>;</decl_stmt>
<decl_stmt><decl><type><specifier PREFIX:line="78" PREFIX:column="1">static</specifier> <name PREFIX:line="78" PREFIX:column="8">uint8_t</name></type> <name><name PREFIX:line="78" PREFIX:column="16">u8g_data_mask</name><index PREFIX:line="78" PREFIX:column="29">[<expr PREFIX:line="78" PREFIX:column="30">8</expr>]</index></name></decl>;</decl_stmt>
<cpp:endif PREFIX:line="79" PREFIX:column="1">#<cpp:directive PREFIX:line="79" PREFIX:column="2">endif</cpp:directive></cpp:endif>



<function><type><specifier PREFIX:line="83" PREFIX:column="1">static</specifier> <name PREFIX:line="83" PREFIX:column="8">void</name></type> <name PREFIX:line="83" PREFIX:column="13">u8g_com_arduino_t6963_init</name><parameter_list PREFIX:line="83" PREFIX:column="39">(<param><decl><type><name PREFIX:line="83" PREFIX:column="40">u8g_t</name> *</type><name PREFIX:line="83" PREFIX:column="47">u8g</name></decl></param>)</parameter_list>
<block PREFIX:line="84" PREFIX:column="1">{
  <expr_stmt><expr><name><name PREFIX:line="85" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="85" PREFIX:column="23">[<expr PREFIX:line="85" PREFIX:column="24">0</expr>]</index></name> =  <call><name PREFIX:line="85" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="85" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="85" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="85" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="85" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="85" PREFIX:column="71">pin_list</name><index PREFIX:line="85" PREFIX:column="79">[<expr><name PREFIX:line="85" PREFIX:column="80">U8G_PI_D0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="86" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="86" PREFIX:column="22">[<expr PREFIX:line="86" PREFIX:column="23">0</expr>]</index></name> =  <call><name PREFIX:line="86" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="86" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="86" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="86" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="86" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="86" PREFIX:column="69">pin_list</name><index PREFIX:line="86" PREFIX:column="77">[<expr><name PREFIX:line="86" PREFIX:column="78">U8G_PI_D0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="87" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="87" PREFIX:column="16">[<expr PREFIX:line="87" PREFIX:column="17">0</expr>]</index></name> =  <call><name PREFIX:line="87" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="87" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="87" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="87" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="87" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="87" PREFIX:column="62">pin_list</name><index PREFIX:line="87" PREFIX:column="70">[<expr><name PREFIX:line="87" PREFIX:column="71">U8G_PI_D0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="88" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="88" PREFIX:column="16">[<expr PREFIX:line="88" PREFIX:column="17">0</expr>]</index></name> =  <call><name PREFIX:line="88" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="88" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="88" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="88" PREFIX:column="48">pin_list</name><index PREFIX:line="88" PREFIX:column="56">[<expr><name PREFIX:line="88" PREFIX:column="57">U8G_PI_D0</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="90" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="90" PREFIX:column="23">[<expr PREFIX:line="90" PREFIX:column="24">1</expr>]</index></name> =  <call><name PREFIX:line="90" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="90" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="90" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="90" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="90" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="90" PREFIX:column="71">pin_list</name><index PREFIX:line="90" PREFIX:column="79">[<expr><name PREFIX:line="90" PREFIX:column="80">U8G_PI_D1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="91" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="91" PREFIX:column="22">[<expr PREFIX:line="91" PREFIX:column="23">1</expr>]</index></name> =  <call><name PREFIX:line="91" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="91" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="91" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="91" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="91" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="91" PREFIX:column="69">pin_list</name><index PREFIX:line="91" PREFIX:column="77">[<expr><name PREFIX:line="91" PREFIX:column="78">U8G_PI_D1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="92" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="92" PREFIX:column="16">[<expr PREFIX:line="92" PREFIX:column="17">1</expr>]</index></name> =  <call><name PREFIX:line="92" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="92" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="92" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="92" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="92" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="92" PREFIX:column="62">pin_list</name><index PREFIX:line="92" PREFIX:column="70">[<expr><name PREFIX:line="92" PREFIX:column="71">U8G_PI_D1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="93" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="93" PREFIX:column="16">[<expr PREFIX:line="93" PREFIX:column="17">1</expr>]</index></name> =  <call><name PREFIX:line="93" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="93" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="93" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="93" PREFIX:column="48">pin_list</name><index PREFIX:line="93" PREFIX:column="56">[<expr><name PREFIX:line="93" PREFIX:column="57">U8G_PI_D1</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="95" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="95" PREFIX:column="23">[<expr PREFIX:line="95" PREFIX:column="24">2</expr>]</index></name> =  <call><name PREFIX:line="95" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="95" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="95" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="95" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="95" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="95" PREFIX:column="71">pin_list</name><index PREFIX:line="95" PREFIX:column="79">[<expr><name PREFIX:line="95" PREFIX:column="80">U8G_PI_D2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="96" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="96" PREFIX:column="22">[<expr PREFIX:line="96" PREFIX:column="23">2</expr>]</index></name> =  <call><name PREFIX:line="96" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="96" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="96" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="96" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="96" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="96" PREFIX:column="69">pin_list</name><index PREFIX:line="96" PREFIX:column="77">[<expr><name PREFIX:line="96" PREFIX:column="78">U8G_PI_D2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="97" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="97" PREFIX:column="16">[<expr PREFIX:line="97" PREFIX:column="17">2</expr>]</index></name> =  <call><name PREFIX:line="97" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="97" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="97" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="97" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="97" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="97" PREFIX:column="62">pin_list</name><index PREFIX:line="97" PREFIX:column="70">[<expr><name PREFIX:line="97" PREFIX:column="71">U8G_PI_D2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="98" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="98" PREFIX:column="16">[<expr PREFIX:line="98" PREFIX:column="17">2</expr>]</index></name> =  <call><name PREFIX:line="98" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="98" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="98" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="98" PREFIX:column="48">pin_list</name><index PREFIX:line="98" PREFIX:column="56">[<expr><name PREFIX:line="98" PREFIX:column="57">U8G_PI_D2</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="100" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="100" PREFIX:column="23">[<expr PREFIX:line="100" PREFIX:column="24">3</expr>]</index></name> =  <call><name PREFIX:line="100" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="100" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="100" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="100" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="100" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="100" PREFIX:column="71">pin_list</name><index PREFIX:line="100" PREFIX:column="79">[<expr><name PREFIX:line="100" PREFIX:column="80">U8G_PI_D3</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="101" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="101" PREFIX:column="22">[<expr PREFIX:line="101" PREFIX:column="23">3</expr>]</index></name> =  <call><name PREFIX:line="101" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="101" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="101" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="101" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="101" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="101" PREFIX:column="69">pin_list</name><index PREFIX:line="101" PREFIX:column="77">[<expr><name PREFIX:line="101" PREFIX:column="78">U8G_PI_D3</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="102" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="102" PREFIX:column="16">[<expr PREFIX:line="102" PREFIX:column="17">3</expr>]</index></name> =  <call><name PREFIX:line="102" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="102" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="102" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="102" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="102" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="102" PREFIX:column="62">pin_list</name><index PREFIX:line="102" PREFIX:column="70">[<expr><name PREFIX:line="102" PREFIX:column="71">U8G_PI_D3</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="103" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="103" PREFIX:column="16">[<expr PREFIX:line="103" PREFIX:column="17">3</expr>]</index></name> =  <call><name PREFIX:line="103" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="103" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="103" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="103" PREFIX:column="48">pin_list</name><index PREFIX:line="103" PREFIX:column="56">[<expr><name PREFIX:line="103" PREFIX:column="57">U8G_PI_D3</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="105" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="105" PREFIX:column="23">[<expr PREFIX:line="105" PREFIX:column="24">4</expr>]</index></name> =  <call><name PREFIX:line="105" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="105" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="105" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="105" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="105" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="105" PREFIX:column="71">pin_list</name><index PREFIX:line="105" PREFIX:column="79">[<expr><name PREFIX:line="105" PREFIX:column="80">U8G_PI_D4</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="106" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="106" PREFIX:column="22">[<expr PREFIX:line="106" PREFIX:column="23">4</expr>]</index></name> =  <call><name PREFIX:line="106" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="106" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="106" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="106" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="106" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="106" PREFIX:column="69">pin_list</name><index PREFIX:line="106" PREFIX:column="77">[<expr><name PREFIX:line="106" PREFIX:column="78">U8G_PI_D4</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="107" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="107" PREFIX:column="16">[<expr PREFIX:line="107" PREFIX:column="17">4</expr>]</index></name> =  <call><name PREFIX:line="107" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="107" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="107" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="107" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="107" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="107" PREFIX:column="62">pin_list</name><index PREFIX:line="107" PREFIX:column="70">[<expr><name PREFIX:line="107" PREFIX:column="71">U8G_PI_D4</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="108" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="108" PREFIX:column="16">[<expr PREFIX:line="108" PREFIX:column="17">4</expr>]</index></name> =  <call><name PREFIX:line="108" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="108" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="108" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="108" PREFIX:column="48">pin_list</name><index PREFIX:line="108" PREFIX:column="56">[<expr><name PREFIX:line="108" PREFIX:column="57">U8G_PI_D4</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="110" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="110" PREFIX:column="23">[<expr PREFIX:line="110" PREFIX:column="24">5</expr>]</index></name> =  <call><name PREFIX:line="110" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="110" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="110" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="110" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="110" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="110" PREFIX:column="71">pin_list</name><index PREFIX:line="110" PREFIX:column="79">[<expr><name PREFIX:line="110" PREFIX:column="80">U8G_PI_D5</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="111" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="111" PREFIX:column="22">[<expr PREFIX:line="111" PREFIX:column="23">5</expr>]</index></name> =  <call><name PREFIX:line="111" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="111" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="111" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="111" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="111" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="111" PREFIX:column="69">pin_list</name><index PREFIX:line="111" PREFIX:column="77">[<expr><name PREFIX:line="111" PREFIX:column="78">U8G_PI_D5</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="112" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="112" PREFIX:column="16">[<expr PREFIX:line="112" PREFIX:column="17">5</expr>]</index></name> =  <call><name PREFIX:line="112" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="112" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="112" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="112" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="112" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="112" PREFIX:column="62">pin_list</name><index PREFIX:line="112" PREFIX:column="70">[<expr><name PREFIX:line="112" PREFIX:column="71">U8G_PI_D5</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="113" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="113" PREFIX:column="16">[<expr PREFIX:line="113" PREFIX:column="17">5</expr>]</index></name> =  <call><name PREFIX:line="113" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="113" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="113" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="113" PREFIX:column="48">pin_list</name><index PREFIX:line="113" PREFIX:column="56">[<expr><name PREFIX:line="113" PREFIX:column="57">U8G_PI_D5</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="115" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="115" PREFIX:column="23">[<expr PREFIX:line="115" PREFIX:column="24">6</expr>]</index></name> =  <call><name PREFIX:line="115" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="115" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="115" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="115" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="115" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="115" PREFIX:column="71">pin_list</name><index PREFIX:line="115" PREFIX:column="79">[<expr><name PREFIX:line="115" PREFIX:column="80">U8G_PI_D6</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="116" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="116" PREFIX:column="22">[<expr PREFIX:line="116" PREFIX:column="23">6</expr>]</index></name> =  <call><name PREFIX:line="116" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="116" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="116" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="116" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="116" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="116" PREFIX:column="69">pin_list</name><index PREFIX:line="116" PREFIX:column="77">[<expr><name PREFIX:line="116" PREFIX:column="78">U8G_PI_D6</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="117" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="117" PREFIX:column="16">[<expr PREFIX:line="117" PREFIX:column="17">6</expr>]</index></name> =  <call><name PREFIX:line="117" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="117" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="117" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="117" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="117" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="117" PREFIX:column="62">pin_list</name><index PREFIX:line="117" PREFIX:column="70">[<expr><name PREFIX:line="117" PREFIX:column="71">U8G_PI_D6</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="118" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="118" PREFIX:column="16">[<expr PREFIX:line="118" PREFIX:column="17">6</expr>]</index></name> =  <call><name PREFIX:line="118" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="118" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="118" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="118" PREFIX:column="48">pin_list</name><index PREFIX:line="118" PREFIX:column="56">[<expr><name PREFIX:line="118" PREFIX:column="57">U8G_PI_D6</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="120" PREFIX:column="3">u8g_output_data_port</name><index PREFIX:line="120" PREFIX:column="23">[<expr PREFIX:line="120" PREFIX:column="24">7</expr>]</index></name> =  <call><name PREFIX:line="120" PREFIX:column="30">portOutputRegister</name><argument_list PREFIX:line="120" PREFIX:column="48">(<argument><expr><call><name PREFIX:line="120" PREFIX:column="49">digitalPinToPort</name><argument_list PREFIX:line="120" PREFIX:column="65">(<argument><expr><name><name PREFIX:line="120" PREFIX:column="66">u8g</name>-&gt;<name PREFIX:line="120" PREFIX:column="71">pin_list</name><index PREFIX:line="120" PREFIX:column="79">[<expr><name PREFIX:line="120" PREFIX:column="80">U8G_PI_D7</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="121" PREFIX:column="3">u8g_input_data_port</name><index PREFIX:line="121" PREFIX:column="22">[<expr PREFIX:line="121" PREFIX:column="23">7</expr>]</index></name> =  <call><name PREFIX:line="121" PREFIX:column="29">portInputRegister</name><argument_list PREFIX:line="121" PREFIX:column="46">(<argument><expr><call><name PREFIX:line="121" PREFIX:column="47">digitalPinToPort</name><argument_list PREFIX:line="121" PREFIX:column="63">(<argument><expr><name><name PREFIX:line="121" PREFIX:column="64">u8g</name>-&gt;<name PREFIX:line="121" PREFIX:column="69">pin_list</name><index PREFIX:line="121" PREFIX:column="77">[<expr><name PREFIX:line="121" PREFIX:column="78">U8G_PI_D7</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="122" PREFIX:column="3">u8g_mode_port</name><index PREFIX:line="122" PREFIX:column="16">[<expr PREFIX:line="122" PREFIX:column="17">7</expr>]</index></name> =  <call><name PREFIX:line="122" PREFIX:column="23">portModeRegister</name><argument_list PREFIX:line="122" PREFIX:column="39">(<argument><expr><call><name PREFIX:line="122" PREFIX:column="40">digitalPinToPort</name><argument_list PREFIX:line="122" PREFIX:column="56">(<argument><expr><name><name PREFIX:line="122" PREFIX:column="57">u8g</name>-&gt;<name PREFIX:line="122" PREFIX:column="62">pin_list</name><index PREFIX:line="122" PREFIX:column="70">[<expr><name PREFIX:line="122" PREFIX:column="71">U8G_PI_D7</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="123" PREFIX:column="3">u8g_data_mask</name><index PREFIX:line="123" PREFIX:column="16">[<expr PREFIX:line="123" PREFIX:column="17">7</expr>]</index></name> =  <call><name PREFIX:line="123" PREFIX:column="23">digitalPinToBitMask</name><argument_list PREFIX:line="123" PREFIX:column="42">(<argument><expr><name><name PREFIX:line="123" PREFIX:column="43">u8g</name>-&gt;<name PREFIX:line="123" PREFIX:column="48">pin_list</name><index PREFIX:line="123" PREFIX:column="56">[<expr><name PREFIX:line="123" PREFIX:column="57">U8G_PI_D7</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
}</block></function>

<function><type><specifier PREFIX:line="126" PREFIX:column="1">static</specifier> <name PREFIX:line="126" PREFIX:column="8">void</name></type> <name PREFIX:line="126" PREFIX:column="13">u8g_com_arduino_t6963_write_data_pin</name><parameter_list PREFIX:line="126" PREFIX:column="49">(<param><decl><type><name PREFIX:line="126" PREFIX:column="50">uint8_t</name></type> <name PREFIX:line="126" PREFIX:column="58">pin</name></decl></param>, <param><decl><type><name PREFIX:line="126" PREFIX:column="63">uint8_t</name></type> <name PREFIX:line="126" PREFIX:column="71">val</name></decl></param>)</parameter_list>
<block PREFIX:line="127" PREFIX:column="1">{
  <if PREFIX:line="128" PREFIX:column="3">if <condition PREFIX:line="128" PREFIX:column="6">( <expr><name PREFIX:line="128" PREFIX:column="8">val</name> != 0</expr> )</condition><then PREFIX:line="128" PREFIX:column="18">
    <expr_stmt><expr PREFIX:line="129" PREFIX:column="5">*<name><name PREFIX:line="129" PREFIX:column="6">u8g_output_data_port</name><index PREFIX:line="129" PREFIX:column="26">[<expr><name PREFIX:line="129" PREFIX:column="27">pin</name></expr>]</index></name> |= <name><name PREFIX:line="129" PREFIX:column="35">u8g_data_mask</name><index PREFIX:line="129" PREFIX:column="48">[<expr><name PREFIX:line="129" PREFIX:column="49">pin</name></expr>]</index></name></expr>;</expr_stmt></then>
  <else PREFIX:line="130" PREFIX:column="3">else
    <expr_stmt><expr PREFIX:line="131" PREFIX:column="5">*<name><name PREFIX:line="131" PREFIX:column="6">u8g_output_data_port</name><index PREFIX:line="131" PREFIX:column="26">[<expr><name PREFIX:line="131" PREFIX:column="27">pin</name></expr>]</index></name> &amp;= ~<name><name PREFIX:line="131" PREFIX:column="36">u8g_data_mask</name><index PREFIX:line="131" PREFIX:column="49">[<expr><name PREFIX:line="131" PREFIX:column="50">pin</name></expr>]</index></name></expr>;</expr_stmt></else></if>
}</block></function>

<function><type><specifier PREFIX:line="134" PREFIX:column="1">static</specifier> <name PREFIX:line="134" PREFIX:column="8">void</name></type> <name PREFIX:line="134" PREFIX:column="13">u8g_com_arduino_t6963_set_port_output</name><parameter_list PREFIX:line="134" PREFIX:column="50">(<param><decl><type><name PREFIX:line="134" PREFIX:column="51">void</name></type></decl></param>)</parameter_list>
<block PREFIX:line="135" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="136" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="136" PREFIX:column="11">i</name></decl>;</decl_stmt>
  <for PREFIX:line="137" PREFIX:column="3">for( <init><expr><name PREFIX:line="137" PREFIX:column="8">i</name> = 0</expr>;</init> <condition><expr><name PREFIX:line="137" PREFIX:column="15">i</name> &lt; 8</expr>;</condition> <incr><expr><name PREFIX:line="137" PREFIX:column="22">i</name>++</expr></incr> )
  <block PREFIX:line="138" PREFIX:column="3">{
<cpp:if PREFIX:line="139" PREFIX:column="1">#<cpp:directive PREFIX:line="139" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="139" PREFIX:column="5">defined</name><argument_list PREFIX:line="139" PREFIX:column="12">(<argument><expr><name PREFIX:line="139" PREFIX:column="13">__PIC32MX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<comment type="block" PREFIX:line="140" PREFIX:column="1">/* CHIPKIT PIC32 */</comment>
      <expr_stmt><expr PREFIX:line="141" PREFIX:column="7">*<name><name PREFIX:line="141" PREFIX:column="8">u8g_mode_port</name><index PREFIX:line="141" PREFIX:column="21">[<expr><name PREFIX:line="141" PREFIX:column="22">i</name></expr>]</index></name> |= <name><name PREFIX:line="141" PREFIX:column="28">u8g_data_mask</name><index PREFIX:line="141" PREFIX:column="41">[<expr><name PREFIX:line="141" PREFIX:column="42">i</name></expr>]</index></name></expr>;</expr_stmt> 
<cpp:elif PREFIX:line="142" PREFIX:column="1">#<cpp:directive PREFIX:line="142" PREFIX:column="2">elif</cpp:directive> <expr><call><name PREFIX:line="142" PREFIX:column="7">defined</name><argument_list PREFIX:line="142" PREFIX:column="14">(<argument><expr><name PREFIX:line="142" PREFIX:column="15">__AVR__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
      <expr_stmt><expr PREFIX:line="143" PREFIX:column="7">*<name><name PREFIX:line="143" PREFIX:column="8">u8g_mode_port</name><index PREFIX:line="143" PREFIX:column="21">[<expr><name PREFIX:line="143" PREFIX:column="22">i</name></expr>]</index></name> |= <name><name PREFIX:line="143" PREFIX:column="28">u8g_data_mask</name><index PREFIX:line="143" PREFIX:column="41">[<expr><name PREFIX:line="143" PREFIX:column="42">i</name></expr>]</index></name></expr>;</expr_stmt> 
<cpp:else PREFIX:line="144" PREFIX:column="1">#<cpp:directive PREFIX:line="144" PREFIX:column="2">else</cpp:directive></cpp:else>
      <comment type="block" PREFIX:line="145" PREFIX:column="7">/* TODO: use generic Arduino API */</comment>
      <expr_stmt><expr PREFIX:line="146" PREFIX:column="7">*<name><name PREFIX:line="146" PREFIX:column="8">u8g_mode_port</name><index PREFIX:line="146" PREFIX:column="21">[<expr><name PREFIX:line="146" PREFIX:column="22">i</name></expr>]</index></name> |= <name><name PREFIX:line="146" PREFIX:column="28">u8g_data_mask</name><index PREFIX:line="146" PREFIX:column="41">[<expr><name PREFIX:line="146" PREFIX:column="42">i</name></expr>]</index></name></expr>;</expr_stmt> 
<cpp:endif PREFIX:line="147" PREFIX:column="1">#<cpp:directive PREFIX:line="147" PREFIX:column="2">endif</cpp:directive></cpp:endif>

  }</block></for>
}</block></function>

<function><type><specifier PREFIX:line="152" PREFIX:column="1">static</specifier> <name PREFIX:line="152" PREFIX:column="8">void</name></type> <name PREFIX:line="152" PREFIX:column="13">u8g_com_arduino_t6963_set_port_input</name><parameter_list PREFIX:line="152" PREFIX:column="49">(<param><decl><type><name PREFIX:line="152" PREFIX:column="50">void</name></type></decl></param>)</parameter_list>
<block PREFIX:line="153" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="154" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="154" PREFIX:column="11">i</name></decl>;</decl_stmt>
  <for PREFIX:line="155" PREFIX:column="3">for( <init><expr><name PREFIX:line="155" PREFIX:column="8">i</name> = 0</expr>;</init> <condition><expr><name PREFIX:line="155" PREFIX:column="15">i</name> &lt; 8</expr>;</condition> <incr><expr><name PREFIX:line="155" PREFIX:column="22">i</name>++</expr></incr> )
  <block PREFIX:line="156" PREFIX:column="3">{
<cpp:if PREFIX:line="157" PREFIX:column="1">#<cpp:directive PREFIX:line="157" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="157" PREFIX:column="5">defined</name><argument_list PREFIX:line="157" PREFIX:column="12">(<argument><expr><name PREFIX:line="157" PREFIX:column="13">__PIC32MX</name></expr></argument>)</argument_list></call></expr></cpp:if>
<comment type="block" PREFIX:line="158" PREFIX:column="1">/* CHIPKIT PIC32 */</comment>
      <expr_stmt><expr PREFIX:line="159" PREFIX:column="7">*<name><name PREFIX:line="159" PREFIX:column="8">u8g_mode_port</name><index PREFIX:line="159" PREFIX:column="21">[<expr><name PREFIX:line="159" PREFIX:column="22">i</name></expr>]</index></name> &amp;= ~<name><name PREFIX:line="159" PREFIX:column="29">u8g_data_mask</name><index PREFIX:line="159" PREFIX:column="42">[<expr><name PREFIX:line="159" PREFIX:column="43">i</name></expr>]</index></name></expr>;</expr_stmt> 
<cpp:elif PREFIX:line="160" PREFIX:column="1">#<cpp:directive PREFIX:line="160" PREFIX:column="2">elif</cpp:directive> <expr><call><name PREFIX:line="160" PREFIX:column="7">defined</name><argument_list PREFIX:line="160" PREFIX:column="14">(<argument><expr><name PREFIX:line="160" PREFIX:column="15">__AVR__</name></expr></argument>)</argument_list></call></expr></cpp:elif>
<comment type="block" PREFIX:line="161" PREFIX:column="1">/* avr */</comment>
      <expr_stmt><expr PREFIX:line="162" PREFIX:column="7">*<name><name PREFIX:line="162" PREFIX:column="8">u8g_mode_port</name><index PREFIX:line="162" PREFIX:column="21">[<expr><name PREFIX:line="162" PREFIX:column="22">i</name></expr>]</index></name> &amp;= ~<name><name PREFIX:line="162" PREFIX:column="29">u8g_data_mask</name><index PREFIX:line="162" PREFIX:column="42">[<expr><name PREFIX:line="162" PREFIX:column="43">i</name></expr>]</index></name></expr>;</expr_stmt> 
      <expr_stmt><expr PREFIX:line="163" PREFIX:column="7">*<name><name PREFIX:line="163" PREFIX:column="8">u8g_output_data_port</name><index PREFIX:line="163" PREFIX:column="28">[<expr><name PREFIX:line="163" PREFIX:column="29">i</name></expr>]</index></name> &amp;= ~<name><name PREFIX:line="163" PREFIX:column="36">u8g_data_mask</name><index PREFIX:line="163" PREFIX:column="49">[<expr><name PREFIX:line="163" PREFIX:column="50">i</name></expr>]</index></name></expr>;</expr_stmt> 	<comment type="line" PREFIX:line="163" PREFIX:column="57">// no pullup</comment>
<cpp:else PREFIX:line="164" PREFIX:column="1">#<cpp:directive PREFIX:line="164" PREFIX:column="2">else</cpp:directive></cpp:else>
      <comment type="block" PREFIX:line="165" PREFIX:column="7">/* TODO: use generic Arduino API */</comment>
      <expr_stmt><expr PREFIX:line="166" PREFIX:column="7">*<name><name PREFIX:line="166" PREFIX:column="8">u8g_mode_port</name><index PREFIX:line="166" PREFIX:column="21">[<expr><name PREFIX:line="166" PREFIX:column="22">i</name></expr>]</index></name> &amp;= ~<name><name PREFIX:line="166" PREFIX:column="29">u8g_data_mask</name><index PREFIX:line="166" PREFIX:column="42">[<expr><name PREFIX:line="166" PREFIX:column="43">i</name></expr>]</index></name></expr>;</expr_stmt> 
      <expr_stmt><expr PREFIX:line="167" PREFIX:column="7">*<name><name PREFIX:line="167" PREFIX:column="8">u8g_output_data_port</name><index PREFIX:line="167" PREFIX:column="28">[<expr><name PREFIX:line="167" PREFIX:column="29">i</name></expr>]</index></name> &amp;= ~<name><name PREFIX:line="167" PREFIX:column="36">u8g_data_mask</name><index PREFIX:line="167" PREFIX:column="49">[<expr><name PREFIX:line="167" PREFIX:column="50">i</name></expr>]</index></name></expr>;</expr_stmt> 	<comment type="line" PREFIX:line="167" PREFIX:column="57">// no pullup</comment>
<cpp:endif PREFIX:line="168" PREFIX:column="1">#<cpp:directive PREFIX:line="168" PREFIX:column="2">endif</cpp:directive></cpp:endif>
  }</block></for>
}</block></function>


<function><type><specifier PREFIX:line="173" PREFIX:column="1">static</specifier> <name PREFIX:line="173" PREFIX:column="8">void</name></type> <name PREFIX:line="173" PREFIX:column="13">u8g_com_arduino_t6963_write</name><parameter_list PREFIX:line="173" PREFIX:column="40">(<param><decl><type><name PREFIX:line="173" PREFIX:column="41">u8g_t</name> *</type><name PREFIX:line="173" PREFIX:column="48">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="173" PREFIX:column="53">uint8_t</name></type> <name PREFIX:line="173" PREFIX:column="61">val</name></decl></param>)</parameter_list>
<block PREFIX:line="174" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="175" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="175" PREFIX:column="39">( <argument><expr PREFIX:line="175" PREFIX:column="41">0</expr></argument>, <argument><expr><name PREFIX:line="175" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="176" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="177" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="177" PREFIX:column="39">( <argument><expr PREFIX:line="177" PREFIX:column="41">1</expr></argument>, <argument><expr><name PREFIX:line="177" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="178" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="179" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="179" PREFIX:column="39">( <argument><expr PREFIX:line="179" PREFIX:column="41">2</expr></argument>, <argument><expr><name PREFIX:line="179" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="180" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="181" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="181" PREFIX:column="39">( <argument><expr PREFIX:line="181" PREFIX:column="41">3</expr></argument>, <argument><expr><name PREFIX:line="181" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="182" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>

  <expr_stmt><expr><call><name PREFIX:line="184" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="184" PREFIX:column="39">( <argument><expr PREFIX:line="184" PREFIX:column="41">4</expr></argument>, <argument><expr><name PREFIX:line="184" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="185" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="186" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="186" PREFIX:column="39">( <argument><expr PREFIX:line="186" PREFIX:column="41">5</expr></argument>, <argument><expr><name PREFIX:line="186" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="187" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="188" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="188" PREFIX:column="39">( <argument><expr PREFIX:line="188" PREFIX:column="41">6</expr></argument>, <argument><expr><name PREFIX:line="188" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="189" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="190" PREFIX:column="3">u8g_com_arduino_t6963_write_data_pin</name><argument_list PREFIX:line="190" PREFIX:column="39">( <argument><expr PREFIX:line="190" PREFIX:column="41">7</expr></argument>, <argument><expr><name PREFIX:line="190" PREFIX:column="44">val</name>&amp;1</expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="191" PREFIX:column="3">val</name> &gt;&gt;= 1</expr>;</expr_stmt>
  
  <expr_stmt><expr><call><name PREFIX:line="193" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="193" PREFIX:column="32">(<argument><expr><name PREFIX:line="193" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="193" PREFIX:column="38">U8G_PI_WR</name></expr></argument>, <argument><expr PREFIX:line="193" PREFIX:column="49">0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="194" PREFIX:column="3">u8g_MicroDelay</name><argument_list PREFIX:line="194" PREFIX:column="17">()</argument_list></call></expr>;</expr_stmt> <comment type="block" PREFIX:line="194" PREFIX:column="21">/* 80ns, reference: t6963 datasheet */</comment>
  <expr_stmt><expr><call><name PREFIX:line="195" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="195" PREFIX:column="32">(<argument><expr><name PREFIX:line="195" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="195" PREFIX:column="38">U8G_PI_WR</name></expr></argument>, <argument><expr PREFIX:line="195" PREFIX:column="49">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="196" PREFIX:column="3">u8g_MicroDelay</name><argument_list PREFIX:line="196" PREFIX:column="17">()</argument_list></call></expr>;</expr_stmt> <comment type="block" PREFIX:line="196" PREFIX:column="21">/* 10ns, reference: t6963 datasheet */</comment>
}</block></function>

<function><type><specifier PREFIX:line="199" PREFIX:column="1">static</specifier> <name PREFIX:line="199" PREFIX:column="8">uint8_t</name></type> <name PREFIX:line="199" PREFIX:column="16">u8g_com_arduino_t6963_read</name><parameter_list PREFIX:line="199" PREFIX:column="42">(<param><decl><type><name PREFIX:line="199" PREFIX:column="43">u8g_t</name> *</type><name PREFIX:line="199" PREFIX:column="50">u8g</name></decl></param>)</parameter_list>
<block PREFIX:line="200" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="201" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="201" PREFIX:column="11">val</name> <init PREFIX:line="201" PREFIX:column="15">= <expr PREFIX:line="201" PREFIX:column="17">0</expr></init></decl>;</decl_stmt>
  
  <expr_stmt><expr><call><name PREFIX:line="203" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="203" PREFIX:column="32">(<argument><expr><name PREFIX:line="203" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="203" PREFIX:column="38">U8G_PI_RD</name></expr></argument>, <argument><expr PREFIX:line="203" PREFIX:column="49">0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="204" PREFIX:column="3">u8g_MicroDelay</name><argument_list PREFIX:line="204" PREFIX:column="17">()</argument_list></call></expr>;</expr_stmt> <comment type="block" PREFIX:line="204" PREFIX:column="21">/* 150ns, reference: t6963 datasheet */</comment>
  
  <comment type="block" PREFIX:line="206" PREFIX:column="3">/* only read bits 0, 1 and 3 */</comment>
  <if PREFIX:line="207" PREFIX:column="3">if <condition PREFIX:line="207" PREFIX:column="6">( <expr PREFIX:line="207" PREFIX:column="8">(*<name><name PREFIX:line="207" PREFIX:column="10">u8g_input_data_port</name><index PREFIX:line="207" PREFIX:column="29">[<expr PREFIX:line="207" PREFIX:column="30">3</expr>]</index></name> &amp; <name><name PREFIX:line="207" PREFIX:column="35">u8g_data_mask</name><index PREFIX:line="207" PREFIX:column="48">[<expr PREFIX:line="207" PREFIX:column="49">3</expr>]</index></name>) != 0</expr> )</condition><then PREFIX:line="207" PREFIX:column="59">
    <expr_stmt><expr><name PREFIX:line="208" PREFIX:column="5">val</name>++</expr>;</expr_stmt></then></if>
  <expr_stmt><expr><name PREFIX:line="209" PREFIX:column="3">val</name> &lt;&lt;= 1</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="210" PREFIX:column="3">val</name> &lt;&lt;= 1</expr>;</expr_stmt>
  <if PREFIX:line="211" PREFIX:column="3">if <condition PREFIX:line="211" PREFIX:column="6">( <expr PREFIX:line="211" PREFIX:column="8">(*<name><name PREFIX:line="211" PREFIX:column="10">u8g_input_data_port</name><index PREFIX:line="211" PREFIX:column="29">[<expr PREFIX:line="211" PREFIX:column="30">1</expr>]</index></name> &amp; <name><name PREFIX:line="211" PREFIX:column="35">u8g_data_mask</name><index PREFIX:line="211" PREFIX:column="48">[<expr PREFIX:line="211" PREFIX:column="49">1</expr>]</index></name>) != 0</expr> )</condition><then PREFIX:line="211" PREFIX:column="59">
    <expr_stmt><expr><name PREFIX:line="212" PREFIX:column="5">val</name>++</expr>;</expr_stmt></then></if>
  <expr_stmt><expr><name PREFIX:line="213" PREFIX:column="3">val</name> &lt;&lt;= 1</expr>;</expr_stmt>
  <if PREFIX:line="214" PREFIX:column="3">if <condition PREFIX:line="214" PREFIX:column="6">( <expr PREFIX:line="214" PREFIX:column="8">(*<name><name PREFIX:line="214" PREFIX:column="10">u8g_input_data_port</name><index PREFIX:line="214" PREFIX:column="29">[<expr PREFIX:line="214" PREFIX:column="30">0</expr>]</index></name> &amp; <name><name PREFIX:line="214" PREFIX:column="35">u8g_data_mask</name><index PREFIX:line="214" PREFIX:column="48">[<expr PREFIX:line="214" PREFIX:column="49">0</expr>]</index></name>) != 0</expr> )</condition><then PREFIX:line="214" PREFIX:column="59">
    <expr_stmt><expr><name PREFIX:line="215" PREFIX:column="5">val</name>++</expr>;</expr_stmt></then></if>
    
  <expr_stmt><expr><call><name PREFIX:line="217" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="217" PREFIX:column="32">(<argument><expr><name PREFIX:line="217" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="217" PREFIX:column="38">U8G_PI_RD</name></expr></argument>, <argument><expr PREFIX:line="217" PREFIX:column="49">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="218" PREFIX:column="3">u8g_MicroDelay</name><argument_list PREFIX:line="218" PREFIX:column="17">()</argument_list></call></expr>;</expr_stmt> <comment type="block" PREFIX:line="218" PREFIX:column="21">/* 10ns, reference: t6963 datasheet */</comment>
  
  <return PREFIX:line="220" PREFIX:column="3">return <expr><name PREFIX:line="220" PREFIX:column="10">val</name></expr>;</return>
}</block></function>

<cpp:define PREFIX:line="223" PREFIX:column="1">#<cpp:directive PREFIX:line="223" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="223" PREFIX:column="9">U8G_STATUS_TIMEOUT</name></cpp:macro> <cpp:value PREFIX:line="223" PREFIX:column="28">50</cpp:value></cpp:define>

<function><type><specifier PREFIX:line="225" PREFIX:column="1">static</specifier> <name PREFIX:line="225" PREFIX:column="8">uint8_t</name></type> <name PREFIX:line="225" PREFIX:column="16">u8g_com_arduino_t6963_until_01_ok</name><parameter_list PREFIX:line="225" PREFIX:column="49">(<param><decl><type><name PREFIX:line="225" PREFIX:column="50">u8g_t</name> *</type><name PREFIX:line="225" PREFIX:column="57">u8g</name></decl></param>)</parameter_list>
<block PREFIX:line="226" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="227" PREFIX:column="3">long</name></type> <name PREFIX:line="227" PREFIX:column="8">x</name></decl>;</decl_stmt>
  
  <expr_stmt><expr><call><name PREFIX:line="229" PREFIX:column="3">u8g_com_arduino_t6963_set_port_input</name><argument_list PREFIX:line="229" PREFIX:column="39">()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="230" PREFIX:column="3">x</name> = <call><name PREFIX:line="230" PREFIX:column="7">millis</name><argument_list PREFIX:line="230" PREFIX:column="13">()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="231" PREFIX:column="3">x</name> += <name PREFIX:line="231" PREFIX:column="8">U8G_STATUS_TIMEOUT</name></expr>;</expr_stmt>

  <for PREFIX:line="233" PREFIX:column="3">for(<init PREFIX:line="233" PREFIX:column="7">;</init><condition PREFIX:line="233" PREFIX:column="8">;</condition><incr/>)
  <block PREFIX:line="234" PREFIX:column="3">{    
    <if PREFIX:line="235" PREFIX:column="5">if <condition PREFIX:line="235" PREFIX:column="8">( <expr PREFIX:line="235" PREFIX:column="10">(<call><name PREFIX:line="235" PREFIX:column="11">u8g_com_arduino_t6963_read</name><argument_list PREFIX:line="235" PREFIX:column="37">(<argument><expr><name PREFIX:line="235" PREFIX:column="38">u8g</name></expr></argument>)</argument_list></call> &amp; 3) == 3</expr> )</condition><then PREFIX:line="235" PREFIX:column="54">
      <break PREFIX:line="236" PREFIX:column="7">break;</break></then></if>
    <if PREFIX:line="237" PREFIX:column="5">if <condition PREFIX:line="237" PREFIX:column="8">( <expr><name PREFIX:line="237" PREFIX:column="10">x</name> &lt; <call><name PREFIX:line="237" PREFIX:column="14">millis</name><argument_list PREFIX:line="237" PREFIX:column="20">()</argument_list></call></expr> )</condition><then PREFIX:line="237" PREFIX:column="24">
      <return PREFIX:line="238" PREFIX:column="7">return <expr PREFIX:line="238" PREFIX:column="14">0</expr>;</return></then></if>
  }</block></for>
  <expr_stmt><expr><call><name PREFIX:line="240" PREFIX:column="3">u8g_com_arduino_t6963_set_port_output</name><argument_list PREFIX:line="240" PREFIX:column="40">()</argument_list></call></expr>;</expr_stmt>
  <return PREFIX:line="241" PREFIX:column="3">return <expr PREFIX:line="241" PREFIX:column="10">1</expr>;</return>
}</block></function>

<function><type><specifier PREFIX:line="244" PREFIX:column="1">static</specifier> <name PREFIX:line="244" PREFIX:column="8">uint8_t</name></type> <name PREFIX:line="244" PREFIX:column="16">u8g_com_arduino_t6963_until_3_ok</name><parameter_list PREFIX:line="244" PREFIX:column="48">(<param><decl><type><name PREFIX:line="244" PREFIX:column="49">u8g_t</name> *</type><name PREFIX:line="244" PREFIX:column="56">u8g</name></decl></param>)</parameter_list>
<block PREFIX:line="245" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="246" PREFIX:column="3">long</name></type> <name PREFIX:line="246" PREFIX:column="8">x</name></decl>;</decl_stmt>
  
  <expr_stmt><expr><call><name PREFIX:line="248" PREFIX:column="3">u8g_com_arduino_t6963_set_port_input</name><argument_list PREFIX:line="248" PREFIX:column="39">()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="249" PREFIX:column="3">x</name> = <call><name PREFIX:line="249" PREFIX:column="7">millis</name><argument_list PREFIX:line="249" PREFIX:column="13">()</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="250" PREFIX:column="3">x</name> += <name PREFIX:line="250" PREFIX:column="8">U8G_STATUS_TIMEOUT</name></expr>;</expr_stmt>

  <for PREFIX:line="252" PREFIX:column="3">for(<init PREFIX:line="252" PREFIX:column="7">;</init><condition PREFIX:line="252" PREFIX:column="8">;</condition><incr/>)
  <block PREFIX:line="253" PREFIX:column="3">{    
    <if PREFIX:line="254" PREFIX:column="5">if <condition PREFIX:line="254" PREFIX:column="8">( <expr PREFIX:line="254" PREFIX:column="10">(<call><name PREFIX:line="254" PREFIX:column="11">u8g_com_arduino_t6963_read</name><argument_list PREFIX:line="254" PREFIX:column="37">(<argument><expr><name PREFIX:line="254" PREFIX:column="38">u8g</name></expr></argument>)</argument_list></call> &amp; 8) == 8</expr> )</condition><then PREFIX:line="254" PREFIX:column="54">
      <break PREFIX:line="255" PREFIX:column="7">break;</break></then></if>
    <if PREFIX:line="256" PREFIX:column="5">if <condition PREFIX:line="256" PREFIX:column="8">( <expr><name PREFIX:line="256" PREFIX:column="10">x</name> &lt; <call><name PREFIX:line="256" PREFIX:column="14">millis</name><argument_list PREFIX:line="256" PREFIX:column="20">()</argument_list></call></expr> )</condition><then PREFIX:line="256" PREFIX:column="24">
      <return PREFIX:line="257" PREFIX:column="7">return <expr PREFIX:line="257" PREFIX:column="14">0</expr>;</return></then></if>
  }</block></for>
  <expr_stmt><expr><call><name PREFIX:line="259" PREFIX:column="3">u8g_com_arduino_t6963_set_port_output</name><argument_list PREFIX:line="259" PREFIX:column="40">()</argument_list></call></expr>;</expr_stmt>
  <return PREFIX:line="260" PREFIX:column="3">return <expr PREFIX:line="260" PREFIX:column="10">1</expr>;</return>
}</block></function>

<function><type><specifier PREFIX:line="263" PREFIX:column="1">static</specifier> <name PREFIX:line="263" PREFIX:column="8">uint8_t</name></type> <name PREFIX:line="263" PREFIX:column="16">u8g_com_arduino_t6963_write_cmd</name><parameter_list PREFIX:line="263" PREFIX:column="47">(<param><decl><type><name PREFIX:line="263" PREFIX:column="48">u8g_t</name> *</type><name PREFIX:line="263" PREFIX:column="55">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="263" PREFIX:column="60">uint8_t</name></type> <name PREFIX:line="263" PREFIX:column="68">val</name></decl></param>)</parameter_list>
<block PREFIX:line="264" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="265" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="265" PREFIX:column="32">(<argument><expr><name PREFIX:line="265" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="265" PREFIX:column="38">U8G_PI_A0</name></expr></argument>, <argument><expr PREFIX:line="265" PREFIX:column="49">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if PREFIX:line="266" PREFIX:column="3">if <condition PREFIX:line="266" PREFIX:column="6">( <expr><call><name PREFIX:line="266" PREFIX:column="8">u8g_com_arduino_t6963_until_01_ok</name><argument_list PREFIX:line="266" PREFIX:column="41">(<argument><expr><name PREFIX:line="266" PREFIX:column="42">u8g</name></expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="266" PREFIX:column="53">
    <return PREFIX:line="267" PREFIX:column="5">return <expr PREFIX:line="267" PREFIX:column="12">0</expr>;</return></then></if>
  <expr_stmt><expr><call><name PREFIX:line="268" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="268" PREFIX:column="32">(<argument><expr><name PREFIX:line="268" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="268" PREFIX:column="38">U8G_PI_A0</name></expr></argument>, <argument><expr PREFIX:line="268" PREFIX:column="49">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="269" PREFIX:column="3">u8g_com_arduino_t6963_write</name><argument_list PREFIX:line="269" PREFIX:column="30">(<argument><expr><name PREFIX:line="269" PREFIX:column="31">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="269" PREFIX:column="36">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return PREFIX:line="270" PREFIX:column="3">return <expr PREFIX:line="270" PREFIX:column="10">1</expr>;</return>  
}</block></function>

<function><type><specifier PREFIX:line="273" PREFIX:column="1">static</specifier> <name PREFIX:line="273" PREFIX:column="8">uint8_t</name></type> <name PREFIX:line="273" PREFIX:column="16">u8g_com_arduino_t6963_write_data</name><parameter_list PREFIX:line="273" PREFIX:column="48">(<param><decl><type><name PREFIX:line="273" PREFIX:column="49">u8g_t</name> *</type><name PREFIX:line="273" PREFIX:column="56">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="273" PREFIX:column="61">uint8_t</name></type> <name PREFIX:line="273" PREFIX:column="69">val</name></decl></param>)</parameter_list>
<block PREFIX:line="274" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="275" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="275" PREFIX:column="32">(<argument><expr><name PREFIX:line="275" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="275" PREFIX:column="38">U8G_PI_A0</name></expr></argument>, <argument><expr PREFIX:line="275" PREFIX:column="49">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if PREFIX:line="276" PREFIX:column="3">if <condition PREFIX:line="276" PREFIX:column="6">( <expr><call><name PREFIX:line="276" PREFIX:column="8">u8g_com_arduino_t6963_until_01_ok</name><argument_list PREFIX:line="276" PREFIX:column="41">(<argument><expr><name PREFIX:line="276" PREFIX:column="42">u8g</name></expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="276" PREFIX:column="53">
    <return PREFIX:line="277" PREFIX:column="5">return <expr PREFIX:line="277" PREFIX:column="12">0</expr>;</return></then></if>
  <expr_stmt><expr><call><name PREFIX:line="278" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="278" PREFIX:column="32">(<argument><expr><name PREFIX:line="278" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="278" PREFIX:column="38">U8G_PI_A0</name></expr></argument>, <argument><expr PREFIX:line="278" PREFIX:column="49">0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="279" PREFIX:column="3">u8g_com_arduino_t6963_write</name><argument_list PREFIX:line="279" PREFIX:column="30">(<argument><expr><name PREFIX:line="279" PREFIX:column="31">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="279" PREFIX:column="36">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return PREFIX:line="280" PREFIX:column="3">return <expr PREFIX:line="280" PREFIX:column="10">1</expr>;</return>  
}</block></function>

<function><type><specifier PREFIX:line="283" PREFIX:column="1">static</specifier> <name PREFIX:line="283" PREFIX:column="8">uint8_t</name></type> <name PREFIX:line="283" PREFIX:column="16">u8g_com_arduino_t6963_write_auto_data</name><parameter_list PREFIX:line="283" PREFIX:column="53">(<param><decl><type><name PREFIX:line="283" PREFIX:column="54">u8g_t</name> *</type><name PREFIX:line="283" PREFIX:column="61">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="283" PREFIX:column="66">uint8_t</name></type> <name PREFIX:line="283" PREFIX:column="74">val</name></decl></param>)</parameter_list>
<block PREFIX:line="284" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="285" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="285" PREFIX:column="32">(<argument><expr><name PREFIX:line="285" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="285" PREFIX:column="38">U8G_PI_A0</name></expr></argument>, <argument><expr PREFIX:line="285" PREFIX:column="49">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if PREFIX:line="286" PREFIX:column="3">if <condition PREFIX:line="286" PREFIX:column="6">( <expr><call><name PREFIX:line="286" PREFIX:column="8">u8g_com_arduino_t6963_until_3_ok</name><argument_list PREFIX:line="286" PREFIX:column="40">(<argument><expr><name PREFIX:line="286" PREFIX:column="41">u8g</name></expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="286" PREFIX:column="52">
    <return PREFIX:line="287" PREFIX:column="5">return <expr PREFIX:line="287" PREFIX:column="12">0</expr>;</return></then></if>
  <expr_stmt><expr><call><name PREFIX:line="288" PREFIX:column="3">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="288" PREFIX:column="32">(<argument><expr><name PREFIX:line="288" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="288" PREFIX:column="38">U8G_PI_A0</name></expr></argument>, <argument><expr PREFIX:line="288" PREFIX:column="49">0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="289" PREFIX:column="3">u8g_com_arduino_t6963_write</name><argument_list PREFIX:line="289" PREFIX:column="30">(<argument><expr><name PREFIX:line="289" PREFIX:column="31">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="289" PREFIX:column="36">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return PREFIX:line="290" PREFIX:column="3">return <expr PREFIX:line="290" PREFIX:column="10">1</expr>;</return>  
}</block></function>


<function><type><name PREFIX:line="294" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="294" PREFIX:column="9">u8g_com_arduino_t6963_fn</name><parameter_list PREFIX:line="294" PREFIX:column="33">(<param><decl><type><name PREFIX:line="294" PREFIX:column="34">u8g_t</name> *</type><name PREFIX:line="294" PREFIX:column="41">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="294" PREFIX:column="46">uint8_t</name></type> <name PREFIX:line="294" PREFIX:column="54">msg</name></decl></param>, <param><decl><type><name PREFIX:line="294" PREFIX:column="59">uint8_t</name></type> <name PREFIX:line="294" PREFIX:column="67">arg_val</name></decl></param>, <param><decl><type><name PREFIX:line="294" PREFIX:column="76">void</name> *</type><name PREFIX:line="294" PREFIX:column="82">arg_ptr</name></decl></param>)</parameter_list>
<block PREFIX:line="295" PREFIX:column="1">{
  <switch PREFIX:line="296" PREFIX:column="3">switch<condition PREFIX:line="296" PREFIX:column="9">(<expr><name PREFIX:line="296" PREFIX:column="10">msg</name></expr>)</condition>
  <block PREFIX:line="297" PREFIX:column="3">{
    <case PREFIX:line="298" PREFIX:column="5">case <expr><name PREFIX:line="298" PREFIX:column="10">U8G_COM_MSG_INIT</name></expr>:
      <expr_stmt><expr><name><name PREFIX:line="299" PREFIX:column="7">u8g</name>-&gt;<name PREFIX:line="299" PREFIX:column="12">pin_list</name><index PREFIX:line="299" PREFIX:column="20">[<expr><name PREFIX:line="299" PREFIX:column="21">U8G_PI_A0_STATE</name></expr>]</index></name> = 0</expr>;</expr_stmt>
      <expr_stmt><expr><call><name PREFIX:line="300" PREFIX:column="7">u8g_com_arduino_t6963_init</name><argument_list PREFIX:line="300" PREFIX:column="33">(<argument><expr><name PREFIX:line="300" PREFIX:column="34">u8g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <comment type="block" PREFIX:line="301" PREFIX:column="7">/* setup the RW (equal to WR) pin as output and force it to high */</comment>
      <if PREFIX:line="302" PREFIX:column="7">if <condition PREFIX:line="302" PREFIX:column="10">( <expr><name><name PREFIX:line="302" PREFIX:column="12">u8g</name>-&gt;<name PREFIX:line="302" PREFIX:column="17">pin_list</name><index PREFIX:line="302" PREFIX:column="25">[<expr><name PREFIX:line="302" PREFIX:column="26">U8G_PI_WR</name></expr>]</index></name> != <name PREFIX:line="302" PREFIX:column="40">U8G_PIN_NONE</name></expr> )</condition><then PREFIX:line="302" PREFIX:column="54">
      <block PREFIX:line="303" PREFIX:column="7">{
        <expr_stmt><expr><call><name PREFIX:line="304" PREFIX:column="9">pinMode</name><argument_list PREFIX:line="304" PREFIX:column="16">(<argument><expr><name><name PREFIX:line="304" PREFIX:column="17">u8g</name>-&gt;<name PREFIX:line="304" PREFIX:column="22">pin_list</name><index PREFIX:line="304" PREFIX:column="30">[<expr><name PREFIX:line="304" PREFIX:column="31">U8G_PI_WR</name></expr>]</index></name></expr></argument>, <argument><expr><name PREFIX:line="304" PREFIX:column="43">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt><expr><call><name PREFIX:line="305" PREFIX:column="9">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="305" PREFIX:column="38">(<argument><expr><name PREFIX:line="305" PREFIX:column="39">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="305" PREFIX:column="44">U8G_PI_WR</name></expr></argument>, <argument><expr><name PREFIX:line="305" PREFIX:column="55">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then></if>
      <comment type="block" PREFIX:line="307" PREFIX:column="7">/* set all pins (except WR pin) */</comment>
      <expr_stmt><expr><call><name PREFIX:line="308" PREFIX:column="7">u8g_com_arduino_assign_pin_output_high</name><argument_list PREFIX:line="308" PREFIX:column="45">(<argument><expr><name PREFIX:line="308" PREFIX:column="46">u8g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <break PREFIX:line="309" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="310" PREFIX:column="5">case <expr><name PREFIX:line="310" PREFIX:column="10">U8G_COM_MSG_STOP</name></expr>:
      <break PREFIX:line="311" PREFIX:column="7">break;</break>

    </case><case PREFIX:line="313" PREFIX:column="5">case <expr><name PREFIX:line="313" PREFIX:column="10">U8G_COM_MSG_CHIP_SELECT</name></expr>:
      <if PREFIX:line="314" PREFIX:column="7">if <condition PREFIX:line="314" PREFIX:column="10">( <expr><name PREFIX:line="314" PREFIX:column="12">arg_val</name> == 0</expr> )</condition><then PREFIX:line="314" PREFIX:column="26">
      <block PREFIX:line="315" PREFIX:column="7">{
        <comment type="block" PREFIX:line="316" PREFIX:column="9">/* disable, active low chip select */</comment>
        <expr_stmt><expr><call><name PREFIX:line="317" PREFIX:column="9">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="317" PREFIX:column="38">(<argument><expr><name PREFIX:line="317" PREFIX:column="39">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="317" PREFIX:column="44">U8G_PI_CS</name></expr></argument>, <argument><expr><name PREFIX:line="317" PREFIX:column="55">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then>
      <else PREFIX:line="319" PREFIX:column="7">else
      <block PREFIX:line="320" PREFIX:column="7">{
        <comment type="block" PREFIX:line="321" PREFIX:column="9">/* enable */</comment>
        <expr_stmt><expr><call><name PREFIX:line="322" PREFIX:column="9">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="322" PREFIX:column="38">(<argument><expr><name PREFIX:line="322" PREFIX:column="39">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="322" PREFIX:column="44">U8G_PI_CS</name></expr></argument>, <argument><expr><name PREFIX:line="322" PREFIX:column="55">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></else></if>
      <break PREFIX:line="324" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="325" PREFIX:column="5">case <expr><name PREFIX:line="325" PREFIX:column="10">U8G_COM_MSG_WRITE_BYTE</name></expr>:
      <if PREFIX:line="326" PREFIX:column="7">if <condition PREFIX:line="326" PREFIX:column="10">( <expr><name><name PREFIX:line="326" PREFIX:column="12">u8g</name>-&gt;<name PREFIX:line="326" PREFIX:column="17">pin_list</name><index PREFIX:line="326" PREFIX:column="25">[<expr><name PREFIX:line="326" PREFIX:column="26">U8G_PI_A0_STATE</name></expr>]</index></name> == 0</expr> )</condition><then PREFIX:line="326" PREFIX:column="49">
      <block PREFIX:line="327" PREFIX:column="7">{
	<expr_stmt><expr><call><name PREFIX:line="328" PREFIX:column="9">u8g_com_arduino_t6963_write_data</name><argument_list PREFIX:line="328" PREFIX:column="41">(<argument><expr><name PREFIX:line="328" PREFIX:column="42">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="328" PREFIX:column="47">arg_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></then>
      <else PREFIX:line="330" PREFIX:column="7">else
      <block PREFIX:line="331" PREFIX:column="7">{
	<expr_stmt><expr><call><name PREFIX:line="332" PREFIX:column="9">u8g_com_arduino_t6963_write_cmd</name><argument_list PREFIX:line="332" PREFIX:column="40">(<argument><expr><name PREFIX:line="332" PREFIX:column="41">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="332" PREFIX:column="46">arg_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block></else></if>
      <break PREFIX:line="334" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="335" PREFIX:column="5">case <expr><name PREFIX:line="335" PREFIX:column="10">U8G_COM_MSG_WRITE_SEQ</name></expr>:
      <block PREFIX:line="336" PREFIX:column="7">{
        <decl_stmt><decl><type><name PREFIX:line="337" PREFIX:column="9">register</name> <name PREFIX:line="337" PREFIX:column="18">uint8_t</name> *</type><name PREFIX:line="337" PREFIX:column="27">ptr</name> <init PREFIX:line="337" PREFIX:column="31">= <expr><name PREFIX:line="337" PREFIX:column="33">arg_ptr</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name PREFIX:line="338" PREFIX:column="9">u8g_com_arduino_t6963_write_cmd</name><argument_list PREFIX:line="338" PREFIX:column="40">(<argument><expr><name PREFIX:line="338" PREFIX:column="41">u8g</name></expr></argument>, <argument><expr PREFIX:line="338" PREFIX:column="46">0x0b0</expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" PREFIX:line="338" PREFIX:column="57">/* auto write */</comment>
        <while PREFIX:line="339" PREFIX:column="9">while<condition PREFIX:line="339" PREFIX:column="14">( <expr><name PREFIX:line="339" PREFIX:column="16">arg_val</name> &gt; 0</expr> )</condition>
        <block PREFIX:line="340" PREFIX:column="9">{
          <if PREFIX:line="341" PREFIX:column="11">if <condition PREFIX:line="341" PREFIX:column="14">( <expr><call><name PREFIX:line="341" PREFIX:column="16">u8g_com_arduino_t6963_write_auto_data</name><argument_list PREFIX:line="341" PREFIX:column="53">(<argument><expr><name PREFIX:line="341" PREFIX:column="54">u8g</name></expr></argument>, <argument><expr PREFIX:line="341" PREFIX:column="59">*<name PREFIX:line="341" PREFIX:column="60">ptr</name>++</expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="341" PREFIX:column="73">
	    <break PREFIX:line="342" PREFIX:column="13">break;</break></then></if>
          <expr_stmt><expr><name PREFIX:line="343" PREFIX:column="11">arg_val</name>--</expr>;</expr_stmt>
        }</block></while>
	<expr_stmt><expr><call><name PREFIX:line="345" PREFIX:column="9">u8g_com_arduino_t6963_write_cmd</name><argument_list PREFIX:line="345" PREFIX:column="40">(<argument><expr><name PREFIX:line="345" PREFIX:column="41">u8g</name></expr></argument>, <argument><expr PREFIX:line="345" PREFIX:column="46">0x0b2</expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" PREFIX:line="345" PREFIX:column="57">/* auto reset */</comment>
      }</block>
      <break PREFIX:line="347" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="348" PREFIX:column="5">case <expr><name PREFIX:line="348" PREFIX:column="10">U8G_COM_MSG_WRITE_SEQ_P</name></expr>:
      <block PREFIX:line="349" PREFIX:column="7">{
        <decl_stmt><decl><type><name PREFIX:line="350" PREFIX:column="9">register</name> <name PREFIX:line="350" PREFIX:column="18">uint8_t</name> *</type><name PREFIX:line="350" PREFIX:column="27">ptr</name> <init PREFIX:line="350" PREFIX:column="31">= <expr><name PREFIX:line="350" PREFIX:column="33">arg_ptr</name></expr></init></decl>;</decl_stmt>
	<expr_stmt><expr><call><name PREFIX:line="351" PREFIX:column="9">u8g_com_arduino_t6963_write_cmd</name><argument_list PREFIX:line="351" PREFIX:column="40">(<argument><expr><name PREFIX:line="351" PREFIX:column="41">u8g</name></expr></argument>, <argument><expr PREFIX:line="351" PREFIX:column="46">0x0b0</expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" PREFIX:line="351" PREFIX:column="57">/* auto write */</comment>
        <while PREFIX:line="352" PREFIX:column="9">while<condition PREFIX:line="352" PREFIX:column="14">( <expr><name PREFIX:line="352" PREFIX:column="16">arg_val</name> &gt; 0</expr> )</condition>
        <block PREFIX:line="353" PREFIX:column="9">{
          <if PREFIX:line="354" PREFIX:column="11">if <condition PREFIX:line="354" PREFIX:column="14">( <expr><call><name PREFIX:line="354" PREFIX:column="16">u8g_com_arduino_t6963_write_auto_data</name><argument_list PREFIX:line="354" PREFIX:column="53">(<argument><expr><name PREFIX:line="354" PREFIX:column="54">u8g</name></expr></argument>, <argument><expr><call><name PREFIX:line="354" PREFIX:column="59">u8g_pgm_read</name><argument_list PREFIX:line="354" PREFIX:column="71">(<argument><expr><name PREFIX:line="354" PREFIX:column="72">ptr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="354" PREFIX:column="84">
	    <break PREFIX:line="355" PREFIX:column="13">break;</break></then></if>
          <expr_stmt><expr><name PREFIX:line="356" PREFIX:column="11">ptr</name>++</expr>;</expr_stmt>
          <expr_stmt><expr><name PREFIX:line="357" PREFIX:column="11">arg_val</name>--</expr>;</expr_stmt>
        }</block></while>
	<expr_stmt><expr><call><name PREFIX:line="359" PREFIX:column="9">u8g_com_arduino_t6963_write_cmd</name><argument_list PREFIX:line="359" PREFIX:column="40">(<argument><expr><name PREFIX:line="359" PREFIX:column="41">u8g</name></expr></argument>, <argument><expr PREFIX:line="359" PREFIX:column="46">0x0b2</expr></argument>)</argument_list></call></expr>;</expr_stmt>	<comment type="block" PREFIX:line="359" PREFIX:column="57">/* auto reset */</comment>
      }</block>
      <break PREFIX:line="361" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="362" PREFIX:column="5">case <expr><name PREFIX:line="362" PREFIX:column="10">U8G_COM_MSG_ADDRESS</name></expr>:                     <comment type="block" PREFIX:line="362" PREFIX:column="51">/* define cmd (arg_val = 1) or data mode (arg_val = 0) */</comment>
      <expr_stmt><expr><name><name PREFIX:line="363" PREFIX:column="7">u8g</name>-&gt;<name PREFIX:line="363" PREFIX:column="12">pin_list</name><index PREFIX:line="363" PREFIX:column="20">[<expr><name PREFIX:line="363" PREFIX:column="21">U8G_PI_A0_STATE</name></expr>]</index></name> = <name PREFIX:line="363" PREFIX:column="40">arg_val</name></expr>;</expr_stmt>
      <comment type="line" PREFIX:line="364" PREFIX:column="7">//u8g_com_arduino_digital_write(u8g, U8G_PI_DI, arg_val);</comment>
      <break PREFIX:line="365" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="366" PREFIX:column="5">case <expr><name PREFIX:line="366" PREFIX:column="10">U8G_COM_MSG_RESET</name></expr>:
      <if PREFIX:line="367" PREFIX:column="7">if <condition PREFIX:line="367" PREFIX:column="10">( <expr><name><name PREFIX:line="367" PREFIX:column="12">u8g</name>-&gt;<name PREFIX:line="367" PREFIX:column="17">pin_list</name><index PREFIX:line="367" PREFIX:column="25">[<expr><name PREFIX:line="367" PREFIX:column="26">U8G_PI_RESET</name></expr>]</index></name> != <name PREFIX:line="367" PREFIX:column="43">U8G_PIN_NONE</name></expr> )</condition><then PREFIX:line="367" PREFIX:column="57">
        <expr_stmt><expr><call><name PREFIX:line="368" PREFIX:column="9">u8g_com_arduino_digital_write</name><argument_list PREFIX:line="368" PREFIX:column="38">(<argument><expr><name PREFIX:line="368" PREFIX:column="39">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="368" PREFIX:column="44">U8G_PI_RESET</name></expr></argument>, <argument><expr><name PREFIX:line="368" PREFIX:column="58">arg_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
      <break PREFIX:line="369" PREFIX:column="7">break;</break>
      
  </case>}</block></switch>
  <return PREFIX:line="372" PREFIX:column="3">return <expr PREFIX:line="372" PREFIX:column="10">1</expr>;</return>
}</block></function>

<cpp:else PREFIX:line="375" PREFIX:column="1">#<cpp:directive PREFIX:line="375" PREFIX:column="2">else</cpp:directive></cpp:else>


<function><type><name PREFIX:line="378" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="378" PREFIX:column="9">u8g_com_arduino_t6963_fn</name><parameter_list PREFIX:line="378" PREFIX:column="33">(<param><decl><type><name PREFIX:line="378" PREFIX:column="34">u8g_t</name> *</type><name PREFIX:line="378" PREFIX:column="41">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="378" PREFIX:column="46">uint8_t</name></type> <name PREFIX:line="378" PREFIX:column="54">msg</name></decl></param>, <param><decl><type><name PREFIX:line="378" PREFIX:column="59">uint8_t</name></type> <name PREFIX:line="378" PREFIX:column="67">arg_val</name></decl></param>, <param><decl><type><name PREFIX:line="378" PREFIX:column="76">void</name> *</type><name PREFIX:line="378" PREFIX:column="82">arg_ptr</name></decl></param>)</parameter_list>
<block PREFIX:line="379" PREFIX:column="1">{
  <return PREFIX:line="380" PREFIX:column="3">return <expr PREFIX:line="380" PREFIX:column="10">1</expr>;</return>
}</block></function>


<cpp:endif PREFIX:line="384" PREFIX:column="1">#<cpp:directive PREFIX:line="384" PREFIX:column="2">endif</cpp:directive></cpp:endif> <comment type="block" PREFIX:line="384" PREFIX:column="8">/* ARDUINO */</comment>

</unit>
