<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/cores/at90usb/USBAPI.h.cpp" PREFIX:tabs="8" PREFIX:line="1" PREFIX:column="1">

<cpp:ifndef PREFIX:line="3" PREFIX:column="1">#<cpp:directive PREFIX:line="3" PREFIX:column="2">ifndef</cpp:directive> <name PREFIX:line="3" PREFIX:column="9">__USBAPI__</name></cpp:ifndef>
<cpp:define PREFIX:line="4" PREFIX:column="1">#<cpp:directive PREFIX:line="4" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="4" PREFIX:column="9">__USBAPI__</name></cpp:macro></cpp:define>

<cpp:if PREFIX:line="6" PREFIX:column="1">#<cpp:directive PREFIX:line="6" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="6" PREFIX:column="5">defined</name><argument_list PREFIX:line="6" PREFIX:column="12">(<argument><expr><name PREFIX:line="6" PREFIX:column="13">USBCON</name></expr></argument>)</argument_list></call></expr></cpp:if>

<comment type="line" PREFIX:line="8" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="9" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="10" PREFIX:column="1">//	USB</comment>

<class PREFIX:line="12" PREFIX:column="1">class <name PREFIX:line="12" PREFIX:column="7">USBDevice_</name>
<block PREFIX:line="13" PREFIX:column="1">{<private type="default" PREFIX:line="13" PREFIX:column="2">
</private><public PREFIX:line="14" PREFIX:column="1">public:
	<constructor_decl><name PREFIX:line="15" PREFIX:column="9">USBDevice_</name><parameter_list PREFIX:line="15" PREFIX:column="19">()</parameter_list>;</constructor_decl>
	<function_decl><type><name PREFIX:line="16" PREFIX:column="9">bool</name></type> <name PREFIX:line="16" PREFIX:column="14">configured</name><parameter_list PREFIX:line="16" PREFIX:column="24">()</parameter_list>;</function_decl>

	<function_decl><type><name PREFIX:line="18" PREFIX:column="9">void</name></type> <name PREFIX:line="18" PREFIX:column="14">attach</name><parameter_list PREFIX:line="18" PREFIX:column="20">()</parameter_list>;</function_decl>
	<function_decl><type><name PREFIX:line="19" PREFIX:column="9">void</name></type> <name PREFIX:line="19" PREFIX:column="14">detach</name><parameter_list PREFIX:line="19" PREFIX:column="20">()</parameter_list>;</function_decl>	<comment type="line" PREFIX:line="19" PREFIX:column="25">// Serial port goes down too...</comment>
	<function_decl><type><name PREFIX:line="20" PREFIX:column="9">void</name></type> <name PREFIX:line="20" PREFIX:column="14">poll</name><parameter_list PREFIX:line="20" PREFIX:column="18">()</parameter_list>;</function_decl>
</public>}</block>;</class>
 <decl_stmt><decl><type><name PREFIX:line="22" PREFIX:column="2">USBDevice_</name></type> <name PREFIX:line="22" PREFIX:column="13">USBDevice</name></decl>;</decl_stmt>

<comment type="line" PREFIX:line="24" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="25" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="26" PREFIX:column="1">//	Serial over CDC (Serial1 is the physical port)</comment>

<class PREFIX:line="28" PREFIX:column="1">class <name PREFIX:line="28" PREFIX:column="7">Serial_</name> <super PREFIX:line="28" PREFIX:column="15">: <specifier PREFIX:line="28" PREFIX:column="17">public</specifier> <name PREFIX:line="28" PREFIX:column="24">Stream</name></super>
<block PREFIX:line="29" PREFIX:column="1">{<private type="default" PREFIX:line="29" PREFIX:column="2">
</private><private PREFIX:line="30" PREFIX:column="1">private:
	<decl_stmt><decl><type><name PREFIX:line="31" PREFIX:column="9">ring_buffer</name> *</type><name PREFIX:line="31" PREFIX:column="22">_cdc_rx_buffer</name></decl>;</decl_stmt>
</private><public PREFIX:line="32" PREFIX:column="1">public:
	<function_decl><type><name PREFIX:line="33" PREFIX:column="9">void</name></type> <name PREFIX:line="33" PREFIX:column="14">begin</name><parameter_list PREFIX:line="33" PREFIX:column="19">(<param><decl><type><name PREFIX:line="33" PREFIX:column="20">uint16_t</name></type> <name PREFIX:line="33" PREFIX:column="29">baud_count</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name PREFIX:line="34" PREFIX:column="9">void</name></type> <name PREFIX:line="34" PREFIX:column="14">end</name><parameter_list PREFIX:line="34" PREFIX:column="17">(<param><decl><type><name PREFIX:line="34" PREFIX:column="18">void</name></type></decl></param>)</parameter_list>;</function_decl>

	<function_decl><type><specifier PREFIX:line="36" PREFIX:column="9">virtual</specifier> <name PREFIX:line="36" PREFIX:column="17">int</name></type> <name PREFIX:line="36" PREFIX:column="21">available</name><parameter_list PREFIX:line="36" PREFIX:column="30">(<param><decl><type><name PREFIX:line="36" PREFIX:column="31">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="37" PREFIX:column="9">virtual</specifier> <name PREFIX:line="37" PREFIX:column="17">void</name></type> <name PREFIX:line="37" PREFIX:column="22">accept</name><parameter_list PREFIX:line="37" PREFIX:column="28">(<param><decl><type><name PREFIX:line="37" PREFIX:column="29">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="38" PREFIX:column="9">virtual</specifier> <name PREFIX:line="38" PREFIX:column="17">int</name></type> <name PREFIX:line="38" PREFIX:column="21">peek</name><parameter_list PREFIX:line="38" PREFIX:column="25">(<param><decl><type><name PREFIX:line="38" PREFIX:column="26">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="39" PREFIX:column="9">virtual</specifier> <name PREFIX:line="39" PREFIX:column="17">int</name></type> <name PREFIX:line="39" PREFIX:column="21">read</name><parameter_list PREFIX:line="39" PREFIX:column="25">(<param><decl><type><name PREFIX:line="39" PREFIX:column="26">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="40" PREFIX:column="9">virtual</specifier> <name PREFIX:line="40" PREFIX:column="17">void</name></type> <name PREFIX:line="40" PREFIX:column="22">flush</name><parameter_list PREFIX:line="40" PREFIX:column="27">(<param><decl><type><name PREFIX:line="40" PREFIX:column="28">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="41" PREFIX:column="9">virtual</specifier> <name PREFIX:line="41" PREFIX:column="17">size_t</name></type> <name PREFIX:line="41" PREFIX:column="24">write</name><parameter_list PREFIX:line="41" PREFIX:column="29">(<param><decl><type><name PREFIX:line="41" PREFIX:column="30">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><name PREFIX:line="42" PREFIX:column="9">operator bool</name><parameter_list PREFIX:line="42" PREFIX:column="22">()</parameter_list>;</function_decl>
</public>}</block>;</class>
 <decl_stmt><decl><type><name PREFIX:line="44" PREFIX:column="2">Serial_</name></type> <name PREFIX:line="44" PREFIX:column="10">Serial</name></decl>;</decl_stmt>

<comment type="line" PREFIX:line="46" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="47" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="48" PREFIX:column="1">//	Mouse</comment>

<cpp:define PREFIX:line="50" PREFIX:column="1">#<cpp:directive PREFIX:line="50" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="50" PREFIX:column="9">MOUSE_LEFT</name></cpp:macro> <cpp:value PREFIX:line="50" PREFIX:column="20">1</cpp:value></cpp:define>
<cpp:define PREFIX:line="51" PREFIX:column="1">#<cpp:directive PREFIX:line="51" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="51" PREFIX:column="9">MOUSE_RIGHT</name></cpp:macro> <cpp:value PREFIX:line="51" PREFIX:column="21">2</cpp:value></cpp:define>
<cpp:define PREFIX:line="52" PREFIX:column="1">#<cpp:directive PREFIX:line="52" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="52" PREFIX:column="9">MOUSE_MIDDLE</name></cpp:macro> <cpp:value PREFIX:line="52" PREFIX:column="22">4</cpp:value></cpp:define>
<cpp:define PREFIX:line="53" PREFIX:column="1">#<cpp:directive PREFIX:line="53" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="53" PREFIX:column="9">MOUSE_ALL</name></cpp:macro> <cpp:value PREFIX:line="53" PREFIX:column="19">(MOUSE_LEFT | MOUSE_RIGHT | MOUSE_MIDDLE)</cpp:value></cpp:define>

<class PREFIX:line="55" PREFIX:column="1">class <name PREFIX:line="55" PREFIX:column="7">Mouse_</name>
<block PREFIX:line="56" PREFIX:column="1">{<private type="default" PREFIX:line="56" PREFIX:column="2">
</private><private PREFIX:line="57" PREFIX:column="1">private:
	<decl_stmt><decl><type><name PREFIX:line="58" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="58" PREFIX:column="17">_buttons</name></decl>;</decl_stmt>
	<function_decl><type><name PREFIX:line="59" PREFIX:column="9">void</name></type> <name PREFIX:line="59" PREFIX:column="14">buttons</name><parameter_list PREFIX:line="59" PREFIX:column="21">(<param><decl><type><name PREFIX:line="59" PREFIX:column="22">uint8_t</name></type> <name PREFIX:line="59" PREFIX:column="30">b</name></decl></param>)</parameter_list>;</function_decl>
</private><public PREFIX:line="60" PREFIX:column="1">public:
	<constructor_decl><name PREFIX:line="61" PREFIX:column="9">Mouse_</name><parameter_list PREFIX:line="61" PREFIX:column="15">(<param><decl><type><name PREFIX:line="61" PREFIX:column="16">void</name></type></decl></param>)</parameter_list>;</constructor_decl>
	<function_decl><type><name PREFIX:line="62" PREFIX:column="9">void</name></type> <name PREFIX:line="62" PREFIX:column="14">begin</name><parameter_list PREFIX:line="62" PREFIX:column="19">(<param><decl><type><name PREFIX:line="62" PREFIX:column="20">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name PREFIX:line="63" PREFIX:column="9">void</name></type> <name PREFIX:line="63" PREFIX:column="14">end</name><parameter_list PREFIX:line="63" PREFIX:column="17">(<param><decl><type><name PREFIX:line="63" PREFIX:column="18">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name PREFIX:line="64" PREFIX:column="9">void</name></type> <name PREFIX:line="64" PREFIX:column="14">click</name><parameter_list PREFIX:line="64" PREFIX:column="19">(<param><decl><type><name PREFIX:line="64" PREFIX:column="20">uint8_t</name></type> <name PREFIX:line="64" PREFIX:column="28">b</name> <init PREFIX:line="64" PREFIX:column="30">= <expr><name PREFIX:line="64" PREFIX:column="32">MOUSE_LEFT</name></expr></init></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name PREFIX:line="65" PREFIX:column="9">void</name></type> <name PREFIX:line="65" PREFIX:column="14">move</name><parameter_list PREFIX:line="65" PREFIX:column="18">(<param><decl><type><name PREFIX:line="65" PREFIX:column="19">signed</name> <name PREFIX:line="65" PREFIX:column="26">char</name></type> <name PREFIX:line="65" PREFIX:column="31">x</name></decl></param>, <param><decl><type><name PREFIX:line="65" PREFIX:column="34">signed</name> <name PREFIX:line="65" PREFIX:column="41">char</name></type> <name PREFIX:line="65" PREFIX:column="46">y</name></decl></param>, <param><decl><type><name PREFIX:line="65" PREFIX:column="49">signed</name> <name PREFIX:line="65" PREFIX:column="56">char</name></type> <name PREFIX:line="65" PREFIX:column="61">wheel</name> <init PREFIX:line="65" PREFIX:column="67">= <expr PREFIX:line="65" PREFIX:column="69">0</expr></init></decl></param>)</parameter_list>;</function_decl>	
	<function_decl><type><name PREFIX:line="66" PREFIX:column="9">void</name></type> <name PREFIX:line="66" PREFIX:column="14">press</name><parameter_list PREFIX:line="66" PREFIX:column="19">(<param><decl><type><name PREFIX:line="66" PREFIX:column="20">uint8_t</name></type> <name PREFIX:line="66" PREFIX:column="28">b</name> <init PREFIX:line="66" PREFIX:column="30">= <expr><name PREFIX:line="66" PREFIX:column="32">MOUSE_LEFT</name></expr></init></decl></param>)</parameter_list>;</function_decl>		<comment type="line" PREFIX:line="66" PREFIX:column="57">// press LEFT by default</comment>
	<function_decl><type><name PREFIX:line="67" PREFIX:column="9">void</name></type> <name PREFIX:line="67" PREFIX:column="14">release</name><parameter_list PREFIX:line="67" PREFIX:column="21">(<param><decl><type><name PREFIX:line="67" PREFIX:column="22">uint8_t</name></type> <name PREFIX:line="67" PREFIX:column="30">b</name> <init PREFIX:line="67" PREFIX:column="32">= <expr><name PREFIX:line="67" PREFIX:column="34">MOUSE_LEFT</name></expr></init></decl></param>)</parameter_list>;</function_decl>	<comment type="line" PREFIX:line="67" PREFIX:column="49">// release LEFT by default</comment>
	<function_decl><type><name PREFIX:line="68" PREFIX:column="9">bool</name></type> <name PREFIX:line="68" PREFIX:column="14">isPressed</name><parameter_list PREFIX:line="68" PREFIX:column="23">(<param><decl><type><name PREFIX:line="68" PREFIX:column="24">uint8_t</name></type> <name PREFIX:line="68" PREFIX:column="32">b</name> <init PREFIX:line="68" PREFIX:column="34">= <expr><name PREFIX:line="68" PREFIX:column="36">MOUSE_LEFT</name></expr></init></decl></param>)</parameter_list>;</function_decl>	<comment type="line" PREFIX:line="68" PREFIX:column="49">// check LEFT by default</comment>
</public>}</block>;</class>
 <decl_stmt><decl><type><name PREFIX:line="70" PREFIX:column="2">Mouse_</name></type> <name PREFIX:line="70" PREFIX:column="9">Mouse</name></decl>;</decl_stmt>

<comment type="line" PREFIX:line="72" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="73" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="74" PREFIX:column="1">//	Keyboard</comment>

<cpp:define PREFIX:line="76" PREFIX:column="1">#<cpp:directive PREFIX:line="76" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="76" PREFIX:column="9">KEY_LEFT_CTRL</name></cpp:macro>		<cpp:value PREFIX:line="76" PREFIX:column="33">0x80</cpp:value></cpp:define>
<cpp:define PREFIX:line="77" PREFIX:column="1">#<cpp:directive PREFIX:line="77" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="77" PREFIX:column="9">KEY_LEFT_SHIFT</name></cpp:macro>		<cpp:value PREFIX:line="77" PREFIX:column="33">0x81</cpp:value></cpp:define>
<cpp:define PREFIX:line="78" PREFIX:column="1">#<cpp:directive PREFIX:line="78" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="78" PREFIX:column="9">KEY_LEFT_ALT</name></cpp:macro>		<cpp:value PREFIX:line="78" PREFIX:column="33">0x82</cpp:value></cpp:define>
<cpp:define PREFIX:line="79" PREFIX:column="1">#<cpp:directive PREFIX:line="79" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="79" PREFIX:column="9">KEY_LEFT_GUI</name></cpp:macro>		<cpp:value PREFIX:line="79" PREFIX:column="33">0x83</cpp:value></cpp:define>
<cpp:define PREFIX:line="80" PREFIX:column="1">#<cpp:directive PREFIX:line="80" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="80" PREFIX:column="9">KEY_RIGHT_CTRL</name></cpp:macro>		<cpp:value PREFIX:line="80" PREFIX:column="33">0x84</cpp:value></cpp:define>
<cpp:define PREFIX:line="81" PREFIX:column="1">#<cpp:directive PREFIX:line="81" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="81" PREFIX:column="9">KEY_RIGHT_SHIFT</name></cpp:macro>		<cpp:value PREFIX:line="81" PREFIX:column="33">0x85</cpp:value></cpp:define>
<cpp:define PREFIX:line="82" PREFIX:column="1">#<cpp:directive PREFIX:line="82" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="82" PREFIX:column="9">KEY_RIGHT_ALT</name></cpp:macro>		<cpp:value PREFIX:line="82" PREFIX:column="33">0x86</cpp:value></cpp:define>
<cpp:define PREFIX:line="83" PREFIX:column="1">#<cpp:directive PREFIX:line="83" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="83" PREFIX:column="9">KEY_RIGHT_GUI</name></cpp:macro>		<cpp:value PREFIX:line="83" PREFIX:column="33">0x87</cpp:value></cpp:define>

<cpp:define PREFIX:line="85" PREFIX:column="1">#<cpp:directive PREFIX:line="85" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="85" PREFIX:column="9">KEY_UP_ARROW</name></cpp:macro>		<cpp:value PREFIX:line="85" PREFIX:column="33">0xDA</cpp:value></cpp:define>
<cpp:define PREFIX:line="86" PREFIX:column="1">#<cpp:directive PREFIX:line="86" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="86" PREFIX:column="9">KEY_DOWN_ARROW</name></cpp:macro>		<cpp:value PREFIX:line="86" PREFIX:column="33">0xD9</cpp:value></cpp:define>
<cpp:define PREFIX:line="87" PREFIX:column="1">#<cpp:directive PREFIX:line="87" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="87" PREFIX:column="9">KEY_LEFT_ARROW</name></cpp:macro>		<cpp:value PREFIX:line="87" PREFIX:column="33">0xD8</cpp:value></cpp:define>
<cpp:define PREFIX:line="88" PREFIX:column="1">#<cpp:directive PREFIX:line="88" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="88" PREFIX:column="9">KEY_RIGHT_ARROW</name></cpp:macro>		<cpp:value PREFIX:line="88" PREFIX:column="33">0xD7</cpp:value></cpp:define>
<cpp:define PREFIX:line="89" PREFIX:column="1">#<cpp:directive PREFIX:line="89" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="89" PREFIX:column="9">KEY_BACKSPACE</name></cpp:macro>		<cpp:value PREFIX:line="89" PREFIX:column="33">0xB2</cpp:value></cpp:define>
<cpp:define PREFIX:line="90" PREFIX:column="1">#<cpp:directive PREFIX:line="90" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="90" PREFIX:column="9">KEY_TAB</name></cpp:macro>				<cpp:value PREFIX:line="90" PREFIX:column="41">0xB3</cpp:value></cpp:define>
<cpp:define PREFIX:line="91" PREFIX:column="1">#<cpp:directive PREFIX:line="91" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="91" PREFIX:column="9">KEY_RETURN</name></cpp:macro>			<cpp:value PREFIX:line="91" PREFIX:column="41">0xB0</cpp:value></cpp:define>
<cpp:define PREFIX:line="92" PREFIX:column="1">#<cpp:directive PREFIX:line="92" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="92" PREFIX:column="9">KEY_ESC</name></cpp:macro>				<cpp:value PREFIX:line="92" PREFIX:column="41">0xB1</cpp:value></cpp:define>
<cpp:define PREFIX:line="93" PREFIX:column="1">#<cpp:directive PREFIX:line="93" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="93" PREFIX:column="9">KEY_INSERT</name></cpp:macro>			<cpp:value PREFIX:line="93" PREFIX:column="41">0xD1</cpp:value></cpp:define>
<cpp:define PREFIX:line="94" PREFIX:column="1">#<cpp:directive PREFIX:line="94" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="94" PREFIX:column="9">KEY_DELETE</name></cpp:macro>			<cpp:value PREFIX:line="94" PREFIX:column="41">0xD4</cpp:value></cpp:define>
<cpp:define PREFIX:line="95" PREFIX:column="1">#<cpp:directive PREFIX:line="95" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="95" PREFIX:column="9">KEY_PAGE_UP</name></cpp:macro>			<cpp:value PREFIX:line="95" PREFIX:column="41">0xD3</cpp:value></cpp:define>
<cpp:define PREFIX:line="96" PREFIX:column="1">#<cpp:directive PREFIX:line="96" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="96" PREFIX:column="9">KEY_PAGE_DOWN</name></cpp:macro>		<cpp:value PREFIX:line="96" PREFIX:column="33">0xD6</cpp:value></cpp:define>
<cpp:define PREFIX:line="97" PREFIX:column="1">#<cpp:directive PREFIX:line="97" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="97" PREFIX:column="9">KEY_HOME</name></cpp:macro>			<cpp:value PREFIX:line="97" PREFIX:column="41">0xD2</cpp:value></cpp:define>
<cpp:define PREFIX:line="98" PREFIX:column="1">#<cpp:directive PREFIX:line="98" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="98" PREFIX:column="9">KEY_END</name></cpp:macro>				<cpp:value PREFIX:line="98" PREFIX:column="41">0xD5</cpp:value></cpp:define>
<cpp:define PREFIX:line="99" PREFIX:column="1">#<cpp:directive PREFIX:line="99" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="99" PREFIX:column="9">KEY_CAPS_LOCK</name></cpp:macro>		<cpp:value PREFIX:line="99" PREFIX:column="33">0xC1</cpp:value></cpp:define>
<cpp:define PREFIX:line="100" PREFIX:column="1">#<cpp:directive PREFIX:line="100" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="100" PREFIX:column="9">KEY_F1</name></cpp:macro>				<cpp:value PREFIX:line="100" PREFIX:column="41">0xC2</cpp:value></cpp:define>
<cpp:define PREFIX:line="101" PREFIX:column="1">#<cpp:directive PREFIX:line="101" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="101" PREFIX:column="9">KEY_F2</name></cpp:macro>				<cpp:value PREFIX:line="101" PREFIX:column="41">0xC3</cpp:value></cpp:define>
<cpp:define PREFIX:line="102" PREFIX:column="1">#<cpp:directive PREFIX:line="102" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="102" PREFIX:column="9">KEY_F3</name></cpp:macro>				<cpp:value PREFIX:line="102" PREFIX:column="41">0xC4</cpp:value></cpp:define>
<cpp:define PREFIX:line="103" PREFIX:column="1">#<cpp:directive PREFIX:line="103" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="103" PREFIX:column="9">KEY_F4</name></cpp:macro>				<cpp:value PREFIX:line="103" PREFIX:column="41">0xC5</cpp:value></cpp:define>
<cpp:define PREFIX:line="104" PREFIX:column="1">#<cpp:directive PREFIX:line="104" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="104" PREFIX:column="9">KEY_F5</name></cpp:macro>				<cpp:value PREFIX:line="104" PREFIX:column="41">0xC6</cpp:value></cpp:define>
<cpp:define PREFIX:line="105" PREFIX:column="1">#<cpp:directive PREFIX:line="105" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="105" PREFIX:column="9">KEY_F6</name></cpp:macro>				<cpp:value PREFIX:line="105" PREFIX:column="41">0xC7</cpp:value></cpp:define>
<cpp:define PREFIX:line="106" PREFIX:column="1">#<cpp:directive PREFIX:line="106" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="106" PREFIX:column="9">KEY_F7</name></cpp:macro>				<cpp:value PREFIX:line="106" PREFIX:column="41">0xC8</cpp:value></cpp:define>
<cpp:define PREFIX:line="107" PREFIX:column="1">#<cpp:directive PREFIX:line="107" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="107" PREFIX:column="9">KEY_F8</name></cpp:macro>				<cpp:value PREFIX:line="107" PREFIX:column="41">0xC9</cpp:value></cpp:define>
<cpp:define PREFIX:line="108" PREFIX:column="1">#<cpp:directive PREFIX:line="108" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="108" PREFIX:column="9">KEY_F9</name></cpp:macro>				<cpp:value PREFIX:line="108" PREFIX:column="41">0xCA</cpp:value></cpp:define>
<cpp:define PREFIX:line="109" PREFIX:column="1">#<cpp:directive PREFIX:line="109" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="109" PREFIX:column="9">KEY_F10</name></cpp:macro>				<cpp:value PREFIX:line="109" PREFIX:column="41">0xCB</cpp:value></cpp:define>
<cpp:define PREFIX:line="110" PREFIX:column="1">#<cpp:directive PREFIX:line="110" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="110" PREFIX:column="9">KEY_F11</name></cpp:macro>				<cpp:value PREFIX:line="110" PREFIX:column="41">0xCC</cpp:value></cpp:define>
<cpp:define PREFIX:line="111" PREFIX:column="1">#<cpp:directive PREFIX:line="111" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="111" PREFIX:column="9">KEY_F12</name></cpp:macro>				<cpp:value PREFIX:line="111" PREFIX:column="41">0xCD</cpp:value></cpp:define>

<comment type="line" PREFIX:line="113" PREFIX:column="1">//	Low level key report: up to 6 keys and shift, ctrl etc at once</comment>
<typedef PREFIX:line="114" PREFIX:column="1">typedef <type><struct PREFIX:line="114" PREFIX:column="9">struct
<block PREFIX:line="115" PREFIX:column="1">{<public type="default" PREFIX:line="115" PREFIX:column="2">
	<decl_stmt><decl><type><name PREFIX:line="116" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="116" PREFIX:column="17">modifiers</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name PREFIX:line="117" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="117" PREFIX:column="17">reserved</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name PREFIX:line="118" PREFIX:column="9">uint8_t</name></type> <name><name PREFIX:line="118" PREFIX:column="17">keys</name><index PREFIX:line="118" PREFIX:column="21">[<expr PREFIX:line="118" PREFIX:column="22">6</expr>]</index></name></decl>;</decl_stmt>
</public>}</block></struct></type> <name PREFIX:line="119" PREFIX:column="3">KeyReport</name>;</typedef>

<class PREFIX:line="121" PREFIX:column="1">class <name PREFIX:line="121" PREFIX:column="7">Keyboard_</name> <super PREFIX:line="121" PREFIX:column="17">: <specifier PREFIX:line="121" PREFIX:column="19">public</specifier> <name PREFIX:line="121" PREFIX:column="26">Print</name></super>
<block PREFIX:line="122" PREFIX:column="1">{<private type="default" PREFIX:line="122" PREFIX:column="2">
</private><private PREFIX:line="123" PREFIX:column="1">private:
	<decl_stmt><decl><type><name PREFIX:line="124" PREFIX:column="9">KeyReport</name></type> <name PREFIX:line="124" PREFIX:column="19">_keyReport</name></decl>;</decl_stmt>
	<function_decl><type><name PREFIX:line="125" PREFIX:column="9">void</name></type> <name PREFIX:line="125" PREFIX:column="14">sendReport</name><parameter_list PREFIX:line="125" PREFIX:column="24">(<param><decl><type><name PREFIX:line="125" PREFIX:column="25">KeyReport</name>*</type> <name PREFIX:line="125" PREFIX:column="36">keys</name></decl></param>)</parameter_list>;</function_decl>
</private><public PREFIX:line="126" PREFIX:column="1">public:
	<constructor_decl><name PREFIX:line="127" PREFIX:column="9">Keyboard_</name><parameter_list PREFIX:line="127" PREFIX:column="18">(<param><decl><type><name PREFIX:line="127" PREFIX:column="19">void</name></type></decl></param>)</parameter_list>;</constructor_decl>
	<function_decl><type><name PREFIX:line="128" PREFIX:column="9">void</name></type> <name PREFIX:line="128" PREFIX:column="14">begin</name><parameter_list PREFIX:line="128" PREFIX:column="19">(<param><decl><type><name PREFIX:line="128" PREFIX:column="20">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><name PREFIX:line="129" PREFIX:column="9">void</name></type> <name PREFIX:line="129" PREFIX:column="14">end</name><parameter_list PREFIX:line="129" PREFIX:column="17">(<param><decl><type><name PREFIX:line="129" PREFIX:column="18">void</name></type></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="130" PREFIX:column="9">virtual</specifier> <name PREFIX:line="130" PREFIX:column="17">size_t</name></type> <name PREFIX:line="130" PREFIX:column="24">write</name><parameter_list PREFIX:line="130" PREFIX:column="29">(<param><decl><type><name PREFIX:line="130" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="130" PREFIX:column="38">k</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="131" PREFIX:column="9">virtual</specifier> <name PREFIX:line="131" PREFIX:column="17">size_t</name></type> <name PREFIX:line="131" PREFIX:column="24">press</name><parameter_list PREFIX:line="131" PREFIX:column="29">(<param><decl><type><name PREFIX:line="131" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="131" PREFIX:column="38">k</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="132" PREFIX:column="9">virtual</specifier> <name PREFIX:line="132" PREFIX:column="17">size_t</name></type> <name PREFIX:line="132" PREFIX:column="24">release</name><parameter_list PREFIX:line="132" PREFIX:column="31">(<param><decl><type><name PREFIX:line="132" PREFIX:column="32">uint8_t</name></type> <name PREFIX:line="132" PREFIX:column="40">k</name></decl></param>)</parameter_list>;</function_decl>
	<function_decl><type><specifier PREFIX:line="133" PREFIX:column="9">virtual</specifier> <name PREFIX:line="133" PREFIX:column="17">void</name></type> <name PREFIX:line="133" PREFIX:column="22">releaseAll</name><parameter_list PREFIX:line="133" PREFIX:column="32">(<param><decl><type><name PREFIX:line="133" PREFIX:column="33">void</name></type></decl></param>)</parameter_list>;</function_decl>
</public>}</block>;</class>
 <decl_stmt><decl><type><name PREFIX:line="135" PREFIX:column="2">Keyboard_</name></type> <name PREFIX:line="135" PREFIX:column="12">Keyboard</name></decl>;</decl_stmt>

<comment type="line" PREFIX:line="137" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="138" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="139" PREFIX:column="1">//	Low level API</comment>

<typedef PREFIX:line="141" PREFIX:column="1">typedef <type><struct PREFIX:line="141" PREFIX:column="9">struct
<block PREFIX:line="142" PREFIX:column="1">{<public type="default" PREFIX:line="142" PREFIX:column="2">
	<decl_stmt><decl><type><name PREFIX:line="143" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="143" PREFIX:column="17">bmRequestType</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name PREFIX:line="144" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="144" PREFIX:column="17">bRequest</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name PREFIX:line="145" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="145" PREFIX:column="17">wValueL</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name PREFIX:line="146" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="146" PREFIX:column="17">wValueH</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name PREFIX:line="147" PREFIX:column="9">uint16_t</name></type> <name PREFIX:line="147" PREFIX:column="18">wIndex</name></decl>;</decl_stmt>
	<decl_stmt><decl><type><name PREFIX:line="148" PREFIX:column="9">uint16_t</name></type> <name PREFIX:line="148" PREFIX:column="18">wLength</name></decl>;</decl_stmt>
</public>}</block></struct></type> <name PREFIX:line="149" PREFIX:column="3">Setup</name>;</typedef>

<comment type="line" PREFIX:line="151" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="152" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="153" PREFIX:column="1">//	HID 'Driver'</comment>

<function_decl><type><name PREFIX:line="155" PREFIX:column="1">int</name></type>		<name PREFIX:line="155" PREFIX:column="17">HID_GetInterface</name><parameter_list PREFIX:line="155" PREFIX:column="33">(<param><decl><type><name PREFIX:line="155" PREFIX:column="34">uint8_t</name>*</type> <name PREFIX:line="155" PREFIX:column="43">interfaceNum</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="156" PREFIX:column="1">int</name></type>		<name PREFIX:line="156" PREFIX:column="17">HID_GetDescriptor</name><parameter_list PREFIX:line="156" PREFIX:column="34">(<param><decl><type><name PREFIX:line="156" PREFIX:column="35">int</name></type> <name PREFIX:line="156" PREFIX:column="39">i</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="157" PREFIX:column="1">bool</name></type>	<name PREFIX:line="157" PREFIX:column="9">HID_Setup</name><parameter_list PREFIX:line="157" PREFIX:column="18">(<param><decl><type><name PREFIX:line="157" PREFIX:column="19">Setup</name>&amp;</type> <name PREFIX:line="157" PREFIX:column="26">setup</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="158" PREFIX:column="1">void</name></type>	<name PREFIX:line="158" PREFIX:column="9">HID_SendReport</name><parameter_list PREFIX:line="158" PREFIX:column="23">(<param><decl><type><name PREFIX:line="158" PREFIX:column="24">uint8_t</name></type> <name PREFIX:line="158" PREFIX:column="32">id</name></decl></param>,  <param><decl><type><name PREFIX:line="158" PREFIX:column="37">void</name>*</type> <name PREFIX:line="158" PREFIX:column="43">data</name></decl></param>, <param><decl><type><name PREFIX:line="158" PREFIX:column="49">int</name></type> <name PREFIX:line="158" PREFIX:column="53">len</name></decl></param>)</parameter_list>;</function_decl>

<comment type="line" PREFIX:line="160" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="161" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="162" PREFIX:column="1">//	MSC 'Driver'</comment>

<function_decl><type><name PREFIX:line="164" PREFIX:column="1">int</name></type>		<name PREFIX:line="164" PREFIX:column="17">MSC_GetInterface</name><parameter_list PREFIX:line="164" PREFIX:column="33">(<param><decl><type><name PREFIX:line="164" PREFIX:column="34">uint8_t</name>*</type> <name PREFIX:line="164" PREFIX:column="43">interfaceNum</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="165" PREFIX:column="1">int</name></type>		<name PREFIX:line="165" PREFIX:column="17">MSC_GetDescriptor</name><parameter_list PREFIX:line="165" PREFIX:column="34">(<param><decl><type><name PREFIX:line="165" PREFIX:column="35">int</name></type> <name PREFIX:line="165" PREFIX:column="39">i</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="166" PREFIX:column="1">bool</name></type>	<name PREFIX:line="166" PREFIX:column="9">MSC_Setup</name><parameter_list PREFIX:line="166" PREFIX:column="18">(<param><decl><type><name PREFIX:line="166" PREFIX:column="19">Setup</name>&amp;</type> <name PREFIX:line="166" PREFIX:column="26">setup</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="167" PREFIX:column="1">bool</name></type>	<name PREFIX:line="167" PREFIX:column="9">MSC_Data</name><parameter_list PREFIX:line="167" PREFIX:column="17">(<param><decl><type><name PREFIX:line="167" PREFIX:column="18">uint8_t</name></type> <name PREFIX:line="167" PREFIX:column="26">rx</name></decl></param>,<param><decl><type><name PREFIX:line="167" PREFIX:column="29">uint8_t</name></type> <name PREFIX:line="167" PREFIX:column="37">tx</name></decl></param>)</parameter_list>;</function_decl>

<comment type="line" PREFIX:line="169" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="170" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="171" PREFIX:column="1">//	CSC 'Driver'</comment>

<function_decl><type><name PREFIX:line="173" PREFIX:column="1">int</name></type>		<name PREFIX:line="173" PREFIX:column="17">CDC_GetInterface</name><parameter_list PREFIX:line="173" PREFIX:column="33">(<param><decl><type><name PREFIX:line="173" PREFIX:column="34">uint8_t</name>*</type> <name PREFIX:line="173" PREFIX:column="43">interfaceNum</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="174" PREFIX:column="1">int</name></type>		<name PREFIX:line="174" PREFIX:column="17">CDC_GetDescriptor</name><parameter_list PREFIX:line="174" PREFIX:column="34">(<param><decl><type><name PREFIX:line="174" PREFIX:column="35">int</name></type> <name PREFIX:line="174" PREFIX:column="39">i</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="175" PREFIX:column="1">bool</name></type>	<name PREFIX:line="175" PREFIX:column="9">CDC_Setup</name><parameter_list PREFIX:line="175" PREFIX:column="18">(<param><decl><type><name PREFIX:line="175" PREFIX:column="19">Setup</name>&amp;</type> <name PREFIX:line="175" PREFIX:column="26">setup</name></decl></param>)</parameter_list>;</function_decl>

<comment type="line" PREFIX:line="177" PREFIX:column="1">//================================================================================</comment>
<comment type="line" PREFIX:line="178" PREFIX:column="1">//================================================================================</comment>

<cpp:define PREFIX:line="180" PREFIX:column="1">#<cpp:directive PREFIX:line="180" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="180" PREFIX:column="9">TRANSFER_PGM</name></cpp:macro>		<cpp:value PREFIX:line="180" PREFIX:column="33">0x80</cpp:value></cpp:define>
<cpp:define PREFIX:line="181" PREFIX:column="1">#<cpp:directive PREFIX:line="181" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="181" PREFIX:column="9">TRANSFER_RELEASE</name></cpp:macro>	<cpp:value PREFIX:line="181" PREFIX:column="33">0x40</cpp:value></cpp:define>
<cpp:define PREFIX:line="182" PREFIX:column="1">#<cpp:directive PREFIX:line="182" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="182" PREFIX:column="9">TRANSFER_ZERO</name></cpp:macro>		<cpp:value PREFIX:line="182" PREFIX:column="33">0x20</cpp:value></cpp:define>

<function_decl><type><name PREFIX:line="184" PREFIX:column="1">int</name></type> <name PREFIX:line="184" PREFIX:column="5">USB_SendControl</name><parameter_list PREFIX:line="184" PREFIX:column="20">(<param><decl><type><name PREFIX:line="184" PREFIX:column="21">uint8_t</name></type> <name PREFIX:line="184" PREFIX:column="29">flags</name></decl></param>,  <param><decl><type><name PREFIX:line="184" PREFIX:column="37">void</name>*</type> <name PREFIX:line="184" PREFIX:column="43">d</name></decl></param>, <param><decl><type><name PREFIX:line="184" PREFIX:column="46">int</name></type> <name PREFIX:line="184" PREFIX:column="50">len</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="185" PREFIX:column="1">int</name></type> <name PREFIX:line="185" PREFIX:column="5">USB_RecvControl</name><parameter_list PREFIX:line="185" PREFIX:column="20">(<param><decl><type><name PREFIX:line="185" PREFIX:column="21">void</name>*</type> <name PREFIX:line="185" PREFIX:column="27">d</name></decl></param>, <param><decl><type><name PREFIX:line="185" PREFIX:column="30">int</name></type> <name PREFIX:line="185" PREFIX:column="34">len</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name PREFIX:line="187" PREFIX:column="1">uint8_t</name></type>	<name PREFIX:line="187" PREFIX:column="9">USB_Available</name><parameter_list PREFIX:line="187" PREFIX:column="22">(<param><decl><type><name PREFIX:line="187" PREFIX:column="23">uint8_t</name></type> <name PREFIX:line="187" PREFIX:column="31">ep</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="188" PREFIX:column="1">int</name></type> <name PREFIX:line="188" PREFIX:column="5">USB_Send</name><parameter_list PREFIX:line="188" PREFIX:column="13">(<param><decl><type><name PREFIX:line="188" PREFIX:column="14">uint8_t</name></type> <name PREFIX:line="188" PREFIX:column="22">ep</name></decl></param>,  <param><decl><type><name PREFIX:line="188" PREFIX:column="27">void</name>*</type> <name PREFIX:line="188" PREFIX:column="33">data</name></decl></param>, <param><decl><type><name PREFIX:line="188" PREFIX:column="39">int</name></type> <name PREFIX:line="188" PREFIX:column="43">len</name></decl></param>)</parameter_list>;</function_decl>	<comment type="line" PREFIX:line="188" PREFIX:column="49">// blocking</comment>
<function_decl><type><name PREFIX:line="189" PREFIX:column="1">int</name></type> <name PREFIX:line="189" PREFIX:column="5">USB_Recv</name><parameter_list PREFIX:line="189" PREFIX:column="13">(<param><decl><type><name PREFIX:line="189" PREFIX:column="14">uint8_t</name></type> <name PREFIX:line="189" PREFIX:column="22">ep</name></decl></param>, <param><decl><type><name PREFIX:line="189" PREFIX:column="26">void</name>*</type> <name PREFIX:line="189" PREFIX:column="32">data</name></decl></param>, <param><decl><type><name PREFIX:line="189" PREFIX:column="38">int</name></type> <name PREFIX:line="189" PREFIX:column="42">len</name></decl></param>)</parameter_list>;</function_decl>		<comment type="line" PREFIX:line="189" PREFIX:column="57">// non-blocking</comment>
<function_decl><type><name PREFIX:line="190" PREFIX:column="1">int</name></type> <name PREFIX:line="190" PREFIX:column="5">USB_Recv</name><parameter_list PREFIX:line="190" PREFIX:column="13">(<param><decl><type><name PREFIX:line="190" PREFIX:column="14">uint8_t</name></type> <name PREFIX:line="190" PREFIX:column="22">ep</name></decl></param>)</parameter_list>;</function_decl>							<comment type="line" PREFIX:line="190" PREFIX:column="81">// non-blocking</comment>
<function_decl><type><name PREFIX:line="191" PREFIX:column="1">void</name></type> <name PREFIX:line="191" PREFIX:column="6">USB_Flush</name><parameter_list PREFIX:line="191" PREFIX:column="15">(<param><decl><type><name PREFIX:line="191" PREFIX:column="16">uint8_t</name></type> <name PREFIX:line="191" PREFIX:column="24">ep</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif PREFIX:line="193" PREFIX:column="1">#<cpp:directive PREFIX:line="193" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<cpp:endif PREFIX:line="195" PREFIX:column="1">#<cpp:directive PREFIX:line="195" PREFIX:column="2">endif</cpp:directive></cpp:endif> <comment type="block" PREFIX:line="195" PREFIX:column="8">/* if defined(USBCON) */</comment>
</unit>
