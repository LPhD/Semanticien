<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/cores/arduino/new.cpp" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*
  Copyright (c) 2014 Arduino.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/</comment>

<cpp:include PREFIX:line="19" PREFIX:column="1">#<cpp:directive PREFIX:line="19" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="19" PREFIX:column="10">&lt;stdlib.h&gt;</cpp:file></cpp:include>

<function><type><name PREFIX:line="21" PREFIX:column="1">void</name> *</type><name PREFIX:line="21" PREFIX:column="7">operator new</name><parameter_list PREFIX:line="21" PREFIX:column="19">(<param><decl><type><name PREFIX:line="21" PREFIX:column="20">size_t</name></type> <name PREFIX:line="21" PREFIX:column="27">size</name></decl></param>)</parameter_list> <block PREFIX:line="21" PREFIX:column="33">{
  <return PREFIX:line="22" PREFIX:column="3">return <expr><call><name PREFIX:line="22" PREFIX:column="10">malloc</name><argument_list PREFIX:line="22" PREFIX:column="16">(<argument><expr><name PREFIX:line="22" PREFIX:column="17">size</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name PREFIX:line="25" PREFIX:column="1">void</name> *</type><name PREFIX:line="25" PREFIX:column="7">operator new[]</name><parameter_list PREFIX:line="25" PREFIX:column="21">(<param><decl><type><name PREFIX:line="25" PREFIX:column="22">size_t</name></type> <name PREFIX:line="25" PREFIX:column="29">size</name></decl></param>)</parameter_list> <block PREFIX:line="25" PREFIX:column="35">{
  <return PREFIX:line="26" PREFIX:column="3">return <expr><call><name PREFIX:line="26" PREFIX:column="10">malloc</name><argument_list PREFIX:line="26" PREFIX:column="16">(<argument><expr><name PREFIX:line="26" PREFIX:column="17">size</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>

<function><type><name PREFIX:line="29" PREFIX:column="1">void</name></type> <name PREFIX:line="29" PREFIX:column="6">operator delete</name><parameter_list PREFIX:line="29" PREFIX:column="21">(<param><decl><type><name PREFIX:line="29" PREFIX:column="22">void</name> *</type> <name PREFIX:line="29" PREFIX:column="29">ptr</name></decl></param>)</parameter_list> <block PREFIX:line="29" PREFIX:column="34">{
  <expr_stmt><expr><call><name PREFIX:line="30" PREFIX:column="3">free</name><argument_list PREFIX:line="30" PREFIX:column="7">(<argument><expr><name PREFIX:line="30" PREFIX:column="8">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name PREFIX:line="33" PREFIX:column="1">void</name></type> <name PREFIX:line="33" PREFIX:column="6">operator delete[]</name><parameter_list PREFIX:line="33" PREFIX:column="23">(<param><decl><type><name PREFIX:line="33" PREFIX:column="24">void</name> *</type> <name PREFIX:line="33" PREFIX:column="31">ptr</name></decl></param>)</parameter_list> <block PREFIX:line="33" PREFIX:column="36">{
  <expr_stmt><expr><call><name PREFIX:line="34" PREFIX:column="3">free</name><argument_list PREFIX:line="34" PREFIX:column="7">(<argument><expr><name PREFIX:line="34" PREFIX:column="8">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

</unit>
