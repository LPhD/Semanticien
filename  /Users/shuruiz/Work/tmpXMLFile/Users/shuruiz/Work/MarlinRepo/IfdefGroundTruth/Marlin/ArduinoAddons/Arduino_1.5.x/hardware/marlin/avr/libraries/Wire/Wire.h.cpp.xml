<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.5.x/hardware/marlin/avr/libraries/Wire/Wire.h.cpp" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*
  TwoWire.h - TWI/I2C library for Arduino &amp; Wiring
  Copyright (c) 2006 Nicholas Zambetti.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA

  Modified 2012 by Todd Krein (todd@krein.org) to implement repeated starts
*/</comment>

<cpp:ifndef PREFIX:line="22" PREFIX:column="1">#<cpp:directive PREFIX:line="22" PREFIX:column="2">ifndef</cpp:directive> <name PREFIX:line="22" PREFIX:column="9">TwoWire_h</name></cpp:ifndef>
<cpp:define PREFIX:line="23" PREFIX:column="1">#<cpp:directive PREFIX:line="23" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="23" PREFIX:column="9">TwoWire_h</name></cpp:macro></cpp:define>

<cpp:include PREFIX:line="25" PREFIX:column="1">#<cpp:directive PREFIX:line="25" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="25" PREFIX:column="10">&lt;inttypes.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="26" PREFIX:column="1">#<cpp:directive PREFIX:line="26" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="26" PREFIX:column="10">"Stream.h"</cpp:file></cpp:include>

<cpp:define PREFIX:line="28" PREFIX:column="1">#<cpp:directive PREFIX:line="28" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="28" PREFIX:column="9">BUFFER_LENGTH</name></cpp:macro> <cpp:value PREFIX:line="28" PREFIX:column="23">32</cpp:value></cpp:define>

<class PREFIX:line="30" PREFIX:column="1">class <name PREFIX:line="30" PREFIX:column="7">TwoWire</name> <super PREFIX:line="30" PREFIX:column="15">: <specifier PREFIX:line="30" PREFIX:column="17">public</specifier> <name PREFIX:line="30" PREFIX:column="24">Stream</name></super>
<block PREFIX:line="31" PREFIX:column="1">{<private type="default" PREFIX:line="31" PREFIX:column="2">
  </private><private PREFIX:line="32" PREFIX:column="3">private:
    <decl_stmt><decl><type><specifier PREFIX:line="33" PREFIX:column="5">static</specifier> <name PREFIX:line="33" PREFIX:column="12">uint8_t</name></type> <name><name PREFIX:line="33" PREFIX:column="20">rxBuffer</name><index PREFIX:line="33" PREFIX:column="28">[]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier PREFIX:line="34" PREFIX:column="5">static</specifier> <name PREFIX:line="34" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="34" PREFIX:column="20">rxBufferIndex</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier PREFIX:line="35" PREFIX:column="5">static</specifier> <name PREFIX:line="35" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="35" PREFIX:column="20">rxBufferLength</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier PREFIX:line="37" PREFIX:column="5">static</specifier> <name PREFIX:line="37" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="37" PREFIX:column="20">txAddress</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier PREFIX:line="38" PREFIX:column="5">static</specifier> <name PREFIX:line="38" PREFIX:column="12">uint8_t</name></type> <name><name PREFIX:line="38" PREFIX:column="20">txBuffer</name><index PREFIX:line="38" PREFIX:column="28">[]</index></name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier PREFIX:line="39" PREFIX:column="5">static</specifier> <name PREFIX:line="39" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="39" PREFIX:column="20">txBufferIndex</name></decl>;</decl_stmt>
    <decl_stmt><decl><type><specifier PREFIX:line="40" PREFIX:column="5">static</specifier> <name PREFIX:line="40" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="40" PREFIX:column="20">txBufferLength</name></decl>;</decl_stmt>

    <decl_stmt><decl><type><specifier PREFIX:line="42" PREFIX:column="5">static</specifier> <name PREFIX:line="42" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="42" PREFIX:column="20">transmitting</name></decl>;</decl_stmt>
    <function_decl><type><specifier PREFIX:line="43" PREFIX:column="5">static</specifier> <name PREFIX:line="43" PREFIX:column="12">void</name></type> (*<name PREFIX:line="43" PREFIX:column="19">user_onRequest</name>)<parameter_list PREFIX:line="43" PREFIX:column="34">(<param><decl><type><name PREFIX:line="43" PREFIX:column="35">void</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="44" PREFIX:column="5">static</specifier> <name PREFIX:line="44" PREFIX:column="12">void</name></type> (*<name PREFIX:line="44" PREFIX:column="19">user_onReceive</name>)<parameter_list PREFIX:line="44" PREFIX:column="34">(<param><decl><type><name PREFIX:line="44" PREFIX:column="35">int</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="45" PREFIX:column="5">static</specifier> <name PREFIX:line="45" PREFIX:column="12">void</name></type> <name PREFIX:line="45" PREFIX:column="17">onRequestService</name><parameter_list PREFIX:line="45" PREFIX:column="33">(<param><decl><type><name PREFIX:line="45" PREFIX:column="34">void</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="46" PREFIX:column="5">static</specifier> <name PREFIX:line="46" PREFIX:column="12">void</name></type> <name PREFIX:line="46" PREFIX:column="17">onReceiveService</name><parameter_list PREFIX:line="46" PREFIX:column="33">(<param><decl><type><name PREFIX:line="46" PREFIX:column="34">uint8_t</name>*</type></decl></param>, <param><decl><type><name PREFIX:line="46" PREFIX:column="44">int</name></type></decl></param>)</parameter_list>;</function_decl>
  </private><public PREFIX:line="47" PREFIX:column="3">public:
    <constructor_decl><name PREFIX:line="48" PREFIX:column="5">TwoWire</name><parameter_list PREFIX:line="48" PREFIX:column="12">()</parameter_list>;</constructor_decl>
    <function_decl><type><name PREFIX:line="49" PREFIX:column="5">void</name></type> <name PREFIX:line="49" PREFIX:column="10">begin</name><parameter_list PREFIX:line="49" PREFIX:column="15">()</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="50" PREFIX:column="5">void</name></type> <name PREFIX:line="50" PREFIX:column="10">begin</name><parameter_list PREFIX:line="50" PREFIX:column="15">(<param><decl><type><name PREFIX:line="50" PREFIX:column="16">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="51" PREFIX:column="5">void</name></type> <name PREFIX:line="51" PREFIX:column="10">begin</name><parameter_list PREFIX:line="51" PREFIX:column="15">(<param><decl><type><name PREFIX:line="51" PREFIX:column="16">int</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="52" PREFIX:column="5">void</name></type> <name PREFIX:line="52" PREFIX:column="10">setClock</name><parameter_list PREFIX:line="52" PREFIX:column="18">(<param><decl><type><name PREFIX:line="52" PREFIX:column="19">uint32_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="53" PREFIX:column="5">void</name></type> <name PREFIX:line="53" PREFIX:column="10">beginTransmission</name><parameter_list PREFIX:line="53" PREFIX:column="27">(<param><decl><type><name PREFIX:line="53" PREFIX:column="28">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="54" PREFIX:column="5">void</name></type> <name PREFIX:line="54" PREFIX:column="10">beginTransmission</name><parameter_list PREFIX:line="54" PREFIX:column="27">(<param><decl><type><name PREFIX:line="54" PREFIX:column="28">int</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="55" PREFIX:column="5">uint8_t</name></type> <name PREFIX:line="55" PREFIX:column="13">endTransmission</name><parameter_list PREFIX:line="55" PREFIX:column="28">(<param><decl><type><name PREFIX:line="55" PREFIX:column="29">void</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="56" PREFIX:column="5">uint8_t</name></type> <name PREFIX:line="56" PREFIX:column="13">endTransmission</name><parameter_list PREFIX:line="56" PREFIX:column="28">(<param><decl><type><name PREFIX:line="56" PREFIX:column="29">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="57" PREFIX:column="5">uint8_t</name></type> <name PREFIX:line="57" PREFIX:column="13">requestFrom</name><parameter_list PREFIX:line="57" PREFIX:column="24">(<param><decl><type><name PREFIX:line="57" PREFIX:column="25">uint8_t</name></type></decl></param>, <param><decl><type><name PREFIX:line="57" PREFIX:column="34">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="58" PREFIX:column="5">uint8_t</name></type> <name PREFIX:line="58" PREFIX:column="13">requestFrom</name><parameter_list PREFIX:line="58" PREFIX:column="24">(<param><decl><type><name PREFIX:line="58" PREFIX:column="25">uint8_t</name></type></decl></param>, <param><decl><type><name PREFIX:line="58" PREFIX:column="34">uint8_t</name></type></decl></param>, <param><decl><type><name PREFIX:line="58" PREFIX:column="43">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="59" PREFIX:column="5">uint8_t</name></type> <name PREFIX:line="59" PREFIX:column="13">requestFrom</name><parameter_list PREFIX:line="59" PREFIX:column="24">(<param><decl><type><name PREFIX:line="59" PREFIX:column="25">int</name></type></decl></param>, <param><decl><type><name PREFIX:line="59" PREFIX:column="30">int</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="60" PREFIX:column="5">uint8_t</name></type> <name PREFIX:line="60" PREFIX:column="13">requestFrom</name><parameter_list PREFIX:line="60" PREFIX:column="24">(<param><decl><type><name PREFIX:line="60" PREFIX:column="25">int</name></type></decl></param>, <param><decl><type><name PREFIX:line="60" PREFIX:column="30">int</name></type></decl></param>, <param><decl><type><name PREFIX:line="60" PREFIX:column="35">int</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="61" PREFIX:column="5">virtual</specifier> <name PREFIX:line="61" PREFIX:column="13">size_t</name></type> <name PREFIX:line="61" PREFIX:column="20">write</name><parameter_list PREFIX:line="61" PREFIX:column="25">(<param><decl><type><name PREFIX:line="61" PREFIX:column="26">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="62" PREFIX:column="5">virtual</specifier> <name PREFIX:line="62" PREFIX:column="13">size_t</name></type> <name PREFIX:line="62" PREFIX:column="20">write</name><parameter_list PREFIX:line="62" PREFIX:column="25">( <param><decl><type><name PREFIX:line="62" PREFIX:column="27">uint8_t</name> *</type></decl></param>, <param><decl><type><name PREFIX:line="62" PREFIX:column="38">size_t</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="63" PREFIX:column="5">virtual</specifier> <name PREFIX:line="63" PREFIX:column="13">int</name></type> <name PREFIX:line="63" PREFIX:column="17">available</name><parameter_list PREFIX:line="63" PREFIX:column="26">(<param><decl><type><name PREFIX:line="63" PREFIX:column="27">void</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="64" PREFIX:column="5">virtual</specifier> <name PREFIX:line="64" PREFIX:column="13">int</name></type> <name PREFIX:line="64" PREFIX:column="17">read</name><parameter_list PREFIX:line="64" PREFIX:column="21">(<param><decl><type><name PREFIX:line="64" PREFIX:column="22">void</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="65" PREFIX:column="5">virtual</specifier> <name PREFIX:line="65" PREFIX:column="13">int</name></type> <name PREFIX:line="65" PREFIX:column="17">peek</name><parameter_list PREFIX:line="65" PREFIX:column="21">(<param><decl><type><name PREFIX:line="65" PREFIX:column="22">void</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><specifier PREFIX:line="66" PREFIX:column="5">virtual</specifier> <name PREFIX:line="66" PREFIX:column="13">void</name></type> <name PREFIX:line="66" PREFIX:column="18">flush</name><parameter_list PREFIX:line="66" PREFIX:column="23">(<param><decl><type><name PREFIX:line="66" PREFIX:column="24">void</name></type></decl></param>)</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="67" PREFIX:column="5">void</name></type> <name PREFIX:line="67" PREFIX:column="10">onReceive</name><parameter_list PREFIX:line="67" PREFIX:column="19">( <param><function_decl><type><name PREFIX:line="67" PREFIX:column="21">void</name></type> (*)<parameter_list PREFIX:line="67" PREFIX:column="29">(<param><decl><type><name PREFIX:line="67" PREFIX:column="30">int</name></type></decl></param>)</parameter_list></function_decl></param> )</parameter_list>;</function_decl>
    <function_decl><type><name PREFIX:line="68" PREFIX:column="5">void</name></type> <name PREFIX:line="68" PREFIX:column="10">onRequest</name><parameter_list PREFIX:line="68" PREFIX:column="19">( <param><function_decl><type><name PREFIX:line="68" PREFIX:column="21">void</name></type> (*)<parameter_list PREFIX:line="68" PREFIX:column="29">(<param><decl><type><name PREFIX:line="68" PREFIX:column="30">void</name></type></decl></param>)</parameter_list></function_decl></param> )</parameter_list>;</function_decl>

    <function><type><specifier PREFIX:line="70" PREFIX:column="5">inline</specifier> <name PREFIX:line="70" PREFIX:column="12">size_t</name></type> <name PREFIX:line="70" PREFIX:column="19">write</name><parameter_list PREFIX:line="70" PREFIX:column="24">(<param><decl><type><name PREFIX:line="70" PREFIX:column="25">unknowntype</name> <name PREFIX:line="70" PREFIX:column="37">long</name></type> <name PREFIX:line="70" PREFIX:column="42">n</name></decl></param>)</parameter_list> <block PREFIX:line="70" PREFIX:column="45">{ <return PREFIX:line="70" PREFIX:column="47">return <expr><call><name PREFIX:line="70" PREFIX:column="54">write</name><argument_list PREFIX:line="70" PREFIX:column="59">(<argument><expr PREFIX:line="70" PREFIX:column="60">(<name PREFIX:line="70" PREFIX:column="61">uint8_t</name>)<name PREFIX:line="70" PREFIX:column="69">n</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
    <function><type><specifier PREFIX:line="71" PREFIX:column="5">inline</specifier> <name PREFIX:line="71" PREFIX:column="12">size_t</name></type> <name PREFIX:line="71" PREFIX:column="19">write</name><parameter_list PREFIX:line="71" PREFIX:column="24">(<param><decl><type><name PREFIX:line="71" PREFIX:column="25">long</name></type> <name PREFIX:line="71" PREFIX:column="30">n</name></decl></param>)</parameter_list> <block PREFIX:line="71" PREFIX:column="33">{ <return PREFIX:line="71" PREFIX:column="35">return <expr><call><name PREFIX:line="71" PREFIX:column="42">write</name><argument_list PREFIX:line="71" PREFIX:column="47">(<argument><expr PREFIX:line="71" PREFIX:column="48">(<name PREFIX:line="71" PREFIX:column="49">uint8_t</name>)<name PREFIX:line="71" PREFIX:column="57">n</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
    <function><type><specifier PREFIX:line="72" PREFIX:column="5">inline</specifier> <name PREFIX:line="72" PREFIX:column="12">size_t</name></type> <name PREFIX:line="72" PREFIX:column="19">write</name><parameter_list PREFIX:line="72" PREFIX:column="24">(<param><decl><type><name PREFIX:line="72" PREFIX:column="25">unknowntype</name> <name PREFIX:line="72" PREFIX:column="37">int</name></type> <name PREFIX:line="72" PREFIX:column="41">n</name></decl></param>)</parameter_list> <block PREFIX:line="72" PREFIX:column="44">{ <return PREFIX:line="72" PREFIX:column="46">return <expr><call><name PREFIX:line="72" PREFIX:column="53">write</name><argument_list PREFIX:line="72" PREFIX:column="58">(<argument><expr PREFIX:line="72" PREFIX:column="59">(<name PREFIX:line="72" PREFIX:column="60">uint8_t</name>)<name PREFIX:line="72" PREFIX:column="68">n</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
    <function><type><specifier PREFIX:line="73" PREFIX:column="5">inline</specifier> <name PREFIX:line="73" PREFIX:column="12">size_t</name></type> <name PREFIX:line="73" PREFIX:column="19">write</name><parameter_list PREFIX:line="73" PREFIX:column="24">(<param><decl><type><name PREFIX:line="73" PREFIX:column="25">int</name></type> <name PREFIX:line="73" PREFIX:column="29">n</name></decl></param>)</parameter_list> <block PREFIX:line="73" PREFIX:column="32">{ <return PREFIX:line="73" PREFIX:column="34">return <expr><call><name PREFIX:line="73" PREFIX:column="41">write</name><argument_list PREFIX:line="73" PREFIX:column="46">(<argument><expr PREFIX:line="73" PREFIX:column="47">(<name PREFIX:line="73" PREFIX:column="48">uint8_t</name>)<name PREFIX:line="73" PREFIX:column="56">n</name></expr></argument>)</argument_list></call></expr>;</return> }</block></function>
    <using PREFIX:line="74" PREFIX:column="5">using <name><name PREFIX:line="74" PREFIX:column="11">Print</name>::<name PREFIX:line="74" PREFIX:column="18">write</name></name>;</using>
</public>}</block>;</class>

 <decl_stmt><decl><type><name PREFIX:line="77" PREFIX:column="2">TwoWire</name></type> <name PREFIX:line="77" PREFIX:column="10">Wire</name></decl>;</decl_stmt>

<cpp:endif PREFIX:line="79" PREFIX:column="1">#<cpp:directive PREFIX:line="79" PREFIX:column="2">endif</cpp:directive></cpp:endif>

</unit>
