<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/cores/arduino/Client.h.cpp" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*
  Client.h - Base class that provides Client
  Copyright (c) 2011 Adrian McEwen.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/</comment>

<cpp:ifndef PREFIX:line="20" PREFIX:column="1">#<cpp:directive PREFIX:line="20" PREFIX:column="2">ifndef</cpp:directive> <name PREFIX:line="20" PREFIX:column="9">client_h</name></cpp:ifndef>
<cpp:define PREFIX:line="21" PREFIX:column="1">#<cpp:directive PREFIX:line="21" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="21" PREFIX:column="9">client_h</name></cpp:macro></cpp:define>
<cpp:include PREFIX:line="22" PREFIX:column="1">#<cpp:directive PREFIX:line="22" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="22" PREFIX:column="10">"Print.h"</cpp:file></cpp:include>
<cpp:include PREFIX:line="23" PREFIX:column="1">#<cpp:directive PREFIX:line="23" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="23" PREFIX:column="10">"Stream.h"</cpp:file></cpp:include>
<cpp:include PREFIX:line="24" PREFIX:column="1">#<cpp:directive PREFIX:line="24" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="24" PREFIX:column="10">"IPAddress.h"</cpp:file></cpp:include>

<class PREFIX:line="26" PREFIX:column="1">class <name PREFIX:line="26" PREFIX:column="7">Client</name> <super PREFIX:line="26" PREFIX:column="14">: <specifier PREFIX:line="26" PREFIX:column="16">public</specifier> <name PREFIX:line="26" PREFIX:column="23">Stream</name></super> <block PREFIX:line="26" PREFIX:column="30">{<private type="default" PREFIX:line="26" PREFIX:column="31">

</private><public PREFIX:line="28" PREFIX:column="1">public:
  <function_decl><type><specifier PREFIX:line="29" PREFIX:column="3">virtual</specifier> <name PREFIX:line="29" PREFIX:column="11">int</name></type> <name PREFIX:line="29" PREFIX:column="15">connect</name><parameter_list PREFIX:line="29" PREFIX:column="22">(<param><decl><type><name PREFIX:line="29" PREFIX:column="23">IPAddress</name></type> <name PREFIX:line="29" PREFIX:column="33">ip</name></decl></param>, <param><decl><type><name PREFIX:line="29" PREFIX:column="37">uint16_t</name></type> <name PREFIX:line="29" PREFIX:column="46">port</name></decl></param>)</parameter_list> =0;</function_decl>
  <function_decl><type><specifier PREFIX:line="30" PREFIX:column="3">virtual</specifier> <name PREFIX:line="30" PREFIX:column="11">int</name></type> <name PREFIX:line="30" PREFIX:column="15">connect</name><parameter_list PREFIX:line="30" PREFIX:column="22">( <param><decl><type><name PREFIX:line="30" PREFIX:column="24">char</name> *</type><name PREFIX:line="30" PREFIX:column="30">host</name></decl></param>, <param><decl><type><name PREFIX:line="30" PREFIX:column="36">uint16_t</name></type> <name PREFIX:line="30" PREFIX:column="45">port</name></decl></param>)</parameter_list> =0;</function_decl>
  <function_decl><type><specifier PREFIX:line="31" PREFIX:column="3">virtual</specifier> <name PREFIX:line="31" PREFIX:column="11">size_t</name></type> <name PREFIX:line="31" PREFIX:column="18">write</name><parameter_list PREFIX:line="31" PREFIX:column="23">(<param><decl><type><name PREFIX:line="31" PREFIX:column="24">uint8_t</name></type></decl></param>)</parameter_list> =0;</function_decl>
  <function_decl><type><specifier PREFIX:line="32" PREFIX:column="3">virtual</specifier> <name PREFIX:line="32" PREFIX:column="11">size_t</name></type> <name PREFIX:line="32" PREFIX:column="18">write</name><parameter_list PREFIX:line="32" PREFIX:column="23">( <param><decl><type><name PREFIX:line="32" PREFIX:column="25">uint8_t</name> *</type><name PREFIX:line="32" PREFIX:column="34">buf</name></decl></param>, <param><decl><type><name PREFIX:line="32" PREFIX:column="39">size_t</name></type> <name PREFIX:line="32" PREFIX:column="46">size</name></decl></param>)</parameter_list> =0;</function_decl>
  <function_decl><type><specifier PREFIX:line="33" PREFIX:column="3">virtual</specifier> <name PREFIX:line="33" PREFIX:column="11">int</name></type> <name PREFIX:line="33" PREFIX:column="15">available</name><parameter_list PREFIX:line="33" PREFIX:column="24">()</parameter_list> = 0;</function_decl>
  <function_decl><type><specifier PREFIX:line="34" PREFIX:column="3">virtual</specifier> <name PREFIX:line="34" PREFIX:column="11">int</name></type> <name PREFIX:line="34" PREFIX:column="15">read</name><parameter_list PREFIX:line="34" PREFIX:column="19">()</parameter_list> = 0;</function_decl>
  <function_decl><type><specifier PREFIX:line="35" PREFIX:column="3">virtual</specifier> <name PREFIX:line="35" PREFIX:column="11">int</name></type> <name PREFIX:line="35" PREFIX:column="15">read</name><parameter_list PREFIX:line="35" PREFIX:column="19">(<param><decl><type><name PREFIX:line="35" PREFIX:column="20">uint8_t</name> *</type><name PREFIX:line="35" PREFIX:column="29">buf</name></decl></param>, <param><decl><type><name PREFIX:line="35" PREFIX:column="34">size_t</name></type> <name PREFIX:line="35" PREFIX:column="41">size</name></decl></param>)</parameter_list> = 0;</function_decl>
  <function_decl><type><specifier PREFIX:line="36" PREFIX:column="3">virtual</specifier> <name PREFIX:line="36" PREFIX:column="11">int</name></type> <name PREFIX:line="36" PREFIX:column="15">peek</name><parameter_list PREFIX:line="36" PREFIX:column="19">()</parameter_list> = 0;</function_decl>
  <function_decl><type><specifier PREFIX:line="37" PREFIX:column="3">virtual</specifier> <name PREFIX:line="37" PREFIX:column="11">void</name></type> <name PREFIX:line="37" PREFIX:column="16">flush</name><parameter_list PREFIX:line="37" PREFIX:column="21">()</parameter_list> = 0;</function_decl>
  <function_decl><type><specifier PREFIX:line="38" PREFIX:column="3">virtual</specifier> <name PREFIX:line="38" PREFIX:column="11">void</name></type> <name PREFIX:line="38" PREFIX:column="16">stop</name><parameter_list PREFIX:line="38" PREFIX:column="20">()</parameter_list> = 0;</function_decl>
  <function_decl><type><specifier PREFIX:line="39" PREFIX:column="3">virtual</specifier> <name PREFIX:line="39" PREFIX:column="11">uint8_t</name></type> <name PREFIX:line="39" PREFIX:column="19">connected</name><parameter_list PREFIX:line="39" PREFIX:column="28">()</parameter_list> = 0;</function_decl>
  <function_decl><type><specifier PREFIX:line="40" PREFIX:column="3">virtual</specifier></type> <name PREFIX:line="40" PREFIX:column="11">operator bool</name><parameter_list PREFIX:line="40" PREFIX:column="24">()</parameter_list> = 0;</function_decl>
</public><protected PREFIX:line="41" PREFIX:column="1">protected:
  <function><type><name PREFIX:line="42" PREFIX:column="3">uint8_t</name>*</type> <name PREFIX:line="42" PREFIX:column="12">rawIPAddress</name><parameter_list PREFIX:line="42" PREFIX:column="24">(<param><decl><type><name PREFIX:line="42" PREFIX:column="25">IPAddress</name>&amp;</type> <name PREFIX:line="42" PREFIX:column="36">addr</name></decl></param>)</parameter_list> <block PREFIX:line="42" PREFIX:column="42">{ <return PREFIX:line="42" PREFIX:column="44">return <expr><call><name><name PREFIX:line="42" PREFIX:column="51">addr</name>.<name PREFIX:line="42" PREFIX:column="56">raw_address</name></name><argument_list PREFIX:line="42" PREFIX:column="67">()</argument_list></call></expr>;</return> }</block></function><empty_stmt PREFIX:line="42" PREFIX:column="72">;</empty_stmt>
</protected>}</block>;</class>

<cpp:endif PREFIX:line="45" PREFIX:column="1">#<cpp:directive PREFIX:line="45" PREFIX:column="2">endif</cpp:directive></cpp:endif>
</unit>
