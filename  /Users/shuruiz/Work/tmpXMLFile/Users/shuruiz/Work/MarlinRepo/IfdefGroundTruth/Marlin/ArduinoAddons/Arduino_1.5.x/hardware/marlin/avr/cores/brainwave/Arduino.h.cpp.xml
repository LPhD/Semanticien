<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.5.x/hardware/marlin/avr/cores/brainwave/Arduino.h.cpp" PREFIX:tabs="8"><cpp:ifndef PREFIX:line="1" PREFIX:column="1">#<cpp:directive PREFIX:line="1" PREFIX:column="2">ifndef</cpp:directive> <name PREFIX:line="1" PREFIX:column="9">Arduino_h</name></cpp:ifndef>
<cpp:define PREFIX:line="2" PREFIX:column="1">#<cpp:directive PREFIX:line="2" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="2" PREFIX:column="9">Arduino_h</name></cpp:macro></cpp:define>

<cpp:include PREFIX:line="4" PREFIX:column="1">#<cpp:directive PREFIX:line="4" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="4" PREFIX:column="10">&lt;stdlib.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="5" PREFIX:column="1">#<cpp:directive PREFIX:line="5" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="5" PREFIX:column="10">&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="6" PREFIX:column="1">#<cpp:directive PREFIX:line="6" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="6" PREFIX:column="10">&lt;math.h&gt;</cpp:file></cpp:include>

<cpp:include PREFIX:line="8" PREFIX:column="1">#<cpp:directive PREFIX:line="8" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="8" PREFIX:column="10">&lt;avr/pgmspace.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="9" PREFIX:column="1">#<cpp:directive PREFIX:line="9" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="9" PREFIX:column="10">&lt;avr/io.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="10" PREFIX:column="1">#<cpp:directive PREFIX:line="10" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="10" PREFIX:column="10">&lt;avr/interrupt.h&gt;</cpp:file></cpp:include>

<cpp:include PREFIX:line="12" PREFIX:column="1">#<cpp:directive PREFIX:line="12" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="12" PREFIX:column="10">"binary.h"</cpp:file></cpp:include>

<cpp:ifdef PREFIX:line="14" PREFIX:column="1">#<cpp:directive PREFIX:line="14" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="14" PREFIX:column="8">__cplusplus</name></cpp:ifdef>

<cpp:endif PREFIX:line="16" PREFIX:column="1">#<cpp:directive PREFIX:line="16" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<cpp:define PREFIX:line="18" PREFIX:column="1">#<cpp:directive PREFIX:line="18" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="18" PREFIX:column="9">HIGH</name></cpp:macro> <cpp:value PREFIX:line="18" PREFIX:column="14">0x1</cpp:value></cpp:define>
<cpp:define PREFIX:line="19" PREFIX:column="1">#<cpp:directive PREFIX:line="19" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="19" PREFIX:column="9">LOW</name></cpp:macro>  <cpp:value PREFIX:line="19" PREFIX:column="14">0x0</cpp:value></cpp:define>

<cpp:define PREFIX:line="21" PREFIX:column="1">#<cpp:directive PREFIX:line="21" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="21" PREFIX:column="9">INPUT</name></cpp:macro> <cpp:value PREFIX:line="21" PREFIX:column="15">0x0</cpp:value></cpp:define>
<cpp:define PREFIX:line="22" PREFIX:column="1">#<cpp:directive PREFIX:line="22" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="22" PREFIX:column="9">OUTPUT</name></cpp:macro> <cpp:value PREFIX:line="22" PREFIX:column="16">0x1</cpp:value></cpp:define>
<cpp:define PREFIX:line="23" PREFIX:column="1">#<cpp:directive PREFIX:line="23" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="23" PREFIX:column="9">INPUT_PULLUP</name></cpp:macro> <cpp:value PREFIX:line="23" PREFIX:column="22">0x2</cpp:value></cpp:define>

<cpp:define PREFIX:line="25" PREFIX:column="1">#<cpp:directive PREFIX:line="25" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="25" PREFIX:column="9">true</name></cpp:macro> <cpp:value PREFIX:line="25" PREFIX:column="14">0x1</cpp:value></cpp:define>
<cpp:define PREFIX:line="26" PREFIX:column="1">#<cpp:directive PREFIX:line="26" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="26" PREFIX:column="9">false</name></cpp:macro> <cpp:value PREFIX:line="26" PREFIX:column="15">0x0</cpp:value></cpp:define>

<cpp:define PREFIX:line="28" PREFIX:column="1">#<cpp:directive PREFIX:line="28" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="28" PREFIX:column="9">PI</name></cpp:macro> <cpp:value PREFIX:line="28" PREFIX:column="12">3.1415926535897932384626433832795</cpp:value></cpp:define>
<cpp:define PREFIX:line="29" PREFIX:column="1">#<cpp:directive PREFIX:line="29" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="29" PREFIX:column="9">HALF_PI</name></cpp:macro> <cpp:value PREFIX:line="29" PREFIX:column="17">1.5707963267948966192313216916398</cpp:value></cpp:define>
<cpp:define PREFIX:line="30" PREFIX:column="1">#<cpp:directive PREFIX:line="30" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="30" PREFIX:column="9">TWO_PI</name></cpp:macro> <cpp:value PREFIX:line="30" PREFIX:column="16">6.283185307179586476925286766559</cpp:value></cpp:define>
<cpp:define PREFIX:line="31" PREFIX:column="1">#<cpp:directive PREFIX:line="31" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="31" PREFIX:column="9">DEG_TO_RAD</name></cpp:macro> <cpp:value PREFIX:line="31" PREFIX:column="20">0.017453292519943295769236907684886</cpp:value></cpp:define>
<cpp:define PREFIX:line="32" PREFIX:column="1">#<cpp:directive PREFIX:line="32" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="32" PREFIX:column="9">RAD_TO_DEG</name></cpp:macro> <cpp:value PREFIX:line="32" PREFIX:column="20">57.295779513082320876798154814105</cpp:value></cpp:define>

<cpp:define PREFIX:line="34" PREFIX:column="1">#<cpp:directive PREFIX:line="34" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="34" PREFIX:column="9">SERIAL</name></cpp:macro>  <cpp:value PREFIX:line="34" PREFIX:column="17">0x0</cpp:value></cpp:define>
<cpp:define PREFIX:line="35" PREFIX:column="1">#<cpp:directive PREFIX:line="35" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="35" PREFIX:column="9">DISPLAY</name></cpp:macro> <cpp:value PREFIX:line="35" PREFIX:column="17">0x1</cpp:value></cpp:define>

<cpp:define PREFIX:line="37" PREFIX:column="1">#<cpp:directive PREFIX:line="37" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="37" PREFIX:column="9">LSBFIRST</name></cpp:macro> <cpp:value PREFIX:line="37" PREFIX:column="18">0</cpp:value></cpp:define>
<cpp:define PREFIX:line="38" PREFIX:column="1">#<cpp:directive PREFIX:line="38" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="38" PREFIX:column="9">MSBFIRST</name></cpp:macro> <cpp:value PREFIX:line="38" PREFIX:column="18">1</cpp:value></cpp:define>

<cpp:define PREFIX:line="40" PREFIX:column="1">#<cpp:directive PREFIX:line="40" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="40" PREFIX:column="9">CHANGE</name></cpp:macro> <cpp:value PREFIX:line="40" PREFIX:column="16">1</cpp:value></cpp:define>
<cpp:define PREFIX:line="41" PREFIX:column="1">#<cpp:directive PREFIX:line="41" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="41" PREFIX:column="9">FALLING</name></cpp:macro> <cpp:value PREFIX:line="41" PREFIX:column="17">2</cpp:value></cpp:define>
<cpp:define PREFIX:line="42" PREFIX:column="1">#<cpp:directive PREFIX:line="42" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="42" PREFIX:column="9">RISING</name></cpp:macro> <cpp:value PREFIX:line="42" PREFIX:column="16">3</cpp:value></cpp:define>

<cpp:if PREFIX:line="44" PREFIX:column="1">#<cpp:directive PREFIX:line="44" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="44" PREFIX:column="5">defined</name><argument_list PREFIX:line="44" PREFIX:column="12">(<argument><expr><name PREFIX:line="44" PREFIX:column="13">__AVR_ATtiny24__</name></expr></argument>)</argument_list></call> || <call><name PREFIX:line="44" PREFIX:column="34">defined</name><argument_list PREFIX:line="44" PREFIX:column="41">(<argument><expr><name PREFIX:line="44" PREFIX:column="42">__AVR_ATtiny44__</name></expr></argument>)</argument_list></call> || <call><name PREFIX:line="44" PREFIX:column="63">defined</name><argument_list PREFIX:line="44" PREFIX:column="70">(<argument><expr><name PREFIX:line="44" PREFIX:column="71">__AVR_ATtiny84__</name></expr></argument>)</argument_list></call> || <call><name PREFIX:line="44" PREFIX:column="92">defined</name><argument_list PREFIX:line="44" PREFIX:column="99">(<argument><expr><name PREFIX:line="44" PREFIX:column="100">__AVR_ATtiny25__</name></expr></argument>)</argument_list></call> || <call><name PREFIX:line="44" PREFIX:column="121">defined</name><argument_list PREFIX:line="44" PREFIX:column="128">(<argument><expr><name PREFIX:line="44" PREFIX:column="129">__AVR_ATtiny45__</name></expr></argument>)</argument_list></call> || <call><name PREFIX:line="44" PREFIX:column="150">defined</name><argument_list PREFIX:line="44" PREFIX:column="157">(<argument><expr><name PREFIX:line="44" PREFIX:column="158">__AVR_ATtiny85__</name></expr></argument>)</argument_list></call></expr></cpp:if>
<cpp:define PREFIX:line="45" PREFIX:column="1">#<cpp:directive PREFIX:line="45" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="45" PREFIX:column="9">DEFAULT</name></cpp:macro> <cpp:value PREFIX:line="45" PREFIX:column="17">0</cpp:value></cpp:define>
<cpp:define PREFIX:line="46" PREFIX:column="1">#<cpp:directive PREFIX:line="46" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="46" PREFIX:column="9">EXTERNAL</name></cpp:macro> <cpp:value PREFIX:line="46" PREFIX:column="18">1</cpp:value></cpp:define>
<cpp:define PREFIX:line="47" PREFIX:column="1">#<cpp:directive PREFIX:line="47" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="47" PREFIX:column="9">INTERNAL</name></cpp:macro> <cpp:value PREFIX:line="47" PREFIX:column="18">2</cpp:value></cpp:define>
<cpp:else PREFIX:line="48" PREFIX:column="1">#<cpp:directive PREFIX:line="48" PREFIX:column="2">else</cpp:directive></cpp:else>  
<cpp:if PREFIX:line="49" PREFIX:column="1">#<cpp:directive PREFIX:line="49" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="49" PREFIX:column="5">defined</name><argument_list PREFIX:line="49" PREFIX:column="12">(<argument><expr><name PREFIX:line="49" PREFIX:column="13">__AVR_ATmega1280__</name></expr></argument>)</argument_list></call> || <call><name PREFIX:line="49" PREFIX:column="36">defined</name><argument_list PREFIX:line="49" PREFIX:column="43">(<argument><expr><name PREFIX:line="49" PREFIX:column="44">__AVR_ATmega2560__</name></expr></argument>)</argument_list></call> || <call><name PREFIX:line="49" PREFIX:column="67">defined</name><argument_list PREFIX:line="49" PREFIX:column="74">(<argument><expr><name PREFIX:line="49" PREFIX:column="75">__AVR_ATmega1284P__</name></expr></argument>)</argument_list></call></expr></cpp:if> 
<cpp:define PREFIX:line="50" PREFIX:column="1">#<cpp:directive PREFIX:line="50" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="50" PREFIX:column="9">INTERNAL1V1</name></cpp:macro> <cpp:value PREFIX:line="50" PREFIX:column="21">2</cpp:value></cpp:define>
<cpp:define PREFIX:line="51" PREFIX:column="1">#<cpp:directive PREFIX:line="51" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="51" PREFIX:column="9">INTERNAL2V56</name></cpp:macro> <cpp:value PREFIX:line="51" PREFIX:column="22">3</cpp:value></cpp:define>
<cpp:else PREFIX:line="52" PREFIX:column="1">#<cpp:directive PREFIX:line="52" PREFIX:column="2">else</cpp:directive></cpp:else>
<cpp:define PREFIX:line="53" PREFIX:column="1">#<cpp:directive PREFIX:line="53" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="53" PREFIX:column="9">INTERNAL</name></cpp:macro> <cpp:value PREFIX:line="53" PREFIX:column="18">3</cpp:value></cpp:define>
<cpp:endif PREFIX:line="54" PREFIX:column="1">#<cpp:directive PREFIX:line="54" PREFIX:column="2">endif</cpp:directive></cpp:endif>
<cpp:define PREFIX:line="55" PREFIX:column="1">#<cpp:directive PREFIX:line="55" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="55" PREFIX:column="9">DEFAULT</name></cpp:macro> <cpp:value PREFIX:line="55" PREFIX:column="17">1</cpp:value></cpp:define>
<cpp:define PREFIX:line="56" PREFIX:column="1">#<cpp:directive PREFIX:line="56" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="56" PREFIX:column="9">EXTERNAL</name></cpp:macro> <cpp:value PREFIX:line="56" PREFIX:column="18">0</cpp:value></cpp:define>
<cpp:endif PREFIX:line="57" PREFIX:column="1">#<cpp:directive PREFIX:line="57" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<comment type="line" PREFIX:line="59" PREFIX:column="1">// undefine stdlib's abs if encountered</comment>
<cpp:ifdef PREFIX:line="60" PREFIX:column="1">#<cpp:directive PREFIX:line="60" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="60" PREFIX:column="8">abs</name></cpp:ifdef>
<cpp:undef PREFIX:line="61" PREFIX:column="1">#<cpp:directive PREFIX:line="61" PREFIX:column="2">undef</cpp:directive> <name PREFIX:line="61" PREFIX:column="8">abs</name></cpp:undef>
<cpp:endif PREFIX:line="62" PREFIX:column="1">#<cpp:directive PREFIX:line="62" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<cpp:define PREFIX:line="64" PREFIX:column="1">#<cpp:directive PREFIX:line="64" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="64" PREFIX:column="9">min</name><parameter_list PREFIX:line="64" PREFIX:column="12">(<param><type><name PREFIX:line="64" PREFIX:column="13">a</name></type></param>,<param><type><name PREFIX:line="64" PREFIX:column="15">b</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="64" PREFIX:column="18">((a)&lt;(b)?(a):(b))</cpp:value></cpp:define>
<cpp:define PREFIX:line="65" PREFIX:column="1">#<cpp:directive PREFIX:line="65" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="65" PREFIX:column="9">max</name><parameter_list PREFIX:line="65" PREFIX:column="12">(<param><type><name PREFIX:line="65" PREFIX:column="13">a</name></type></param>,<param><type><name PREFIX:line="65" PREFIX:column="15">b</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="65" PREFIX:column="18">((a)&gt;(b)?(a):(b))</cpp:value></cpp:define>
<cpp:define PREFIX:line="66" PREFIX:column="1">#<cpp:directive PREFIX:line="66" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="66" PREFIX:column="9">abs</name><parameter_list PREFIX:line="66" PREFIX:column="12">(<param><type><name PREFIX:line="66" PREFIX:column="13">x</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="66" PREFIX:column="16">((x)&gt;0?(x):-(x))</cpp:value></cpp:define>
<cpp:define PREFIX:line="67" PREFIX:column="1">#<cpp:directive PREFIX:line="67" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="67" PREFIX:column="9">rain</name><parameter_list PREFIX:line="67" PREFIX:column="13">(<param><type><name PREFIX:line="67" PREFIX:column="14">amt</name></type></param>,<param><type><name PREFIX:line="67" PREFIX:column="18">low</name></type></param>,<param><type><name PREFIX:line="67" PREFIX:column="22">high</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="67" PREFIX:column="28">((amt)&lt;(low)?(low):((amt)&gt;(high)?(high):(amt)))</cpp:value></cpp:define>
<cpp:define PREFIX:line="68" PREFIX:column="1">#<cpp:directive PREFIX:line="68" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="68" PREFIX:column="9">round</name><parameter_list PREFIX:line="68" PREFIX:column="14">(<param><type><name PREFIX:line="68" PREFIX:column="15">x</name></type></param>)</parameter_list></cpp:macro>     <cpp:value PREFIX:line="68" PREFIX:column="22">((x)&gt;=0?(long)((x)+0.5):(long)((x)-0.5))</cpp:value></cpp:define>
<cpp:define PREFIX:line="69" PREFIX:column="1">#<cpp:directive PREFIX:line="69" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="69" PREFIX:column="9">radians</name><parameter_list PREFIX:line="69" PREFIX:column="16">(<param><type><name PREFIX:line="69" PREFIX:column="17">deg</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="69" PREFIX:column="22">((deg)*DEG_TO_RAD)</cpp:value></cpp:define>
<cpp:define PREFIX:line="70" PREFIX:column="1">#<cpp:directive PREFIX:line="70" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="70" PREFIX:column="9">degrees</name><parameter_list PREFIX:line="70" PREFIX:column="16">(<param><type><name PREFIX:line="70" PREFIX:column="17">rad</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="70" PREFIX:column="22">((rad)*RAD_TO_DEG)</cpp:value></cpp:define>
<cpp:define PREFIX:line="71" PREFIX:column="1">#<cpp:directive PREFIX:line="71" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="71" PREFIX:column="9">sq</name><parameter_list PREFIX:line="71" PREFIX:column="11">(<param><type><name PREFIX:line="71" PREFIX:column="12">x</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="71" PREFIX:column="15">((x)*(x))</cpp:value></cpp:define>

<cpp:define PREFIX:line="73" PREFIX:column="1">#<cpp:directive PREFIX:line="73" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="73" PREFIX:column="9">interrupts</name><parameter_list PREFIX:line="73" PREFIX:column="19">()</parameter_list></cpp:macro> <cpp:value PREFIX:line="73" PREFIX:column="22">sei()</cpp:value></cpp:define>
<cpp:define PREFIX:line="74" PREFIX:column="1">#<cpp:directive PREFIX:line="74" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="74" PREFIX:column="9">noInterrupts</name><parameter_list PREFIX:line="74" PREFIX:column="21">()</parameter_list></cpp:macro> <cpp:value PREFIX:line="74" PREFIX:column="24">cli()</cpp:value></cpp:define>

<cpp:define PREFIX:line="76" PREFIX:column="1">#<cpp:directive PREFIX:line="76" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="76" PREFIX:column="9">clockCyclesPerMicrosecond</name><parameter_list PREFIX:line="76" PREFIX:column="34">()</parameter_list></cpp:macro> <cpp:value PREFIX:line="76" PREFIX:column="37">( F_CPU / 1000000L )</cpp:value></cpp:define>
<cpp:define PREFIX:line="77" PREFIX:column="1">#<cpp:directive PREFIX:line="77" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="77" PREFIX:column="9">clockCyclesToMicroseconds</name><parameter_list PREFIX:line="77" PREFIX:column="34">(<param><type><name PREFIX:line="77" PREFIX:column="35">a</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="77" PREFIX:column="38">( (a) / clockCyclesPerMicrosecond() )</cpp:value></cpp:define>
<cpp:define PREFIX:line="78" PREFIX:column="1">#<cpp:directive PREFIX:line="78" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="78" PREFIX:column="9">microsecondsToClockCycles</name><parameter_list PREFIX:line="78" PREFIX:column="34">(<param><type><name PREFIX:line="78" PREFIX:column="35">a</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="78" PREFIX:column="38">( (a) * clockCyclesPerMicrosecond() )</cpp:value></cpp:define>

<cpp:define PREFIX:line="80" PREFIX:column="1">#<cpp:directive PREFIX:line="80" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="80" PREFIX:column="9">lowByte</name><parameter_list PREFIX:line="80" PREFIX:column="16">(<param><type><name PREFIX:line="80" PREFIX:column="17">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="80" PREFIX:column="20">((uint8_t) ((w) &amp; 0xff))</cpp:value></cpp:define>
<cpp:define PREFIX:line="81" PREFIX:column="1">#<cpp:directive PREFIX:line="81" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="81" PREFIX:column="9">highByte</name><parameter_list PREFIX:line="81" PREFIX:column="17">(<param><type><name PREFIX:line="81" PREFIX:column="18">w</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="81" PREFIX:column="21">((uint8_t) ((w) &gt;&gt; 8))</cpp:value></cpp:define>

<cpp:define PREFIX:line="83" PREFIX:column="1">#<cpp:directive PREFIX:line="83" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="83" PREFIX:column="9">bitRead</name><parameter_list PREFIX:line="83" PREFIX:column="16">(<param><type><name PREFIX:line="83" PREFIX:column="17">value</name></type></param>, <param><type><name PREFIX:line="83" PREFIX:column="24">bit</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="83" PREFIX:column="29">(((value) &gt;&gt; (bit)) &amp; 0x01)</cpp:value></cpp:define>
<cpp:define PREFIX:line="84" PREFIX:column="1">#<cpp:directive PREFIX:line="84" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="84" PREFIX:column="9">bitSet</name><parameter_list PREFIX:line="84" PREFIX:column="15">(<param><type><name PREFIX:line="84" PREFIX:column="16">value</name></type></param>, <param><type><name PREFIX:line="84" PREFIX:column="23">bit</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="84" PREFIX:column="28">((value) |= (1UL &lt;&lt; (bit)))</cpp:value></cpp:define>
<cpp:define PREFIX:line="85" PREFIX:column="1">#<cpp:directive PREFIX:line="85" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="85" PREFIX:column="9">bitClear</name><parameter_list PREFIX:line="85" PREFIX:column="17">(<param><type><name PREFIX:line="85" PREFIX:column="18">value</name></type></param>, <param><type><name PREFIX:line="85" PREFIX:column="25">bit</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="85" PREFIX:column="30">((value) &amp;= ~(1UL &lt;&lt; (bit)))</cpp:value></cpp:define>
<cpp:define PREFIX:line="86" PREFIX:column="1">#<cpp:directive PREFIX:line="86" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="86" PREFIX:column="9">bitWrite</name><parameter_list PREFIX:line="86" PREFIX:column="17">(<param><type><name PREFIX:line="86" PREFIX:column="18">value</name></type></param>, <param><type><name PREFIX:line="86" PREFIX:column="25">bit</name></type></param>, <param><type><name PREFIX:line="86" PREFIX:column="30">bitvalue</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="86" PREFIX:column="40">(bitvalue ? bitSet(value, bit) : bitClear(value, bit))</cpp:value></cpp:define>


<typedef PREFIX:line="89" PREFIX:column="1">typedef <type><name PREFIX:line="89" PREFIX:column="9">unknowntype</name> <name PREFIX:line="89" PREFIX:column="21">int</name></type> <name PREFIX:line="89" PREFIX:column="25">word</name>;</typedef>

<cpp:define PREFIX:line="91" PREFIX:column="1">#<cpp:directive PREFIX:line="91" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="91" PREFIX:column="9">bit</name><parameter_list PREFIX:line="91" PREFIX:column="12">(<param><type><name PREFIX:line="91" PREFIX:column="13">b</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="91" PREFIX:column="16">(1UL &lt;&lt; (b))</cpp:value></cpp:define>

<typedef PREFIX:line="93" PREFIX:column="1">typedef <type><name PREFIX:line="93" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="93" PREFIX:column="17">boolean</name>;</typedef>
<typedef PREFIX:line="94" PREFIX:column="1">typedef <type><name PREFIX:line="94" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="94" PREFIX:column="17">byte</name>;</typedef>

<function_decl><type><name PREFIX:line="96" PREFIX:column="1">void</name></type> <name PREFIX:line="96" PREFIX:column="6">init</name><parameter_list PREFIX:line="96" PREFIX:column="10">(<param><decl><type><name PREFIX:line="96" PREFIX:column="11">void</name></type></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name PREFIX:line="98" PREFIX:column="1">void</name></type> <name PREFIX:line="98" PREFIX:column="6">pinMode</name><parameter_list PREFIX:line="98" PREFIX:column="13">(<param><decl><type><name PREFIX:line="98" PREFIX:column="14">uint8_t</name></type></decl></param>, <param><decl><type><name PREFIX:line="98" PREFIX:column="23">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="99" PREFIX:column="1">void</name></type> <name PREFIX:line="99" PREFIX:column="6">digitalWrite</name><parameter_list PREFIX:line="99" PREFIX:column="18">(<param><decl><type><name PREFIX:line="99" PREFIX:column="19">uint8_t</name></type></decl></param>, <param><decl><type><name PREFIX:line="99" PREFIX:column="28">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="100" PREFIX:column="1">int</name></type> <name PREFIX:line="100" PREFIX:column="5">digitalRead</name><parameter_list PREFIX:line="100" PREFIX:column="16">(<param><decl><type><name PREFIX:line="100" PREFIX:column="17">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="101" PREFIX:column="1">int</name></type> <name PREFIX:line="101" PREFIX:column="5">analogRead</name><parameter_list PREFIX:line="101" PREFIX:column="15">(<param><decl><type><name PREFIX:line="101" PREFIX:column="16">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="102" PREFIX:column="1">void</name></type> <name PREFIX:line="102" PREFIX:column="6">analogReference</name><parameter_list PREFIX:line="102" PREFIX:column="21">(<param><decl><type><name PREFIX:line="102" PREFIX:column="22">uint8_t</name></type> <name PREFIX:line="102" PREFIX:column="30">mode</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="103" PREFIX:column="1">void</name></type> <name PREFIX:line="103" PREFIX:column="6">analogWrite</name><parameter_list PREFIX:line="103" PREFIX:column="17">(<param><decl><type><name PREFIX:line="103" PREFIX:column="18">uint8_t</name></type></decl></param>, <param><decl><type><name PREFIX:line="103" PREFIX:column="27">int</name></type></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name PREFIX:line="105" PREFIX:column="1">unknowntype</name> <name PREFIX:line="105" PREFIX:column="13">long</name></type> <name PREFIX:line="105" PREFIX:column="18">millis</name><parameter_list PREFIX:line="105" PREFIX:column="24">(<param><decl><type><name PREFIX:line="105" PREFIX:column="25">void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="106" PREFIX:column="1">unknowntype</name> <name PREFIX:line="106" PREFIX:column="13">long</name></type> <name PREFIX:line="106" PREFIX:column="18">micros</name><parameter_list PREFIX:line="106" PREFIX:column="24">(<param><decl><type><name PREFIX:line="106" PREFIX:column="25">void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="107" PREFIX:column="1">void</name></type> <name PREFIX:line="107" PREFIX:column="6">delay</name><parameter_list PREFIX:line="107" PREFIX:column="11">(<param><decl><type><name PREFIX:line="107" PREFIX:column="12">unknowntype</name></type> <name PREFIX:line="107" PREFIX:column="24">long</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="108" PREFIX:column="1">void</name></type> <name PREFIX:line="108" PREFIX:column="6">delayMicroseconds</name><parameter_list PREFIX:line="108" PREFIX:column="23">(<param><decl><type><name PREFIX:line="108" PREFIX:column="24">unknowntype</name> <name PREFIX:line="108" PREFIX:column="36">int</name></type> <name PREFIX:line="108" PREFIX:column="40">us</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="109" PREFIX:column="1">unknowntype</name> <name PREFIX:line="109" PREFIX:column="13">long</name></type> <name PREFIX:line="109" PREFIX:column="18">pulseIn</name><parameter_list PREFIX:line="109" PREFIX:column="25">(<param><decl><type><name PREFIX:line="109" PREFIX:column="26">uint8_t</name></type> <name PREFIX:line="109" PREFIX:column="34">pin</name></decl></param>, <param><decl><type><name PREFIX:line="109" PREFIX:column="39">uint8_t</name></type> <name PREFIX:line="109" PREFIX:column="47">state</name></decl></param>, <param><decl><type><name PREFIX:line="109" PREFIX:column="54">unknowntype</name> <name PREFIX:line="109" PREFIX:column="66">long</name></type> <name PREFIX:line="109" PREFIX:column="71">timeout</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name PREFIX:line="111" PREFIX:column="1">void</name></type> <name PREFIX:line="111" PREFIX:column="6">shiftOut</name><parameter_list PREFIX:line="111" PREFIX:column="14">(<param><decl><type><name PREFIX:line="111" PREFIX:column="15">uint8_t</name></type> <name PREFIX:line="111" PREFIX:column="23">dataPin</name></decl></param>, <param><decl><type><name PREFIX:line="111" PREFIX:column="32">uint8_t</name></type> <name PREFIX:line="111" PREFIX:column="40">clockPin</name></decl></param>, <param><decl><type><name PREFIX:line="111" PREFIX:column="50">uint8_t</name></type> <name PREFIX:line="111" PREFIX:column="58">bitOrder</name></decl></param>, <param><decl><type><name PREFIX:line="111" PREFIX:column="68">uint8_t</name></type> <name PREFIX:line="111" PREFIX:column="76">val</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="112" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="112" PREFIX:column="9">shiftIn</name><parameter_list PREFIX:line="112" PREFIX:column="16">(<param><decl><type><name PREFIX:line="112" PREFIX:column="17">uint8_t</name></type> <name PREFIX:line="112" PREFIX:column="25">dataPin</name></decl></param>, <param><decl><type><name PREFIX:line="112" PREFIX:column="34">uint8_t</name></type> <name PREFIX:line="112" PREFIX:column="42">clockPin</name></decl></param>, <param><decl><type><name PREFIX:line="112" PREFIX:column="52">uint8_t</name></type> <name PREFIX:line="112" PREFIX:column="60">bitOrder</name></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name PREFIX:line="114" PREFIX:column="1">void</name></type> <name PREFIX:line="114" PREFIX:column="6">attachInterrupt</name><parameter_list PREFIX:line="114" PREFIX:column="21">(<param><decl><type><name PREFIX:line="114" PREFIX:column="22">uint8_t</name></type></decl></param>, <param><function_decl><type><name PREFIX:line="114" PREFIX:column="31">void</name></type> (*)<parameter_list PREFIX:line="114" PREFIX:column="39">(<param><decl><type><name PREFIX:line="114" PREFIX:column="40">void</name></type></decl></param>)</parameter_list></function_decl></param>, <param><decl><type><name PREFIX:line="114" PREFIX:column="47">int</name></type> <name PREFIX:line="114" PREFIX:column="51">mode</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="115" PREFIX:column="1">void</name></type> <name PREFIX:line="115" PREFIX:column="6">detachInterrupt</name><parameter_list PREFIX:line="115" PREFIX:column="21">(<param><decl><type><name PREFIX:line="115" PREFIX:column="22">uint8_t</name></type></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name PREFIX:line="117" PREFIX:column="1">void</name></type> <name PREFIX:line="117" PREFIX:column="6">setup</name><parameter_list PREFIX:line="117" PREFIX:column="11">(<param><decl><type><name PREFIX:line="117" PREFIX:column="12">void</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="118" PREFIX:column="1">void</name></type> <name PREFIX:line="118" PREFIX:column="6">loop</name><parameter_list PREFIX:line="118" PREFIX:column="10">(<param><decl><type><name PREFIX:line="118" PREFIX:column="11">void</name></type></decl></param>)</parameter_list>;</function_decl>

<comment type="line" PREFIX:line="120" PREFIX:column="1">// Get the bit location within the hardware port of the given virtual pin.</comment>
<comment type="line" PREFIX:line="121" PREFIX:column="1">// This comes from the pins_*.c file for the active board configuration.</comment>

<cpp:define PREFIX:line="123" PREFIX:column="1">#<cpp:directive PREFIX:line="123" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="123" PREFIX:column="9">analogInPinToBit</name><parameter_list PREFIX:line="123" PREFIX:column="25">(<param><type><name PREFIX:line="123" PREFIX:column="26">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="123" PREFIX:column="29">(P)</cpp:value></cpp:define>

<comment type="line" PREFIX:line="125" PREFIX:column="1">// On the ATmega1280, the addresses of some of the port registers are</comment>
<comment type="line" PREFIX:line="126" PREFIX:column="1">// greater than 255, so we can't store them in uint8_t's.</comment>
  <decl_stmt><decl><type><name PREFIX:line="127" PREFIX:column="3">uint16_t</name> <name PREFIX:line="127" PREFIX:column="12">PROGMEM</name></type> <name><name PREFIX:line="127" PREFIX:column="20">port_to_mode_PGM</name><index PREFIX:line="127" PREFIX:column="36">[]</index></name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="128" PREFIX:column="3">uint16_t</name> <name PREFIX:line="128" PREFIX:column="12">PROGMEM</name></type> <name><name PREFIX:line="128" PREFIX:column="20">port_to_input_PGM</name><index PREFIX:line="128" PREFIX:column="37">[]</index></name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="129" PREFIX:column="3">uint16_t</name> <name PREFIX:line="129" PREFIX:column="12">PROGMEM</name></type> <name><name PREFIX:line="129" PREFIX:column="20">port_to_output_PGM</name><index PREFIX:line="129" PREFIX:column="38">[]</index></name></decl>;</decl_stmt>

  <decl_stmt><decl><type><name PREFIX:line="131" PREFIX:column="3">uint8_t</name> <name PREFIX:line="131" PREFIX:column="11">PROGMEM</name></type> <name><name PREFIX:line="131" PREFIX:column="19">digital_pin_to_port_PGM</name><index PREFIX:line="131" PREFIX:column="42">[]</index></name></decl>;</decl_stmt>
<comment type="line" PREFIX:line="132" PREFIX:column="1">//   uint8_t PROGMEM digital_pin_to_bit_PGM[];</comment>
  <decl_stmt><decl><type><name PREFIX:line="133" PREFIX:column="3">uint8_t</name> <name PREFIX:line="133" PREFIX:column="11">PROGMEM</name></type> <name><name PREFIX:line="133" PREFIX:column="19">digital_pin_to_bit_mask_PGM</name><index PREFIX:line="133" PREFIX:column="46">[]</index></name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="134" PREFIX:column="3">uint8_t</name> <name PREFIX:line="134" PREFIX:column="11">PROGMEM</name></type> <name><name PREFIX:line="134" PREFIX:column="19">digital_pin_to_timer_PGM</name><index PREFIX:line="134" PREFIX:column="43">[]</index></name></decl>;</decl_stmt>

<comment type="line" PREFIX:line="136" PREFIX:column="1">// Get the bit location within the hardware port of the given virtual pin.</comment>
<comment type="line" PREFIX:line="137" PREFIX:column="1">// This comes from the pins_*.c file for the active board configuration.</comment>
<comment type="line" PREFIX:line="138" PREFIX:column="1">// </comment>
<comment type="line" PREFIX:line="139" PREFIX:column="1">// These perform slightly better as macros compared to inline functions</comment>
<comment type="line" PREFIX:line="140" PREFIX:column="1">//</comment>
<cpp:define PREFIX:line="141" PREFIX:column="1">#<cpp:directive PREFIX:line="141" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="141" PREFIX:column="9">digitalPinToPort</name><parameter_list PREFIX:line="141" PREFIX:column="25">(<param><type><name PREFIX:line="141" PREFIX:column="26">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="141" PREFIX:column="29">( pgm_read_byte( digital_pin_to_port_PGM + (P) ) )</cpp:value></cpp:define>
<cpp:define PREFIX:line="142" PREFIX:column="1">#<cpp:directive PREFIX:line="142" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="142" PREFIX:column="9">digitalPinToBitMask</name><parameter_list PREFIX:line="142" PREFIX:column="28">(<param><type><name PREFIX:line="142" PREFIX:column="29">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="142" PREFIX:column="32">( pgm_read_byte( digital_pin_to_bit_mask_PGM + (P) ) )</cpp:value></cpp:define>
<cpp:define PREFIX:line="143" PREFIX:column="1">#<cpp:directive PREFIX:line="143" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="143" PREFIX:column="9">digitalPinToTimer</name><parameter_list PREFIX:line="143" PREFIX:column="26">(<param><type><name PREFIX:line="143" PREFIX:column="27">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="143" PREFIX:column="30">( pgm_read_byte( digital_pin_to_timer_PGM + (P) ) )</cpp:value></cpp:define>
<cpp:define PREFIX:line="144" PREFIX:column="1">#<cpp:directive PREFIX:line="144" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="144" PREFIX:column="9">analogInPinToBit</name><parameter_list PREFIX:line="144" PREFIX:column="25">(<param><type><name PREFIX:line="144" PREFIX:column="26">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="144" PREFIX:column="29">(P)</cpp:value></cpp:define>
<cpp:define PREFIX:line="145" PREFIX:column="1">#<cpp:directive PREFIX:line="145" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="145" PREFIX:column="9">portOutputRegister</name><parameter_list PREFIX:line="145" PREFIX:column="27">(<param><type><name PREFIX:line="145" PREFIX:column="28">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="145" PREFIX:column="31">( (volatile uint8_t *)( pgm_read_word( port_to_output_PGM + (P))) )</cpp:value></cpp:define>
<cpp:define PREFIX:line="146" PREFIX:column="1">#<cpp:directive PREFIX:line="146" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="146" PREFIX:column="9">portInputRegister</name><parameter_list PREFIX:line="146" PREFIX:column="26">(<param><type><name PREFIX:line="146" PREFIX:column="27">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="146" PREFIX:column="30">( (volatile uint8_t *)( pgm_read_word( port_to_input_PGM + (P))) )</cpp:value></cpp:define>
<cpp:define PREFIX:line="147" PREFIX:column="1">#<cpp:directive PREFIX:line="147" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="147" PREFIX:column="9">portModeRegister</name><parameter_list PREFIX:line="147" PREFIX:column="25">(<param><type><name PREFIX:line="147" PREFIX:column="26">P</name></type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="147" PREFIX:column="29">( (volatile uint8_t *)( pgm_read_word( port_to_mode_PGM + (P))) )</cpp:value></cpp:define>

<cpp:define PREFIX:line="149" PREFIX:column="1">#<cpp:directive PREFIX:line="149" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="149" PREFIX:column="9">NOT_A_PIN</name></cpp:macro> <cpp:value PREFIX:line="149" PREFIX:column="19">0</cpp:value></cpp:define>
<cpp:define PREFIX:line="150" PREFIX:column="1">#<cpp:directive PREFIX:line="150" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="150" PREFIX:column="9">NOT_A_PORT</name></cpp:macro> <cpp:value PREFIX:line="150" PREFIX:column="20">0</cpp:value></cpp:define>

<cpp:ifdef PREFIX:line="152" PREFIX:column="1">#<cpp:directive PREFIX:line="152" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="152" PREFIX:column="8">ARDUINO_MAIN</name></cpp:ifdef>
<cpp:define PREFIX:line="153" PREFIX:column="1">#<cpp:directive PREFIX:line="153" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="153" PREFIX:column="9">PA</name></cpp:macro> <cpp:value PREFIX:line="153" PREFIX:column="12">1</cpp:value></cpp:define>
<cpp:define PREFIX:line="154" PREFIX:column="1">#<cpp:directive PREFIX:line="154" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="154" PREFIX:column="9">PB</name></cpp:macro> <cpp:value PREFIX:line="154" PREFIX:column="12">2</cpp:value></cpp:define>
<cpp:define PREFIX:line="155" PREFIX:column="1">#<cpp:directive PREFIX:line="155" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="155" PREFIX:column="9">PC</name></cpp:macro> <cpp:value PREFIX:line="155" PREFIX:column="12">3</cpp:value></cpp:define>
<cpp:define PREFIX:line="156" PREFIX:column="1">#<cpp:directive PREFIX:line="156" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="156" PREFIX:column="9">PD</name></cpp:macro> <cpp:value PREFIX:line="156" PREFIX:column="12">4</cpp:value></cpp:define>
<cpp:define PREFIX:line="157" PREFIX:column="1">#<cpp:directive PREFIX:line="157" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="157" PREFIX:column="9">PE</name></cpp:macro> <cpp:value PREFIX:line="157" PREFIX:column="12">5</cpp:value></cpp:define>
<cpp:define PREFIX:line="158" PREFIX:column="1">#<cpp:directive PREFIX:line="158" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="158" PREFIX:column="9">PF</name></cpp:macro> <cpp:value PREFIX:line="158" PREFIX:column="12">6</cpp:value></cpp:define>
<cpp:define PREFIX:line="159" PREFIX:column="1">#<cpp:directive PREFIX:line="159" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="159" PREFIX:column="9">PG</name></cpp:macro> <cpp:value PREFIX:line="159" PREFIX:column="12">7</cpp:value></cpp:define>
<cpp:define PREFIX:line="160" PREFIX:column="1">#<cpp:directive PREFIX:line="160" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="160" PREFIX:column="9">PH</name></cpp:macro> <cpp:value PREFIX:line="160" PREFIX:column="12">8</cpp:value></cpp:define>
<cpp:define PREFIX:line="161" PREFIX:column="1">#<cpp:directive PREFIX:line="161" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="161" PREFIX:column="9">PJ</name></cpp:macro> <cpp:value PREFIX:line="161" PREFIX:column="12">10</cpp:value></cpp:define>
<cpp:define PREFIX:line="162" PREFIX:column="1">#<cpp:directive PREFIX:line="162" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="162" PREFIX:column="9">PK</name></cpp:macro> <cpp:value PREFIX:line="162" PREFIX:column="12">11</cpp:value></cpp:define>
<cpp:define PREFIX:line="163" PREFIX:column="1">#<cpp:directive PREFIX:line="163" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="163" PREFIX:column="9">PL</name></cpp:macro> <cpp:value PREFIX:line="163" PREFIX:column="12">12</cpp:value></cpp:define>
<cpp:endif PREFIX:line="164" PREFIX:column="1">#<cpp:directive PREFIX:line="164" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<cpp:define PREFIX:line="166" PREFIX:column="1">#<cpp:directive PREFIX:line="166" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="166" PREFIX:column="9">NOT_ON_TIMER</name></cpp:macro> <cpp:value PREFIX:line="166" PREFIX:column="22">0</cpp:value></cpp:define>
<cpp:define PREFIX:line="167" PREFIX:column="1">#<cpp:directive PREFIX:line="167" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="167" PREFIX:column="9">TIMER0A</name></cpp:macro> <cpp:value PREFIX:line="167" PREFIX:column="17">1</cpp:value></cpp:define>
<cpp:define PREFIX:line="168" PREFIX:column="1">#<cpp:directive PREFIX:line="168" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="168" PREFIX:column="9">TIMER0B</name></cpp:macro> <cpp:value PREFIX:line="168" PREFIX:column="17">2</cpp:value></cpp:define>
<cpp:define PREFIX:line="169" PREFIX:column="1">#<cpp:directive PREFIX:line="169" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="169" PREFIX:column="9">TIMER1A</name></cpp:macro> <cpp:value PREFIX:line="169" PREFIX:column="17">3</cpp:value></cpp:define>
<cpp:define PREFIX:line="170" PREFIX:column="1">#<cpp:directive PREFIX:line="170" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="170" PREFIX:column="9">TIMER1B</name></cpp:macro> <cpp:value PREFIX:line="170" PREFIX:column="17">4</cpp:value></cpp:define>
<cpp:define PREFIX:line="171" PREFIX:column="1">#<cpp:directive PREFIX:line="171" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="171" PREFIX:column="9">TIMER2</name></cpp:macro>  <cpp:value PREFIX:line="171" PREFIX:column="17">5</cpp:value></cpp:define>
<cpp:define PREFIX:line="172" PREFIX:column="1">#<cpp:directive PREFIX:line="172" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="172" PREFIX:column="9">TIMER2A</name></cpp:macro> <cpp:value PREFIX:line="172" PREFIX:column="17">6</cpp:value></cpp:define>
<cpp:define PREFIX:line="173" PREFIX:column="1">#<cpp:directive PREFIX:line="173" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="173" PREFIX:column="9">TIMER2B</name></cpp:macro> <cpp:value PREFIX:line="173" PREFIX:column="17">7</cpp:value></cpp:define>

<cpp:define PREFIX:line="175" PREFIX:column="1">#<cpp:directive PREFIX:line="175" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="175" PREFIX:column="9">TIMER3A</name></cpp:macro> <cpp:value PREFIX:line="175" PREFIX:column="17">8</cpp:value></cpp:define>
<cpp:define PREFIX:line="176" PREFIX:column="1">#<cpp:directive PREFIX:line="176" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="176" PREFIX:column="9">TIMER3B</name></cpp:macro> <cpp:value PREFIX:line="176" PREFIX:column="17">9</cpp:value></cpp:define>
<cpp:define PREFIX:line="177" PREFIX:column="1">#<cpp:directive PREFIX:line="177" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="177" PREFIX:column="9">TIMER3C</name></cpp:macro> <cpp:value PREFIX:line="177" PREFIX:column="17">10</cpp:value></cpp:define>
<cpp:define PREFIX:line="178" PREFIX:column="1">#<cpp:directive PREFIX:line="178" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="178" PREFIX:column="9">TIMER4A</name></cpp:macro> <cpp:value PREFIX:line="178" PREFIX:column="17">11</cpp:value></cpp:define>
<cpp:define PREFIX:line="179" PREFIX:column="1">#<cpp:directive PREFIX:line="179" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="179" PREFIX:column="9">TIMER4B</name></cpp:macro> <cpp:value PREFIX:line="179" PREFIX:column="17">12</cpp:value></cpp:define>
<cpp:define PREFIX:line="180" PREFIX:column="1">#<cpp:directive PREFIX:line="180" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="180" PREFIX:column="9">TIMER4C</name></cpp:macro> <cpp:value PREFIX:line="180" PREFIX:column="17">13</cpp:value></cpp:define>
<cpp:define PREFIX:line="181" PREFIX:column="1">#<cpp:directive PREFIX:line="181" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="181" PREFIX:column="9">TIMER4D</name></cpp:macro> <cpp:value PREFIX:line="181" PREFIX:column="17">14</cpp:value></cpp:define>	
<cpp:define PREFIX:line="182" PREFIX:column="1">#<cpp:directive PREFIX:line="182" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="182" PREFIX:column="9">TIMER5A</name></cpp:macro> <cpp:value PREFIX:line="182" PREFIX:column="17">15</cpp:value></cpp:define>
<cpp:define PREFIX:line="183" PREFIX:column="1">#<cpp:directive PREFIX:line="183" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="183" PREFIX:column="9">TIMER5B</name></cpp:macro> <cpp:value PREFIX:line="183" PREFIX:column="17">16</cpp:value></cpp:define>
<cpp:define PREFIX:line="184" PREFIX:column="1">#<cpp:directive PREFIX:line="184" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="184" PREFIX:column="9">TIMER5C</name></cpp:macro> <cpp:value PREFIX:line="184" PREFIX:column="17">17</cpp:value></cpp:define>

<cpp:ifdef PREFIX:line="186" PREFIX:column="1">#<cpp:directive PREFIX:line="186" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="186" PREFIX:column="8">__cplusplus</name></cpp:ifdef>

<cpp:endif PREFIX:line="188" PREFIX:column="1">#<cpp:directive PREFIX:line="188" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<cpp:ifdef PREFIX:line="190" PREFIX:column="1">#<cpp:directive PREFIX:line="190" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="190" PREFIX:column="8">__cplusplus</name></cpp:ifdef>

<cpp:include PREFIX:line="192" PREFIX:column="1">#<cpp:directive PREFIX:line="192" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="192" PREFIX:column="10">"WString.h"</cpp:file></cpp:include>
<cpp:include PREFIX:line="193" PREFIX:column="1">#<cpp:directive PREFIX:line="193" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="193" PREFIX:column="10">"HardwareSerial.h"</cpp:file></cpp:include>

<function_decl><type><name PREFIX:line="195" PREFIX:column="1">uint16_t</name></type> <name PREFIX:line="195" PREFIX:column="10">makeWord</name><parameter_list PREFIX:line="195" PREFIX:column="18">(<param><decl><type><name PREFIX:line="195" PREFIX:column="19">uint16_t</name></type> <name PREFIX:line="195" PREFIX:column="28">w</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="196" PREFIX:column="1">uint16_t</name></type> <name PREFIX:line="196" PREFIX:column="10">makeWord</name><parameter_list PREFIX:line="196" PREFIX:column="18">(<param><decl><type><name PREFIX:line="196" PREFIX:column="19">byte</name></type> <name PREFIX:line="196" PREFIX:column="24">h</name></decl></param>, <param><decl><type><name PREFIX:line="196" PREFIX:column="27">byte</name></type> <name PREFIX:line="196" PREFIX:column="32">l</name></decl></param>)</parameter_list>;</function_decl>

<cpp:define PREFIX:line="198" PREFIX:column="1">#<cpp:directive PREFIX:line="198" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="198" PREFIX:column="9">word</name><parameter_list PREFIX:line="198" PREFIX:column="13">(<param><type PREFIX:line="198" PREFIX:column="14">...</type></param>)</parameter_list></cpp:macro> <cpp:value PREFIX:line="198" PREFIX:column="19">makeWord(__VA_ARGS__)</cpp:value></cpp:define>

<function_decl><type><name PREFIX:line="200" PREFIX:column="1">unknowntype</name> <name PREFIX:line="200" PREFIX:column="13">long</name></type> <name PREFIX:line="200" PREFIX:column="18">pulseIn</name><parameter_list PREFIX:line="200" PREFIX:column="25">(<param><decl><type><name PREFIX:line="200" PREFIX:column="26">uint8_t</name></type> <name PREFIX:line="200" PREFIX:column="34">pin</name></decl></param>, <param><decl><type><name PREFIX:line="200" PREFIX:column="39">uint8_t</name></type> <name PREFIX:line="200" PREFIX:column="47">state</name></decl></param>, <param><decl><type><name PREFIX:line="200" PREFIX:column="54">unknowntype</name> <name PREFIX:line="200" PREFIX:column="66">long</name></type> <name PREFIX:line="200" PREFIX:column="71">timeout</name> <init PREFIX:line="200" PREFIX:column="79">= <expr PREFIX:line="200" PREFIX:column="81">1000000L</expr></init></decl></param>)</parameter_list>;</function_decl>

<function_decl><type><name PREFIX:line="202" PREFIX:column="1">void</name></type> <name PREFIX:line="202" PREFIX:column="6">tone</name><parameter_list PREFIX:line="202" PREFIX:column="10">(<param><decl><type><name PREFIX:line="202" PREFIX:column="11">uint8_t</name></type> <name PREFIX:line="202" PREFIX:column="19">_pin</name></decl></param>, <param><decl><type><name PREFIX:line="202" PREFIX:column="25">unknowntype</name> <name PREFIX:line="202" PREFIX:column="37">int</name></type> <name PREFIX:line="202" PREFIX:column="41">frequency</name></decl></param>, <param><decl><type><name PREFIX:line="202" PREFIX:column="52">unknowntype</name> <name PREFIX:line="202" PREFIX:column="64">long</name></type> <name PREFIX:line="202" PREFIX:column="69">duration</name> <init PREFIX:line="202" PREFIX:column="78">= <expr PREFIX:line="202" PREFIX:column="80">0</expr></init></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="203" PREFIX:column="1">void</name></type> <name PREFIX:line="203" PREFIX:column="6">noTone</name><parameter_list PREFIX:line="203" PREFIX:column="12">(<param><decl><type><name PREFIX:line="203" PREFIX:column="13">uint8_t</name></type> <name PREFIX:line="203" PREFIX:column="21">_pin</name></decl></param>)</parameter_list>;</function_decl>

<comment type="line" PREFIX:line="205" PREFIX:column="1">// WMath prototypes</comment>
<function_decl><type><name PREFIX:line="206" PREFIX:column="1">long</name></type> <name PREFIX:line="206" PREFIX:column="6">random</name><parameter_list PREFIX:line="206" PREFIX:column="12">(<param><decl><type><name PREFIX:line="206" PREFIX:column="13">long</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="207" PREFIX:column="1">long</name></type> <name PREFIX:line="207" PREFIX:column="6">random</name><parameter_list PREFIX:line="207" PREFIX:column="12">(<param><decl><type><name PREFIX:line="207" PREFIX:column="13">long</name></type></decl></param>, <param><decl><type><name PREFIX:line="207" PREFIX:column="19">long</name></type></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="208" PREFIX:column="1">void</name></type> <name PREFIX:line="208" PREFIX:column="6">randomSeed</name><parameter_list PREFIX:line="208" PREFIX:column="16">(<param><decl><type><name PREFIX:line="208" PREFIX:column="17">unknowntype</name></type> <name PREFIX:line="208" PREFIX:column="29">int</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="209" PREFIX:column="1">long</name></type> <name PREFIX:line="209" PREFIX:column="6">map</name><parameter_list PREFIX:line="209" PREFIX:column="9">(<param><decl><type><name PREFIX:line="209" PREFIX:column="10">long</name></type></decl></param>, <param><decl><type><name PREFIX:line="209" PREFIX:column="16">long</name></type></decl></param>, <param><decl><type><name PREFIX:line="209" PREFIX:column="22">long</name></type></decl></param>, <param><decl><type><name PREFIX:line="209" PREFIX:column="28">long</name></type></decl></param>, <param><decl><type><name PREFIX:line="209" PREFIX:column="34">long</name></type></decl></param>)</parameter_list>;</function_decl>

<cpp:endif PREFIX:line="211" PREFIX:column="1">#<cpp:directive PREFIX:line="211" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<cpp:include PREFIX:line="213" PREFIX:column="1">#<cpp:directive PREFIX:line="213" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="213" PREFIX:column="10">"pins_arduino.h"</cpp:file></cpp:include>

<cpp:endif PREFIX:line="215" PREFIX:column="1">#<cpp:directive PREFIX:line="215" PREFIX:column="2">endif</cpp:directive></cpp:endif>
</unit>
