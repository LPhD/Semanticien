<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/libraries/U8glib/utility/u8g_dev_ht1632.c" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*
 
  u8g_dev_ht1632.c
 
  1-Bit (BW) Driver for HT1632 controller
 
  Universal 8bit Graphics Library
 
  Copyright (c) 2013, olikraus@gmail.com
  All rights reserved.
 
  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:
 
  * Redistributions of source code must retain the above copyright notice, this list
    of conditions and the following disclaimer.
   
  * Redistributions in binary form must reproduce the above copyright notice, this
    list of conditions and the following disclaimer in the documentation and/or other
    materials provided with the distribution.
 
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.



    U8G_PIN_NONE can be used as argument
   
    uint8_t u8g_InitSPI(u8g_t *u8g, u8g_dev_t *dev, uint8_t sck, uint8_t mosi, uint8_t cs, uint8_t a0, uint8_t reset)
    {
      ...      
      u8g-&gt;pin_list[U8G_PI_SCK] = sck;
      u8g-&gt;pin_list[U8G_PI_MOSI] = mosi;
      u8g-&gt;pin_list[U8G_PI_CS] = cs;
      u8g-&gt;pin_list[U8G_PI_A0] = a0;
      u8g-&gt;pin_list[U8G_PI_RESET] = reset;

mapping  

#define DATA_PIN --&gt; U8G_PI_MOSI
#define WR_PIN    --&gt; U8G_PI_SCK
#define CS_PIN      --&gt; U8G_PI_CS
				    U8G_PI_A0 --&gt; not used
				    U8G_PI_RESET --&gt; not used

Usage:

    u8g_InitSPI(&amp;u8g, &amp;u8g_dev_ht1632_24x16, WR_PIN, DATA_IN, CS_PIN, U8G_PIN_NONE, U8G_PIN_NONE)

*/</comment>
 
<cpp:include PREFIX:line="63" PREFIX:column="1">#<cpp:directive PREFIX:line="63" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="63" PREFIX:column="10">"u8g.h"</cpp:file></cpp:include>
 
<cpp:define PREFIX:line="65" PREFIX:column="1">#<cpp:directive PREFIX:line="65" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="65" PREFIX:column="9">WIDTH</name></cpp:macro> <cpp:value PREFIX:line="65" PREFIX:column="15">24</cpp:value></cpp:define>
<cpp:define PREFIX:line="66" PREFIX:column="1">#<cpp:directive PREFIX:line="66" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="66" PREFIX:column="9">HEIGHT</name></cpp:macro> <cpp:value PREFIX:line="66" PREFIX:column="16">16</cpp:value></cpp:define>
<cpp:define PREFIX:line="67" PREFIX:column="1">#<cpp:directive PREFIX:line="67" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="67" PREFIX:column="9">PAGE_HEIGHT</name></cpp:macro> <cpp:value PREFIX:line="67" PREFIX:column="21">16</cpp:value></cpp:define>
 
<comment type="block" PREFIX:line="69" PREFIX:column="1">/* http://forum.arduino.cc/index.php?topic=168537.0 */</comment>
 
<cpp:define PREFIX:line="71" PREFIX:column="1">#<cpp:directive PREFIX:line="71" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="71" PREFIX:column="9">HT1632_CMD_SYSDIS</name></cpp:macro>       <cpp:value PREFIX:line="71" PREFIX:column="33">0x00</cpp:value></cpp:define>    <comment type="line" PREFIX:line="71" PREFIX:column="41">// CMD= 0000-0000-x Turn off oscil</comment>
<cpp:define PREFIX:line="72" PREFIX:column="1">#<cpp:directive PREFIX:line="72" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="72" PREFIX:column="9">HT1632_CMD_SYSON</name></cpp:macro>        <cpp:value PREFIX:line="72" PREFIX:column="33">0x01</cpp:value></cpp:define>    <comment type="line" PREFIX:line="72" PREFIX:column="41">// CMD= 0000-0001-x Enable system oscil</comment>
<cpp:define PREFIX:line="73" PREFIX:column="1">#<cpp:directive PREFIX:line="73" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="73" PREFIX:column="9">HT1632_CMD_LEDOFF</name></cpp:macro>       <cpp:value PREFIX:line="73" PREFIX:column="33">0x02</cpp:value></cpp:define>    <comment type="line" PREFIX:line="73" PREFIX:column="41">// CMD= 0000-0010-x LED duty cycle gen off</comment>
<cpp:define PREFIX:line="74" PREFIX:column="1">#<cpp:directive PREFIX:line="74" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="74" PREFIX:column="9">HT1632_CMD_LEDON</name></cpp:macro>        <cpp:value PREFIX:line="74" PREFIX:column="33">0x03</cpp:value></cpp:define>    <comment type="line" PREFIX:line="74" PREFIX:column="41">// CMD= 0000-0011-x LEDs ON</comment>
<cpp:define PREFIX:line="75" PREFIX:column="1">#<cpp:directive PREFIX:line="75" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="75" PREFIX:column="9">HT1632_CMD_BLOFF</name></cpp:macro>        <cpp:value PREFIX:line="75" PREFIX:column="33">0x08</cpp:value></cpp:define>    <comment type="line" PREFIX:line="75" PREFIX:column="41">// CMD= 0000-1000-x Blink OFF</comment>
<cpp:define PREFIX:line="76" PREFIX:column="1">#<cpp:directive PREFIX:line="76" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="76" PREFIX:column="9">HT1632_CMD_BLON</name></cpp:macro>         <cpp:value PREFIX:line="76" PREFIX:column="33">0x09</cpp:value></cpp:define>    <comment type="line" PREFIX:line="76" PREFIX:column="41">// CMD= 0000-1001-x Blink On</comment>
<cpp:define PREFIX:line="77" PREFIX:column="1">#<cpp:directive PREFIX:line="77" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="77" PREFIX:column="9">HT1632_CMD_SLVMD</name></cpp:macro>        <cpp:value PREFIX:line="77" PREFIX:column="33">0x10</cpp:value></cpp:define>    <comment type="line" PREFIX:line="77" PREFIX:column="41">// CMD= 0001-00xx-x Slave Mode</comment>
<cpp:define PREFIX:line="78" PREFIX:column="1">#<cpp:directive PREFIX:line="78" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="78" PREFIX:column="9">HT1632_CMD_MSTMD</name></cpp:macro>        <cpp:value PREFIX:line="78" PREFIX:column="33">0x14</cpp:value></cpp:define>    <comment type="line" PREFIX:line="78" PREFIX:column="41">// CMD= 0001-01xx-x Master Mode</comment>
<cpp:define PREFIX:line="79" PREFIX:column="1">#<cpp:directive PREFIX:line="79" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="79" PREFIX:column="9">HT1632_CMD_RCCLK</name></cpp:macro>        <cpp:value PREFIX:line="79" PREFIX:column="33">0x18</cpp:value></cpp:define>    <comment type="line" PREFIX:line="79" PREFIX:column="41">// CMD= 0001-10xx-x Use on-chip clock</comment>
<cpp:define PREFIX:line="80" PREFIX:column="1">#<cpp:directive PREFIX:line="80" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="80" PREFIX:column="9">HT1632_CMD_EXTCLK</name></cpp:macro>       <cpp:value PREFIX:line="80" PREFIX:column="33">0x1C</cpp:value></cpp:define>    <comment type="line" PREFIX:line="80" PREFIX:column="41">// CMD= 0001-11xx-x Use al clock</comment>
<cpp:define PREFIX:line="81" PREFIX:column="1">#<cpp:directive PREFIX:line="81" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="81" PREFIX:column="9">HT1632_CMD_COMS00</name></cpp:macro>       <cpp:value PREFIX:line="81" PREFIX:column="33">0x20</cpp:value></cpp:define>    <comment type="line" PREFIX:line="81" PREFIX:column="41">// CMD= 0010-ABxx-x commons options</comment>
<cpp:define PREFIX:line="82" PREFIX:column="1">#<cpp:directive PREFIX:line="82" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="82" PREFIX:column="9">HT1632_CMD_COMS01</name></cpp:macro>       <cpp:value PREFIX:line="82" PREFIX:column="33">0x24</cpp:value></cpp:define>    <comment type="line" PREFIX:line="82" PREFIX:column="41">// CMD= 0010-ABxx-x commons options</comment>
<cpp:define PREFIX:line="83" PREFIX:column="1">#<cpp:directive PREFIX:line="83" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="83" PREFIX:column="9">HT1632_CMD_COMS10</name></cpp:macro>       <cpp:value PREFIX:line="83" PREFIX:column="33">0x28</cpp:value></cpp:define>    <comment type="line" PREFIX:line="83" PREFIX:column="41">// CMD= 0010-ABxx-x commons options</comment>
<cpp:define PREFIX:line="84" PREFIX:column="1">#<cpp:directive PREFIX:line="84" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="84" PREFIX:column="9">HT1632_CMD_COMS11</name></cpp:macro>       <cpp:value PREFIX:line="84" PREFIX:column="33">0x2C</cpp:value></cpp:define>    <comment type="line" PREFIX:line="84" PREFIX:column="41">// P-MOS OUTPUT AND 16COMMON OPTION</comment>
<cpp:define PREFIX:line="85" PREFIX:column="1">#<cpp:directive PREFIX:line="85" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="85" PREFIX:column="9">HT1632_CMD_PWM</name></cpp:macro>          <cpp:value PREFIX:line="85" PREFIX:column="33">0xA0</cpp:value></cpp:define>    <comment type="line" PREFIX:line="85" PREFIX:column="41">// CMD= 101x-PPPP-x PWM duty cycle</comment>
 
<cpp:define PREFIX:line="87" PREFIX:column="1">#<cpp:directive PREFIX:line="87" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="87" PREFIX:column="9">HT1632_ID_CMD</name></cpp:macro>   <cpp:value PREFIX:line="87" PREFIX:column="25">4</cpp:value></cpp:define>       <comment type="block" PREFIX:line="87" PREFIX:column="33">/* ID = 100 - Commands */</comment>
<cpp:define PREFIX:line="88" PREFIX:column="1">#<cpp:directive PREFIX:line="88" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="88" PREFIX:column="9">HT1632_ID_RD</name></cpp:macro>    <cpp:value PREFIX:line="88" PREFIX:column="25">6</cpp:value></cpp:define>       <comment type="block" PREFIX:line="88" PREFIX:column="33">/* ID = 110 - Read RAM */</comment>
<cpp:define PREFIX:line="89" PREFIX:column="1">#<cpp:directive PREFIX:line="89" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="89" PREFIX:column="9">HT1632_ID_WR</name></cpp:macro>    <cpp:value PREFIX:line="89" PREFIX:column="25">5</cpp:value></cpp:define>       <comment type="block" PREFIX:line="89" PREFIX:column="33">/* ID = 101 - Write RAM */</comment>
 
<cpp:define PREFIX:line="91" PREFIX:column="1">#<cpp:directive PREFIX:line="91" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="91" PREFIX:column="9">HT1632_ID_LEN</name></cpp:macro>           <cpp:value PREFIX:line="91" PREFIX:column="33">3</cpp:value></cpp:define>               <comment type="line" PREFIX:line="91" PREFIX:column="49">// IDs are 3 bits</comment>
<cpp:define PREFIX:line="92" PREFIX:column="1">#<cpp:directive PREFIX:line="92" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="92" PREFIX:column="9">HT1632_CMD_LEN</name></cpp:macro>          <cpp:value PREFIX:line="92" PREFIX:column="33">8</cpp:value></cpp:define>               <comment type="line" PREFIX:line="92" PREFIX:column="49">// CMDs are 8 bits</comment>
<cpp:define PREFIX:line="93" PREFIX:column="1">#<cpp:directive PREFIX:line="93" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="93" PREFIX:column="9">HT1632_DATA_LEN</name></cpp:macro>         <cpp:value PREFIX:line="93" PREFIX:column="33">8</cpp:value></cpp:define>               <comment type="line" PREFIX:line="93" PREFIX:column="49">// Data are 4*2 bits</comment>
<cpp:define PREFIX:line="94" PREFIX:column="1">#<cpp:directive PREFIX:line="94" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="94" PREFIX:column="9">HT1632_ADDR_LEN</name></cpp:macro>         <cpp:value PREFIX:line="94" PREFIX:column="33">7</cpp:value></cpp:define>               <comment type="line" PREFIX:line="94" PREFIX:column="49">// Address are 7 bits</comment>
 
<cpp:if PREFIX:line="96" PREFIX:column="1">#<cpp:directive PREFIX:line="96" PREFIX:column="2">if</cpp:directive> <expr><call><name PREFIX:line="96" PREFIX:column="5">defined</name><argument_list PREFIX:line="96" PREFIX:column="12">(<argument><expr><name PREFIX:line="96" PREFIX:column="13">ARDUINO</name></expr></argument>)</argument_list></call></expr></cpp:if>
 
<cpp:if PREFIX:line="98" PREFIX:column="1">#<cpp:directive PREFIX:line="98" PREFIX:column="2">if</cpp:directive> <expr><name PREFIX:line="98" PREFIX:column="5">ARDUINO</name> &lt; 100</expr></cpp:if>
<cpp:include PREFIX:line="99" PREFIX:column="1">#<cpp:directive PREFIX:line="99" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="99" PREFIX:column="10">&lt;WProgram.h&gt;</cpp:file></cpp:include>
<cpp:else PREFIX:line="100" PREFIX:column="1">#<cpp:directive PREFIX:line="100" PREFIX:column="2">else</cpp:directive></cpp:else>
<cpp:include PREFIX:line="101" PREFIX:column="1">#<cpp:directive PREFIX:line="101" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="101" PREFIX:column="10">&lt;Arduino.h&gt;</cpp:file></cpp:include>
<cpp:endif PREFIX:line="102" PREFIX:column="1">#<cpp:directive PREFIX:line="102" PREFIX:column="2">endif</cpp:directive></cpp:endif>
 
<comment type="line" PREFIX:line="104" PREFIX:column="1">//#define WR_PIN 3</comment>
<comment type="line" PREFIX:line="105" PREFIX:column="1">//#define DATA_PIN 2</comment>
<comment type="line" PREFIX:line="106" PREFIX:column="1">//#define CS_PIN 4</comment>
 
<function><type><name PREFIX:line="108" PREFIX:column="1">void</name></type> <name PREFIX:line="108" PREFIX:column="6">ht1632_write_data_MSB</name><parameter_list PREFIX:line="108" PREFIX:column="27">(<param><decl><type><name PREFIX:line="108" PREFIX:column="28">u8g_t</name> *</type><name PREFIX:line="108" PREFIX:column="35">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="108" PREFIX:column="40">uint8_t</name></type> <name PREFIX:line="108" PREFIX:column="48">cnt</name></decl></param>, <param><decl><type><name PREFIX:line="108" PREFIX:column="53">uint8_t</name></type> <name PREFIX:line="108" PREFIX:column="61">data</name></decl></param>, <param><decl><type><name PREFIX:line="108" PREFIX:column="67">uint8_t</name></type> <name PREFIX:line="108" PREFIX:column="75">extra</name></decl></param>)</parameter_list>
<block PREFIX:line="109" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="110" PREFIX:column="3">int8_t</name></type> <name PREFIX:line="110" PREFIX:column="10">i</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="111" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="111" PREFIX:column="11">data_pin</name> <init PREFIX:line="111" PREFIX:column="20">= <expr><name><name PREFIX:line="111" PREFIX:column="22">u8g</name>-&gt;<name PREFIX:line="111" PREFIX:column="27">pin_list</name><index PREFIX:line="111" PREFIX:column="35">[<expr><name PREFIX:line="111" PREFIX:column="36">U8G_PI_MOSI</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="112" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="112" PREFIX:column="11">wr_pin</name> <init PREFIX:line="112" PREFIX:column="18">= <expr><name><name PREFIX:line="112" PREFIX:column="20">u8g</name>-&gt;<name PREFIX:line="112" PREFIX:column="25">pin_list</name><index PREFIX:line="112" PREFIX:column="33">[<expr><name PREFIX:line="112" PREFIX:column="34">U8G_PI_SCK</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
 
  <for PREFIX:line="114" PREFIX:column="3">for(<init><expr><name PREFIX:line="114" PREFIX:column="7">i</name> = <name PREFIX:line="114" PREFIX:column="11">cnt</name> - 1</expr>;</init> <condition><expr><name PREFIX:line="114" PREFIX:column="20">i</name> &gt;= 0</expr>;</condition> <incr><expr><name PREFIX:line="114" PREFIX:column="28">i</name>--</expr></incr>)
  <block PREFIX:line="115" PREFIX:column="3">{
    <if PREFIX:line="116" PREFIX:column="5">if <condition PREFIX:line="116" PREFIX:column="8">(<expr PREFIX:line="116" PREFIX:column="9">(<name PREFIX:line="116" PREFIX:column="10">data</name> &gt;&gt; <name PREFIX:line="116" PREFIX:column="18">i</name>) &amp; 1</expr>)</condition><then PREFIX:line="116" PREFIX:column="25">
    <block PREFIX:line="117" PREFIX:column="5">{  
      <expr_stmt><expr><call><name PREFIX:line="118" PREFIX:column="7">digitalWrite</name><argument_list PREFIX:line="118" PREFIX:column="19">(<argument><expr><name PREFIX:line="118" PREFIX:column="20">data_pin</name></expr></argument>, <argument><expr><name PREFIX:line="118" PREFIX:column="30">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then>
    <else PREFIX:line="120" PREFIX:column="5">else
    <block PREFIX:line="121" PREFIX:column="5">{
      <expr_stmt><expr><call><name PREFIX:line="122" PREFIX:column="7">digitalWrite</name><argument_list PREFIX:line="122" PREFIX:column="19">(<argument><expr><name PREFIX:line="122" PREFIX:column="20">data_pin</name></expr></argument>, <argument><expr><name PREFIX:line="122" PREFIX:column="30">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
 
    <expr_stmt><expr><call><name PREFIX:line="125" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="125" PREFIX:column="17">(<argument><expr><name PREFIX:line="125" PREFIX:column="18">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="125" PREFIX:column="26">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="126" PREFIX:column="5">u8g_MicroDelay</name><argument_list PREFIX:line="126" PREFIX:column="19">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="127" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="127" PREFIX:column="17">(<argument><expr><name PREFIX:line="127" PREFIX:column="18">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="127" PREFIX:column="26">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="128" PREFIX:column="5">u8g_MicroDelay</name><argument_list PREFIX:line="128" PREFIX:column="19">()</argument_list></call></expr>;</expr_stmt>
  }</block></for>
 
  <comment type="line" PREFIX:line="131" PREFIX:column="3">// Send an extra bit</comment>
  <if PREFIX:line="132" PREFIX:column="3">if <condition PREFIX:line="132" PREFIX:column="6">(<expr><name PREFIX:line="132" PREFIX:column="7">extra</name></expr>)</condition><then PREFIX:line="132" PREFIX:column="13">
  <block PREFIX:line="133" PREFIX:column="3">{
    <expr_stmt><expr><call><name PREFIX:line="134" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="134" PREFIX:column="17">(<argument><expr><name PREFIX:line="134" PREFIX:column="18">data_pin</name></expr></argument>, <argument><expr><name PREFIX:line="134" PREFIX:column="28">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="135" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="135" PREFIX:column="17">(<argument><expr><name PREFIX:line="135" PREFIX:column="18">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="135" PREFIX:column="26">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="136" PREFIX:column="5">u8g_MicroDelay</name><argument_list PREFIX:line="136" PREFIX:column="19">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="137" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="137" PREFIX:column="17">(<argument><expr><name PREFIX:line="137" PREFIX:column="18">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="137" PREFIX:column="26">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="138" PREFIX:column="5">u8g_MicroDelay</name><argument_list PREFIX:line="138" PREFIX:column="19">()</argument_list></call></expr>;</expr_stmt>
  }</block></then></if>
}</block></function>
 
<function><type><name PREFIX:line="142" PREFIX:column="1">void</name></type> <name PREFIX:line="142" PREFIX:column="6">ht1632_write_data</name><parameter_list PREFIX:line="142" PREFIX:column="23">(<param><decl><type><name PREFIX:line="142" PREFIX:column="24">u8g_t</name> *</type><name PREFIX:line="142" PREFIX:column="31">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="142" PREFIX:column="36">uint8_t</name></type> <name PREFIX:line="142" PREFIX:column="44">cnt</name></decl></param>, <param><decl><type><name PREFIX:line="142" PREFIX:column="49">uint8_t</name></type> <name PREFIX:line="142" PREFIX:column="57">data</name></decl></param>)</parameter_list>
<block PREFIX:line="143" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="144" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="144" PREFIX:column="11">i</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="145" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="145" PREFIX:column="11">data_pin</name> <init PREFIX:line="145" PREFIX:column="20">= <expr><name><name PREFIX:line="145" PREFIX:column="22">u8g</name>-&gt;<name PREFIX:line="145" PREFIX:column="27">pin_list</name><index PREFIX:line="145" PREFIX:column="35">[<expr><name PREFIX:line="145" PREFIX:column="36">U8G_PI_MOSI</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="146" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="146" PREFIX:column="11">wr_pin</name> <init PREFIX:line="146" PREFIX:column="18">= <expr><name><name PREFIX:line="146" PREFIX:column="20">u8g</name>-&gt;<name PREFIX:line="146" PREFIX:column="25">pin_list</name><index PREFIX:line="146" PREFIX:column="33">[<expr><name PREFIX:line="146" PREFIX:column="34">U8G_PI_SCK</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <for PREFIX:line="147" PREFIX:column="3">for (<init><expr><name PREFIX:line="147" PREFIX:column="8">i</name> = 0</expr>;</init> <condition><expr><name PREFIX:line="147" PREFIX:column="15">i</name> &lt; <name PREFIX:line="147" PREFIX:column="19">cnt</name></expr>;</condition> <incr><expr><name PREFIX:line="147" PREFIX:column="24">i</name>++</expr></incr>)
  <block PREFIX:line="148" PREFIX:column="3">{
 
    <if PREFIX:line="150" PREFIX:column="5">if <condition PREFIX:line="150" PREFIX:column="8">(<expr PREFIX:line="150" PREFIX:column="9">(<name PREFIX:line="150" PREFIX:column="10">data</name> &gt;&gt; <name PREFIX:line="150" PREFIX:column="18">i</name>) &amp; 1</expr>)</condition><then PREFIX:line="150" PREFIX:column="25"> <block PREFIX:line="150" PREFIX:column="26">{
      <expr_stmt><expr><call><name PREFIX:line="151" PREFIX:column="7">digitalWrite</name><argument_list PREFIX:line="151" PREFIX:column="19">(<argument><expr><name PREFIX:line="151" PREFIX:column="20">data_pin</name></expr></argument>, <argument><expr><name PREFIX:line="151" PREFIX:column="30">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then>
    <else PREFIX:line="153" PREFIX:column="5">else <block PREFIX:line="153" PREFIX:column="10">{
      <expr_stmt><expr><call><name PREFIX:line="154" PREFIX:column="7">digitalWrite</name><argument_list PREFIX:line="154" PREFIX:column="19">(<argument><expr><name PREFIX:line="154" PREFIX:column="20">data_pin</name></expr></argument>, <argument><expr><name PREFIX:line="154" PREFIX:column="30">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></else></if>
 
    <expr_stmt><expr><call><name PREFIX:line="157" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="157" PREFIX:column="17">(<argument><expr><name PREFIX:line="157" PREFIX:column="18">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="157" PREFIX:column="26">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="158" PREFIX:column="5">u8g_MicroDelay</name><argument_list PREFIX:line="158" PREFIX:column="19">()</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="159" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="159" PREFIX:column="17">(<argument><expr><name PREFIX:line="159" PREFIX:column="18">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="159" PREFIX:column="26">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="160" PREFIX:column="5">u8g_MicroDelay</name><argument_list PREFIX:line="160" PREFIX:column="19">()</argument_list></call></expr>;</expr_stmt>
  }</block></for>
}</block></function>
 
 
<function><type><name PREFIX:line="165" PREFIX:column="1">void</name></type> <name PREFIX:line="165" PREFIX:column="6">ht1632_init</name><parameter_list PREFIX:line="165" PREFIX:column="17">(<param><decl><type><name PREFIX:line="165" PREFIX:column="18">u8g_t</name> *</type><name PREFIX:line="165" PREFIX:column="25">u8g</name></decl></param>)</parameter_list>
<block PREFIX:line="166" PREFIX:column="1">{
  <comment type="line" PREFIX:line="167" PREFIX:column="3">//uint8_t i;</comment>
  <decl_stmt><decl><type><name PREFIX:line="168" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="168" PREFIX:column="11">data_pin</name> <init PREFIX:line="168" PREFIX:column="20">= <expr><name><name PREFIX:line="168" PREFIX:column="22">u8g</name>-&gt;<name PREFIX:line="168" PREFIX:column="27">pin_list</name><index PREFIX:line="168" PREFIX:column="35">[<expr><name PREFIX:line="168" PREFIX:column="36">U8G_PI_MOSI</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="169" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="169" PREFIX:column="11">wr_pin</name> <init PREFIX:line="169" PREFIX:column="18">= <expr><name><name PREFIX:line="169" PREFIX:column="20">u8g</name>-&gt;<name PREFIX:line="169" PREFIX:column="25">pin_list</name><index PREFIX:line="169" PREFIX:column="33">[<expr><name PREFIX:line="169" PREFIX:column="34">U8G_PI_SCK</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="170" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="170" PREFIX:column="11">cs_pin</name> <init PREFIX:line="170" PREFIX:column="18">= <expr><name><name PREFIX:line="170" PREFIX:column="20">u8g</name>-&gt;<name PREFIX:line="170" PREFIX:column="25">pin_list</name><index PREFIX:line="170" PREFIX:column="33">[<expr><name PREFIX:line="170" PREFIX:column="34">U8G_PI_CS</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name PREFIX:line="171" PREFIX:column="3">pinMode</name><argument_list PREFIX:line="171" PREFIX:column="10">(<argument><expr><name PREFIX:line="171" PREFIX:column="11">data_pin</name></expr></argument>, <argument><expr><name PREFIX:line="171" PREFIX:column="21">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="172" PREFIX:column="3">pinMode</name><argument_list PREFIX:line="172" PREFIX:column="10">(<argument><expr><name PREFIX:line="172" PREFIX:column="11">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="172" PREFIX:column="19">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="173" PREFIX:column="3">pinMode</name><argument_list PREFIX:line="173" PREFIX:column="10">(<argument><expr><name PREFIX:line="173" PREFIX:column="11">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="173" PREFIX:column="19">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
  <expr_stmt><expr><call><name PREFIX:line="175" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="175" PREFIX:column="15">(<argument><expr><name PREFIX:line="175" PREFIX:column="16">data_pin</name></expr></argument>, <argument><expr><name PREFIX:line="175" PREFIX:column="26">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="176" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="176" PREFIX:column="15">(<argument><expr><name PREFIX:line="176" PREFIX:column="16">wr_pin</name></expr></argument>, <argument><expr><name PREFIX:line="176" PREFIX:column="24">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="177" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="177" PREFIX:column="15">(<argument><expr><name PREFIX:line="177" PREFIX:column="16">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="177" PREFIX:column="24">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
  <expr_stmt><expr><call><name PREFIX:line="179" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="179" PREFIX:column="15">(<argument><expr><name PREFIX:line="179" PREFIX:column="16">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="179" PREFIX:column="24">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="block" PREFIX:line="180" PREFIX:column="3">/* init display once after startup */</comment>
  <expr_stmt><expr><call><name PREFIX:line="181" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="181" PREFIX:column="24">(<argument><expr><name PREFIX:line="181" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="181" PREFIX:column="30">3</expr></argument>, <argument><expr><name PREFIX:line="181" PREFIX:column="33">HT1632_ID_CMD</name></expr></argument>, <argument><expr><name PREFIX:line="181" PREFIX:column="48">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="181" PREFIX:column="56">// IDs are 3 bits</comment>
  <expr_stmt><expr><call><name PREFIX:line="182" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="182" PREFIX:column="24">(<argument><expr><name PREFIX:line="182" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="182" PREFIX:column="30">8</expr></argument>, <argument><expr><name PREFIX:line="182" PREFIX:column="33">HT1632_CMD_SYSDIS</name></expr></argument>, <argument><expr><name PREFIX:line="182" PREFIX:column="52">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="182" PREFIX:column="59">// 8 bits</comment>
  <expr_stmt><expr><call><name PREFIX:line="183" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="183" PREFIX:column="24">(<argument><expr><name PREFIX:line="183" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="183" PREFIX:column="30">8</expr></argument>, <argument><expr><name PREFIX:line="183" PREFIX:column="33">HT1632_CMD_SYSON</name></expr></argument>, <argument><expr><name PREFIX:line="183" PREFIX:column="51">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="183" PREFIX:column="58">// 8 bits</comment>
  <expr_stmt><expr><call><name PREFIX:line="184" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="184" PREFIX:column="24">(<argument><expr><name PREFIX:line="184" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="184" PREFIX:column="30">8</expr></argument>, <argument><expr><name PREFIX:line="184" PREFIX:column="33">HT1632_CMD_COMS11</name></expr></argument>, <argument><expr><name PREFIX:line="184" PREFIX:column="52">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="184" PREFIX:column="59">// 8 bits</comment>
  <expr_stmt><expr><call><name PREFIX:line="185" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="185" PREFIX:column="24">(<argument><expr><name PREFIX:line="185" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="185" PREFIX:column="30">8</expr></argument>, <argument><expr><name PREFIX:line="185" PREFIX:column="33">HT1632_CMD_LEDON</name></expr></argument>, <argument><expr><name PREFIX:line="185" PREFIX:column="51">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="185" PREFIX:column="58">// 8 bits</comment>
  <expr_stmt><expr><call><name PREFIX:line="186" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="186" PREFIX:column="24">(<argument><expr><name PREFIX:line="186" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="186" PREFIX:column="30">8</expr></argument>, <argument><expr><name PREFIX:line="186" PREFIX:column="33">HT1632_CMD_BLOFF</name></expr></argument>, <argument><expr><name PREFIX:line="186" PREFIX:column="51">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="186" PREFIX:column="58">// 8 bits</comment>
  <expr_stmt><expr><call><name PREFIX:line="187" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="187" PREFIX:column="24">(<argument><expr><name PREFIX:line="187" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="187" PREFIX:column="30">8</expr></argument>, <argument><expr><name PREFIX:line="187" PREFIX:column="33">HT1632_CMD_PWM</name>+15</expr></argument>, <argument><expr><name PREFIX:line="187" PREFIX:column="52">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="187" PREFIX:column="59">// 8 bits  </comment>
  <expr_stmt><expr><call><name PREFIX:line="188" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="188" PREFIX:column="15">(<argument><expr><name PREFIX:line="188" PREFIX:column="16">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="188" PREFIX:column="24">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
 
  <comment type="block" PREFIX:line="190" PREFIX:column="3">/* removed following (debug) code */</comment>
  <comment type="block" PREFIX:line="191" PREFIX:column="3">/*
  digitalWrite(cs_pin, LOW);
  ht1632_write_data_MSB(u8g, 3, HT1632_ID_WR, false); // Send "write to display" command
  ht1632_write_data_MSB(u8g, 7, 0, false);
  for(i = 0; i&lt;48; ++i)
  {
    ht1632_write_data(u8g, 8, 0xFF);
  }
  digitalWrite(cs_pin, HIGH);
  */</comment>
}</block></function>
 
<comment type="block" PREFIX:line="203" PREFIX:column="1">/*
  page: 0=data contain lines 0..16, 1=data contain lines 16..32  (a 24x16 display will only have page 0)
  cnt: width of the display
  data: pointer to a buffer with 2*cnt bytes.
*/</comment>
<function><type><name PREFIX:line="208" PREFIX:column="1">void</name></type> <name PREFIX:line="208" PREFIX:column="6">ht1632_transfer_data</name><parameter_list PREFIX:line="208" PREFIX:column="26">(<param><decl><type><name PREFIX:line="208" PREFIX:column="27">u8g_t</name> *</type><name PREFIX:line="208" PREFIX:column="34">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="208" PREFIX:column="39">uint8_t</name></type> <name PREFIX:line="208" PREFIX:column="47">page</name></decl></param>, <param><decl><type><name PREFIX:line="208" PREFIX:column="53">uint8_t</name></type> <name PREFIX:line="208" PREFIX:column="61">cnt</name></decl></param>, <param><decl><type><name PREFIX:line="208" PREFIX:column="66">uint8_t</name> *</type><name PREFIX:line="208" PREFIX:column="75">data</name></decl></param>)</parameter_list>
<block PREFIX:line="209" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="210" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="210" PREFIX:column="11">addr</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="211" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="211" PREFIX:column="11">cs_pin</name> <init PREFIX:line="211" PREFIX:column="18">= <expr><name><name PREFIX:line="211" PREFIX:column="20">u8g</name>-&gt;<name PREFIX:line="211" PREFIX:column="25">pin_list</name><index PREFIX:line="211" PREFIX:column="33">[<expr><name PREFIX:line="211" PREFIX:column="34">U8G_PI_CS</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <comment type="block" PREFIX:line="212" PREFIX:column="3">/* send data to the ht1632 */</comment>
  <expr_stmt><expr><call><name PREFIX:line="213" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="213" PREFIX:column="15">(<argument><expr><name PREFIX:line="213" PREFIX:column="16">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="213" PREFIX:column="24">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="214" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="214" PREFIX:column="24">(<argument><expr><name PREFIX:line="214" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="214" PREFIX:column="30">3</expr></argument>, <argument><expr><name PREFIX:line="214" PREFIX:column="33">HT1632_ID_WR</name></expr></argument>, <argument><expr><name PREFIX:line="214" PREFIX:column="47">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="214" PREFIX:column="55">// Send "write to display" command</comment>
  <expr_stmt><expr><call><name PREFIX:line="215" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="215" PREFIX:column="24">(<argument><expr><name PREFIX:line="215" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="215" PREFIX:column="30">7</expr></argument>, <argument><expr><name PREFIX:line="215" PREFIX:column="33">page</name>*2*<name PREFIX:line="215" PREFIX:column="40">cnt</name></expr></argument>, <argument><expr><name PREFIX:line="215" PREFIX:column="45">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
  
  <comment type="line" PREFIX:line="217" PREFIX:column="3">// Operating in progressive addressing mode</comment>
  <for PREFIX:line="218" PREFIX:column="3">for (<init><expr><name PREFIX:line="218" PREFIX:column="8">addr</name> = 0</expr>;</init> <condition><expr><name PREFIX:line="218" PREFIX:column="18">addr</name> &lt; <name PREFIX:line="218" PREFIX:column="25">cnt</name></expr>;</condition> <incr><expr><name PREFIX:line="218" PREFIX:column="30">addr</name>++</expr></incr>)
  <block PREFIX:line="219" PREFIX:column="3">{
    <expr_stmt><expr><call><name PREFIX:line="220" PREFIX:column="5">ht1632_write_data</name><argument_list PREFIX:line="220" PREFIX:column="22">(<argument><expr><name PREFIX:line="220" PREFIX:column="23">u8g</name></expr></argument>, <argument><expr PREFIX:line="220" PREFIX:column="28">8</expr></argument>, <argument><expr><name><name PREFIX:line="220" PREFIX:column="31">data</name><index PREFIX:line="220" PREFIX:column="35">[<expr><name PREFIX:line="220" PREFIX:column="36">addr</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  
    <expr_stmt><expr><call><name PREFIX:line="221" PREFIX:column="5">ht1632_write_data</name><argument_list PREFIX:line="221" PREFIX:column="22">(<argument><expr><name PREFIX:line="221" PREFIX:column="23">u8g</name></expr></argument>, <argument><expr PREFIX:line="221" PREFIX:column="28">8</expr></argument>, <argument><expr><name><name PREFIX:line="221" PREFIX:column="31">data</name><index PREFIX:line="221" PREFIX:column="35">[<expr><name PREFIX:line="221" PREFIX:column="36">addr</name>+<name PREFIX:line="221" PREFIX:column="41">cnt</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></for>  
  <expr_stmt><expr><call><name PREFIX:line="223" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="223" PREFIX:column="15">(<argument><expr><name PREFIX:line="223" PREFIX:column="16">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="223" PREFIX:column="24">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="block" PREFIX:line="226" PREFIX:column="1">/* value is between 0...15 */</comment>
<function><type><name PREFIX:line="227" PREFIX:column="1">void</name></type> <name PREFIX:line="227" PREFIX:column="6">ht1632_set_contrast</name><parameter_list PREFIX:line="227" PREFIX:column="25">(<param><decl><type><name PREFIX:line="227" PREFIX:column="26">u8g_t</name> *</type><name PREFIX:line="227" PREFIX:column="33">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="227" PREFIX:column="38">uint8_t</name></type> <name PREFIX:line="227" PREFIX:column="46">value</name></decl></param>)</parameter_list>
<block PREFIX:line="228" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="229" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="229" PREFIX:column="11">cs_pin</name> <init PREFIX:line="229" PREFIX:column="18">= <expr><name><name PREFIX:line="229" PREFIX:column="20">u8g</name>-&gt;<name PREFIX:line="229" PREFIX:column="25">pin_list</name><index PREFIX:line="229" PREFIX:column="33">[<expr><name PREFIX:line="229" PREFIX:column="34">U8G_PI_CS</name></expr>]</index></name></expr></init></decl>;</decl_stmt>
  <expr_stmt><expr><call><name PREFIX:line="230" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="230" PREFIX:column="15">(<argument><expr><name PREFIX:line="230" PREFIX:column="16">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="230" PREFIX:column="24">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="231" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="231" PREFIX:column="24">(<argument><expr><name PREFIX:line="231" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="231" PREFIX:column="30">3</expr></argument>, <argument><expr><name PREFIX:line="231" PREFIX:column="33">HT1632_ID_CMD</name></expr></argument>, <argument><expr><name PREFIX:line="231" PREFIX:column="48">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="232" PREFIX:column="3">ht1632_write_data_MSB</name><argument_list PREFIX:line="232" PREFIX:column="24">(<argument><expr><name PREFIX:line="232" PREFIX:column="25">u8g</name></expr></argument>, <argument><expr PREFIX:line="232" PREFIX:column="30">8</expr></argument>, <argument><expr><name PREFIX:line="232" PREFIX:column="33">HT1632_CMD_PWM</name> + <name PREFIX:line="232" PREFIX:column="50">value</name></expr></argument>, <argument><expr><name PREFIX:line="232" PREFIX:column="57">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="233" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="233" PREFIX:column="15">(<argument><expr><name PREFIX:line="233" PREFIX:column="16">cs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="233" PREFIX:column="24">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
 
<cpp:else PREFIX:line="236" PREFIX:column="1">#<cpp:directive PREFIX:line="236" PREFIX:column="2">else</cpp:directive></cpp:else>
<function><type><name PREFIX:line="237" PREFIX:column="1">void</name></type> <name PREFIX:line="237" PREFIX:column="6">ht1632_init</name><parameter_list PREFIX:line="237" PREFIX:column="17">(<param><decl><type><name PREFIX:line="237" PREFIX:column="18">u8g_t</name> *</type><name PREFIX:line="237" PREFIX:column="25">u8g</name></decl></param>)</parameter_list>
<block PREFIX:line="238" PREFIX:column="1">{
}</block></function>
 
<function><type><name PREFIX:line="241" PREFIX:column="1">void</name></type> <name PREFIX:line="241" PREFIX:column="6">ht1632_transfer_data</name><parameter_list PREFIX:line="241" PREFIX:column="26">(<param><decl><type><name PREFIX:line="241" PREFIX:column="27">u8g_t</name> *</type><name PREFIX:line="241" PREFIX:column="34">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="241" PREFIX:column="39">uint8_t</name></type> <name PREFIX:line="241" PREFIX:column="47">page</name></decl></param>, <param><decl><type><name PREFIX:line="241" PREFIX:column="53">uint8_t</name></type> <name PREFIX:line="241" PREFIX:column="61">cnt</name></decl></param>, <param><decl><type><name PREFIX:line="241" PREFIX:column="66">uint8_t</name> *</type><name PREFIX:line="241" PREFIX:column="75">data</name></decl></param>)</parameter_list>
<block PREFIX:line="242" PREFIX:column="1">{
}</block></function>

<function><type><name PREFIX:line="245" PREFIX:column="1">void</name></type> <name PREFIX:line="245" PREFIX:column="6">ht1632_set_contrast</name><parameter_list PREFIX:line="245" PREFIX:column="25">(<param><decl><type><name PREFIX:line="245" PREFIX:column="26">u8g_t</name> *</type><name PREFIX:line="245" PREFIX:column="33">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="245" PREFIX:column="38">uint8_t</name></type> <name PREFIX:line="245" PREFIX:column="46">value</name></decl></param>)</parameter_list>
<block PREFIX:line="246" PREFIX:column="1">{
}</block></function>

<cpp:endif PREFIX:line="249" PREFIX:column="1">#<cpp:directive PREFIX:line="249" PREFIX:column="2">endif</cpp:directive></cpp:endif> <comment type="block" PREFIX:line="249" PREFIX:column="8">/* ARDUINO */</comment>
 
 
<function><type><name PREFIX:line="252" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="252" PREFIX:column="9">u8g_dev_ht1632_24x16_fn</name><parameter_list PREFIX:line="252" PREFIX:column="32">(<param><decl><type><name PREFIX:line="252" PREFIX:column="33">u8g_t</name> *</type><name PREFIX:line="252" PREFIX:column="40">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="252" PREFIX:column="45">u8g_dev_t</name> *</type><name PREFIX:line="252" PREFIX:column="56">dev</name></decl></param>, <param><decl><type><name PREFIX:line="252" PREFIX:column="61">uint8_t</name></type> <name PREFIX:line="252" PREFIX:column="69">msg</name></decl></param>, <param><decl><type><name PREFIX:line="252" PREFIX:column="74">void</name> *</type><name PREFIX:line="252" PREFIX:column="80">arg</name></decl></param>)</parameter_list>
<block PREFIX:line="253" PREFIX:column="1">{
  <switch PREFIX:line="254" PREFIX:column="3">switch<condition PREFIX:line="254" PREFIX:column="9">(<expr><name PREFIX:line="254" PREFIX:column="10">msg</name></expr>)</condition>
  <block PREFIX:line="255" PREFIX:column="3">{
    <case PREFIX:line="256" PREFIX:column="5">case <expr><name PREFIX:line="256" PREFIX:column="10">U8G_DEV_MSG_INIT</name></expr>:
      <expr_stmt><expr><call><name PREFIX:line="257" PREFIX:column="7">ht1632_init</name><argument_list PREFIX:line="257" PREFIX:column="18">(<argument><expr><name PREFIX:line="257" PREFIX:column="19">u8g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <break PREFIX:line="258" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="259" PREFIX:column="5">case <expr><name PREFIX:line="259" PREFIX:column="10">U8G_DEV_MSG_STOP</name></expr>:
      <break PREFIX:line="260" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="261" PREFIX:column="5">case <expr><name PREFIX:line="261" PREFIX:column="10">U8G_DEV_MSG_PAGE_NEXT</name></expr>:
      <block PREFIX:line="262" PREFIX:column="7">{
	<decl_stmt><decl><type><name PREFIX:line="263" PREFIX:column="9">u8g_pb_t</name> *</type><name PREFIX:line="263" PREFIX:column="19">pb</name> <init PREFIX:line="263" PREFIX:column="22">= <expr><call PREFIX:line="263" PREFIX:column="24">(<name PREFIX:line="263" PREFIX:column="25">u8g_pb_t</name> *)<argument_list PREFIX:line="263" PREFIX:column="36">(<argument><expr><name><name PREFIX:line="263" PREFIX:column="37">dev</name>-&gt;<name PREFIX:line="263" PREFIX:column="42">dev_mem</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
       
	<comment type="block" PREFIX:line="265" PREFIX:column="9">/* current page: pb-&gt;p.page */</comment>
	<comment type="block" PREFIX:line="266" PREFIX:column="9">/* ptr to the buffer: pb-&gt;buf */</comment>
	<expr_stmt><expr><call><name PREFIX:line="267" PREFIX:column="9">ht1632_transfer_data</name><argument_list PREFIX:line="267" PREFIX:column="29">(<argument><expr><name PREFIX:line="267" PREFIX:column="30">u8g</name></expr></argument>, <argument><expr><name><name PREFIX:line="267" PREFIX:column="35">pb</name>-&gt;<name PREFIX:line="267" PREFIX:column="39">p</name>.<name PREFIX:line="267" PREFIX:column="41">page</name></name></expr></argument>, <argument><expr><name PREFIX:line="267" PREFIX:column="47">WIDTH</name></expr></argument>, <argument><expr><name><name PREFIX:line="267" PREFIX:column="54">pb</name>-&gt;<name PREFIX:line="267" PREFIX:column="58">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      }</block>
      <break PREFIX:line="269" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="270" PREFIX:column="5">case <expr><name PREFIX:line="270" PREFIX:column="10">U8G_DEV_MSG_CONTRAST</name></expr>:
      <comment type="block" PREFIX:line="271" PREFIX:column="7">/* values passed to SetContrast() are between 0 and 255, scale down to 0...15 */</comment>
      <expr_stmt><expr><call><name PREFIX:line="272" PREFIX:column="7">ht1632_set_contrast</name><argument_list PREFIX:line="272" PREFIX:column="26">(<argument><expr><name PREFIX:line="272" PREFIX:column="27">u8g</name></expr></argument>, <argument><expr PREFIX:line="272" PREFIX:column="32">(*(<name PREFIX:line="272" PREFIX:column="35">uint8_t</name> *)<name PREFIX:line="272" PREFIX:column="45">arg</name>) &gt;&gt; 4</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return PREFIX:line="273" PREFIX:column="5">return <expr PREFIX:line="273" PREFIX:column="12">1</expr>;</return>
  </case>}</block></switch>
  <return PREFIX:line="275" PREFIX:column="3">return <expr><call><name PREFIX:line="275" PREFIX:column="10">u8g_dev_pb16v1_base_fn</name><argument_list PREFIX:line="275" PREFIX:column="32">(<argument><expr><name PREFIX:line="275" PREFIX:column="33">u8g</name></expr></argument>, <argument><expr><name PREFIX:line="275" PREFIX:column="38">dev</name></expr></argument>, <argument><expr><name PREFIX:line="275" PREFIX:column="43">msg</name></expr></argument>, <argument><expr><name PREFIX:line="275" PREFIX:column="48">arg</name></expr></argument>)</argument_list></call></expr>;</return>
}</block></function>
 
<decl_stmt><decl><type><name PREFIX:line="278" PREFIX:column="1">uint8_t</name> <name PREFIX:line="278" PREFIX:column="9">u8g_dev_ht1632_24x16_buf</name><index PREFIX:line="278" PREFIX:column="33">[<expr><name PREFIX:line="278" PREFIX:column="34">WIDTH</name>*2</expr>]</index></type> <name PREFIX:line="278" PREFIX:column="43">U8G_NOCOMMON</name></decl> ;</decl_stmt> 
<decl_stmt><decl><type><name PREFIX:line="279" PREFIX:column="1">u8g_pb_t</name></type> <name PREFIX:line="279" PREFIX:column="10">u8g_dev_ht1632_24x16_pb</name> <init PREFIX:line="279" PREFIX:column="34">= <expr><block PREFIX:line="279" PREFIX:column="36">{ <expr><block PREFIX:line="279" PREFIX:column="38">{<expr PREFIX:line="279" PREFIX:column="39">16</expr>, <expr><name PREFIX:line="279" PREFIX:column="43">HEIGHT</name></expr>, <expr PREFIX:line="279" PREFIX:column="51">0</expr>, <expr PREFIX:line="279" PREFIX:column="54">0</expr>, <expr PREFIX:line="279" PREFIX:column="57">0</expr>}</block></expr>,  <expr><name PREFIX:line="279" PREFIX:column="62">WIDTH</name></expr>, <expr><name PREFIX:line="279" PREFIX:column="69">u8g_dev_ht1632_24x16_buf</name></expr>}</block></expr></init></decl>;</decl_stmt> 
<decl_stmt><decl><type><name PREFIX:line="280" PREFIX:column="1">u8g_dev_t</name></type> <name PREFIX:line="280" PREFIX:column="11">u8g_dev_ht1632_24x16</name> <init PREFIX:line="280" PREFIX:column="32">= <expr><block PREFIX:line="280" PREFIX:column="34">{ <expr><name PREFIX:line="280" PREFIX:column="36">u8g_dev_ht1632_24x16_fn</name></expr>, <expr PREFIX:line="280" PREFIX:column="61">&amp;<name PREFIX:line="280" PREFIX:column="62">u8g_dev_ht1632_24x16_pb</name></expr>, <expr><name PREFIX:line="280" PREFIX:column="87">u8g_com_null_fn</name></expr> }</block></expr></init></decl>;</decl_stmt>

</unit>
