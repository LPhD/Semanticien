<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/libraries/LiquidCrystal/src/LiquidCrystal.cpp" PREFIX:tabs="8"><cpp:include PREFIX:line="1" PREFIX:column="1">#<cpp:directive PREFIX:line="1" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="1" PREFIX:column="10">"LiquidCrystal.h"</cpp:file></cpp:include>

<cpp:include PREFIX:line="3" PREFIX:column="1">#<cpp:directive PREFIX:line="3" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="3" PREFIX:column="10">&lt;stdio.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="4" PREFIX:column="1">#<cpp:directive PREFIX:line="4" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="4" PREFIX:column="10">&lt;string.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="5" PREFIX:column="1">#<cpp:directive PREFIX:line="5" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="5" PREFIX:column="10">&lt;inttypes.h&gt;</cpp:file></cpp:include>
<cpp:include PREFIX:line="6" PREFIX:column="1">#<cpp:directive PREFIX:line="6" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="6" PREFIX:column="10">"Arduino.h"</cpp:file></cpp:include>

<comment type="line" PREFIX:line="8" PREFIX:column="1">// When the display powers up, it is configured as follows:</comment>
<comment type="line" PREFIX:line="9" PREFIX:column="1">//</comment>
<comment type="line" PREFIX:line="10" PREFIX:column="1">// 1. Display clear</comment>
<comment type="line" PREFIX:line="11" PREFIX:column="1">// 2. Function set: </comment>
<comment type="line" PREFIX:line="12" PREFIX:column="1">//    DL = 1; 8-bit interface data </comment>
<comment type="line" PREFIX:line="13" PREFIX:column="1">//    N = 0; 1-line display </comment>
<comment type="line" PREFIX:line="14" PREFIX:column="1">//    F = 0; 5x8 dot character font </comment>
<comment type="line" PREFIX:line="15" PREFIX:column="1">// 3. Display on/off control: </comment>
<comment type="line" PREFIX:line="16" PREFIX:column="1">//    D = 0; Display off </comment>
<comment type="line" PREFIX:line="17" PREFIX:column="1">//    C = 0; Cursor off </comment>
<comment type="line" PREFIX:line="18" PREFIX:column="1">//    B = 0; Blinking off </comment>
<comment type="line" PREFIX:line="19" PREFIX:column="1">// 4. Entry mode set: </comment>
<comment type="line" PREFIX:line="20" PREFIX:column="1">//    I/D = 1; Increment by 1 </comment>
<comment type="line" PREFIX:line="21" PREFIX:column="1">//    S = 0; No shift </comment>
<comment type="line" PREFIX:line="22" PREFIX:column="1">//</comment>
<comment type="line" PREFIX:line="23" PREFIX:column="1">// Note, however, that resetting the Arduino doesn't reset the LCD, so we</comment>
<comment type="line" PREFIX:line="24" PREFIX:column="1">// can't assume that its in that state when a sketch starts (and the</comment>
<comment type="line" PREFIX:line="25" PREFIX:column="1">// LiquidCrystal ructor is called).</comment>

<constructor><name><name PREFIX:line="27" PREFIX:column="1">LiquidCrystal</name>::<name PREFIX:line="27" PREFIX:column="16">LiquidCrystal</name></name><parameter_list PREFIX:line="27" PREFIX:column="29">(<param><decl><type><name PREFIX:line="27" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="27" PREFIX:column="38">rs</name></decl></param>, <param><decl><type><name PREFIX:line="27" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="27" PREFIX:column="50">rw</name></decl></param>, <param><decl><type><name PREFIX:line="27" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="27" PREFIX:column="62">enable</name></decl></param>,
			     <param><decl><type><name PREFIX:line="28" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="28" PREFIX:column="38">d0</name></decl></param>, <param><decl><type><name PREFIX:line="28" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="28" PREFIX:column="50">d1</name></decl></param>, <param><decl><type><name PREFIX:line="28" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="28" PREFIX:column="62">d2</name></decl></param>, <param><decl><type><name PREFIX:line="28" PREFIX:column="66">uint8_t</name></type> <name PREFIX:line="28" PREFIX:column="74">d3</name></decl></param>,
			     <param><decl><type><name PREFIX:line="29" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="29" PREFIX:column="38">d4</name></decl></param>, <param><decl><type><name PREFIX:line="29" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="29" PREFIX:column="50">d5</name></decl></param>, <param><decl><type><name PREFIX:line="29" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="29" PREFIX:column="62">d6</name></decl></param>, <param><decl><type><name PREFIX:line="29" PREFIX:column="66">uint8_t</name></type> <name PREFIX:line="29" PREFIX:column="74">d7</name></decl></param>)</parameter_list>
<block PREFIX:line="30" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="31" PREFIX:column="3">init</name><argument_list PREFIX:line="31" PREFIX:column="7">(<argument><expr PREFIX:line="31" PREFIX:column="8">0</expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="11">rs</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="15">rw</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="19">enable</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="27">d0</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="31">d1</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="35">d2</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="39">d3</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="43">d4</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="47">d5</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="51">d6</name></expr></argument>, <argument><expr><name PREFIX:line="31" PREFIX:column="55">d7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></constructor>

<constructor><name><name PREFIX:line="34" PREFIX:column="1">LiquidCrystal</name>::<name PREFIX:line="34" PREFIX:column="16">LiquidCrystal</name></name><parameter_list PREFIX:line="34" PREFIX:column="29">(<param><decl><type><name PREFIX:line="34" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="34" PREFIX:column="38">rs</name></decl></param>, <param><decl><type><name PREFIX:line="34" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="34" PREFIX:column="50">enable</name></decl></param>,
			     <param><decl><type><name PREFIX:line="35" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="35" PREFIX:column="38">d0</name></decl></param>, <param><decl><type><name PREFIX:line="35" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="35" PREFIX:column="50">d1</name></decl></param>, <param><decl><type><name PREFIX:line="35" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="35" PREFIX:column="62">d2</name></decl></param>, <param><decl><type><name PREFIX:line="35" PREFIX:column="66">uint8_t</name></type> <name PREFIX:line="35" PREFIX:column="74">d3</name></decl></param>,
			     <param><decl><type><name PREFIX:line="36" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="36" PREFIX:column="38">d4</name></decl></param>, <param><decl><type><name PREFIX:line="36" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="36" PREFIX:column="50">d5</name></decl></param>, <param><decl><type><name PREFIX:line="36" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="36" PREFIX:column="62">d6</name></decl></param>, <param><decl><type><name PREFIX:line="36" PREFIX:column="66">uint8_t</name></type> <name PREFIX:line="36" PREFIX:column="74">d7</name></decl></param>)</parameter_list>
<block PREFIX:line="37" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="38" PREFIX:column="3">init</name><argument_list PREFIX:line="38" PREFIX:column="7">(<argument><expr PREFIX:line="38" PREFIX:column="8">0</expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="11">rs</name></expr></argument>, <argument><expr PREFIX:line="38" PREFIX:column="15">255</expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="20">enable</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="28">d0</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="32">d1</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="36">d2</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="40">d3</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="44">d4</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="48">d5</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="52">d6</name></expr></argument>, <argument><expr><name PREFIX:line="38" PREFIX:column="56">d7</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></constructor>

<constructor><name><name PREFIX:line="41" PREFIX:column="1">LiquidCrystal</name>::<name PREFIX:line="41" PREFIX:column="16">LiquidCrystal</name></name><parameter_list PREFIX:line="41" PREFIX:column="29">(<param><decl><type><name PREFIX:line="41" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="41" PREFIX:column="38">rs</name></decl></param>, <param><decl><type><name PREFIX:line="41" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="41" PREFIX:column="50">rw</name></decl></param>, <param><decl><type><name PREFIX:line="41" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="41" PREFIX:column="62">enable</name></decl></param>,
			     <param><decl><type><name PREFIX:line="42" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="42" PREFIX:column="38">d0</name></decl></param>, <param><decl><type><name PREFIX:line="42" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="42" PREFIX:column="50">d1</name></decl></param>, <param><decl><type><name PREFIX:line="42" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="42" PREFIX:column="62">d2</name></decl></param>, <param><decl><type><name PREFIX:line="42" PREFIX:column="66">uint8_t</name></type> <name PREFIX:line="42" PREFIX:column="74">d3</name></decl></param>)</parameter_list>
<block PREFIX:line="43" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="44" PREFIX:column="3">init</name><argument_list PREFIX:line="44" PREFIX:column="7">(<argument><expr PREFIX:line="44" PREFIX:column="8">1</expr></argument>, <argument><expr><name PREFIX:line="44" PREFIX:column="11">rs</name></expr></argument>, <argument><expr><name PREFIX:line="44" PREFIX:column="15">rw</name></expr></argument>, <argument><expr><name PREFIX:line="44" PREFIX:column="19">enable</name></expr></argument>, <argument><expr><name PREFIX:line="44" PREFIX:column="27">d0</name></expr></argument>, <argument><expr><name PREFIX:line="44" PREFIX:column="31">d1</name></expr></argument>, <argument><expr><name PREFIX:line="44" PREFIX:column="35">d2</name></expr></argument>, <argument><expr><name PREFIX:line="44" PREFIX:column="39">d3</name></expr></argument>, <argument><expr PREFIX:line="44" PREFIX:column="43">0</expr></argument>, <argument><expr PREFIX:line="44" PREFIX:column="46">0</expr></argument>, <argument><expr PREFIX:line="44" PREFIX:column="49">0</expr></argument>, <argument><expr PREFIX:line="44" PREFIX:column="52">0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></constructor>

<constructor><name><name PREFIX:line="47" PREFIX:column="1">LiquidCrystal</name>::<name PREFIX:line="47" PREFIX:column="16">LiquidCrystal</name></name><parameter_list PREFIX:line="47" PREFIX:column="29">(<param><decl><type><name PREFIX:line="47" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="47" PREFIX:column="38">rs</name></decl></param>,  <param><decl><type><name PREFIX:line="47" PREFIX:column="43">uint8_t</name></type> <name PREFIX:line="47" PREFIX:column="51">enable</name></decl></param>,
			     <param><decl><type><name PREFIX:line="48" PREFIX:column="30">uint8_t</name></type> <name PREFIX:line="48" PREFIX:column="38">d0</name></decl></param>, <param><decl><type><name PREFIX:line="48" PREFIX:column="42">uint8_t</name></type> <name PREFIX:line="48" PREFIX:column="50">d1</name></decl></param>, <param><decl><type><name PREFIX:line="48" PREFIX:column="54">uint8_t</name></type> <name PREFIX:line="48" PREFIX:column="62">d2</name></decl></param>, <param><decl><type><name PREFIX:line="48" PREFIX:column="66">uint8_t</name></type> <name PREFIX:line="48" PREFIX:column="74">d3</name></decl></param>)</parameter_list>
<block PREFIX:line="49" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="50" PREFIX:column="3">init</name><argument_list PREFIX:line="50" PREFIX:column="7">(<argument><expr PREFIX:line="50" PREFIX:column="8">1</expr></argument>, <argument><expr><name PREFIX:line="50" PREFIX:column="11">rs</name></expr></argument>, <argument><expr PREFIX:line="50" PREFIX:column="15">255</expr></argument>, <argument><expr><name PREFIX:line="50" PREFIX:column="20">enable</name></expr></argument>, <argument><expr><name PREFIX:line="50" PREFIX:column="28">d0</name></expr></argument>, <argument><expr><name PREFIX:line="50" PREFIX:column="32">d1</name></expr></argument>, <argument><expr><name PREFIX:line="50" PREFIX:column="36">d2</name></expr></argument>, <argument><expr><name PREFIX:line="50" PREFIX:column="40">d3</name></expr></argument>, <argument><expr PREFIX:line="50" PREFIX:column="44">0</expr></argument>, <argument><expr PREFIX:line="50" PREFIX:column="47">0</expr></argument>, <argument><expr PREFIX:line="50" PREFIX:column="50">0</expr></argument>, <argument><expr PREFIX:line="50" PREFIX:column="53">0</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></constructor>

<function><type><name PREFIX:line="53" PREFIX:column="1">void</name></type> <name><name PREFIX:line="53" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="53" PREFIX:column="21">init</name></name><parameter_list PREFIX:line="53" PREFIX:column="25">(<param><decl><type><name PREFIX:line="53" PREFIX:column="26">uint8_t</name></type> <name PREFIX:line="53" PREFIX:column="34">fourbitmode</name></decl></param>, <param><decl><type><name PREFIX:line="53" PREFIX:column="47">uint8_t</name></type> <name PREFIX:line="53" PREFIX:column="55">rs</name></decl></param>, <param><decl><type><name PREFIX:line="53" PREFIX:column="59">uint8_t</name></type> <name PREFIX:line="53" PREFIX:column="67">rw</name></decl></param>, <param><decl><type><name PREFIX:line="53" PREFIX:column="71">uint8_t</name></type> <name PREFIX:line="53" PREFIX:column="79">enable</name></decl></param>,
			 <param><decl><type><name PREFIX:line="54" PREFIX:column="26">uint8_t</name></type> <name PREFIX:line="54" PREFIX:column="34">d0</name></decl></param>, <param><decl><type><name PREFIX:line="54" PREFIX:column="38">uint8_t</name></type> <name PREFIX:line="54" PREFIX:column="46">d1</name></decl></param>, <param><decl><type><name PREFIX:line="54" PREFIX:column="50">uint8_t</name></type> <name PREFIX:line="54" PREFIX:column="58">d2</name></decl></param>, <param><decl><type><name PREFIX:line="54" PREFIX:column="62">uint8_t</name></type> <name PREFIX:line="54" PREFIX:column="70">d3</name></decl></param>,
			 <param><decl><type><name PREFIX:line="55" PREFIX:column="26">uint8_t</name></type> <name PREFIX:line="55" PREFIX:column="34">d4</name></decl></param>, <param><decl><type><name PREFIX:line="55" PREFIX:column="38">uint8_t</name></type> <name PREFIX:line="55" PREFIX:column="46">d5</name></decl></param>, <param><decl><type><name PREFIX:line="55" PREFIX:column="50">uint8_t</name></type> <name PREFIX:line="55" PREFIX:column="58">d6</name></decl></param>, <param><decl><type><name PREFIX:line="55" PREFIX:column="62">uint8_t</name></type> <name PREFIX:line="55" PREFIX:column="70">d7</name></decl></param>)</parameter_list>
<block PREFIX:line="56" PREFIX:column="1">{
  <expr_stmt><expr><name PREFIX:line="57" PREFIX:column="3">_rs_pin</name> = <name PREFIX:line="57" PREFIX:column="13">rs</name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="58" PREFIX:column="3">_rw_pin</name> = <name PREFIX:line="58" PREFIX:column="13">rw</name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="59" PREFIX:column="3">_enable_pin</name> = <name PREFIX:line="59" PREFIX:column="17">enable</name></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="61" PREFIX:column="3">_data_pins</name><index PREFIX:line="61" PREFIX:column="13">[<expr PREFIX:line="61" PREFIX:column="14">0</expr>]</index></name> = <name PREFIX:line="61" PREFIX:column="19">d0</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="62" PREFIX:column="3">_data_pins</name><index PREFIX:line="62" PREFIX:column="13">[<expr PREFIX:line="62" PREFIX:column="14">1</expr>]</index></name> = <name PREFIX:line="62" PREFIX:column="19">d1</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="63" PREFIX:column="3">_data_pins</name><index PREFIX:line="63" PREFIX:column="13">[<expr PREFIX:line="63" PREFIX:column="14">2</expr>]</index></name> = <name PREFIX:line="63" PREFIX:column="19">d2</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="64" PREFIX:column="3">_data_pins</name><index PREFIX:line="64" PREFIX:column="13">[<expr PREFIX:line="64" PREFIX:column="14">3</expr>]</index></name> = <name PREFIX:line="64" PREFIX:column="19">d3</name></expr>;</expr_stmt> 
  <expr_stmt><expr><name><name PREFIX:line="65" PREFIX:column="3">_data_pins</name><index PREFIX:line="65" PREFIX:column="13">[<expr PREFIX:line="65" PREFIX:column="14">4</expr>]</index></name> = <name PREFIX:line="65" PREFIX:column="19">d4</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="66" PREFIX:column="3">_data_pins</name><index PREFIX:line="66" PREFIX:column="13">[<expr PREFIX:line="66" PREFIX:column="14">5</expr>]</index></name> = <name PREFIX:line="66" PREFIX:column="19">d5</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="67" PREFIX:column="3">_data_pins</name><index PREFIX:line="67" PREFIX:column="13">[<expr PREFIX:line="67" PREFIX:column="14">6</expr>]</index></name> = <name PREFIX:line="67" PREFIX:column="19">d6</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="68" PREFIX:column="3">_data_pins</name><index PREFIX:line="68" PREFIX:column="13">[<expr PREFIX:line="68" PREFIX:column="14">7</expr>]</index></name> = <name PREFIX:line="68" PREFIX:column="19">d7</name></expr>;</expr_stmt> 

  <expr_stmt><expr><call><name PREFIX:line="70" PREFIX:column="3">pinMode</name><argument_list PREFIX:line="70" PREFIX:column="10">(<argument><expr><name PREFIX:line="70" PREFIX:column="11">_rs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="70" PREFIX:column="20">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <comment type="line" PREFIX:line="71" PREFIX:column="3">// we can save 1 pin by not using RW. Indicate by passing 255 instead of pin#</comment>
  <if PREFIX:line="72" PREFIX:column="3">if <condition PREFIX:line="72" PREFIX:column="6">(<expr><name PREFIX:line="72" PREFIX:column="7">_rw_pin</name> != 255</expr>)</condition><then PREFIX:line="72" PREFIX:column="22"> <block PREFIX:line="72" PREFIX:column="23">{ 
    <expr_stmt><expr><call><name PREFIX:line="73" PREFIX:column="5">pinMode</name><argument_list PREFIX:line="73" PREFIX:column="12">(<argument><expr><name PREFIX:line="73" PREFIX:column="13">_rw_pin</name></expr></argument>, <argument><expr><name PREFIX:line="73" PREFIX:column="22">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></then></if>
  <expr_stmt><expr><call><name PREFIX:line="75" PREFIX:column="3">pinMode</name><argument_list PREFIX:line="75" PREFIX:column="10">(<argument><expr><name PREFIX:line="75" PREFIX:column="11">_enable_pin</name></expr></argument>, <argument><expr><name PREFIX:line="75" PREFIX:column="24">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  
  <if PREFIX:line="77" PREFIX:column="3">if <condition PREFIX:line="77" PREFIX:column="6">(<expr><name PREFIX:line="77" PREFIX:column="7">fourbitmode</name></expr>)</condition><then PREFIX:line="77" PREFIX:column="19">
    <expr_stmt><expr><name PREFIX:line="78" PREFIX:column="5">_displayfunction</name> = <name PREFIX:line="78" PREFIX:column="24">LCD_4BITMODE</name> | <name PREFIX:line="78" PREFIX:column="39">LCD_1LINE</name> | <name PREFIX:line="78" PREFIX:column="51">LCD_5x8DOTS</name></expr>;</expr_stmt></then>
  <else PREFIX:line="79" PREFIX:column="3">else 
    <expr_stmt><expr><name PREFIX:line="80" PREFIX:column="5">_displayfunction</name> = <name PREFIX:line="80" PREFIX:column="24">LCD_8BITMODE</name> | <name PREFIX:line="80" PREFIX:column="39">LCD_1LINE</name> | <name PREFIX:line="80" PREFIX:column="51">LCD_5x8DOTS</name></expr>;</expr_stmt></else></if>
  
  <expr_stmt><expr><call><name PREFIX:line="82" PREFIX:column="3">begin</name><argument_list PREFIX:line="82" PREFIX:column="8">(<argument><expr PREFIX:line="82" PREFIX:column="9">16</expr></argument>, <argument><expr PREFIX:line="82" PREFIX:column="13">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>  
}</block></function>

<function><type><name PREFIX:line="85" PREFIX:column="1">void</name></type> <name><name PREFIX:line="85" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="85" PREFIX:column="21">begin</name></name><parameter_list PREFIX:line="85" PREFIX:column="26">(<param><decl><type><name PREFIX:line="85" PREFIX:column="27">uint8_t</name></type> <name PREFIX:line="85" PREFIX:column="35">cols</name></decl></param>, <param><decl><type><name PREFIX:line="85" PREFIX:column="41">uint8_t</name></type> <name PREFIX:line="85" PREFIX:column="49">lines</name></decl></param>, <param><decl><type><name PREFIX:line="85" PREFIX:column="56">uint8_t</name></type> <name PREFIX:line="85" PREFIX:column="64">dotsize</name></decl></param>)</parameter_list> <block PREFIX:line="85" PREFIX:column="73">{
  <if PREFIX:line="86" PREFIX:column="3">if <condition PREFIX:line="86" PREFIX:column="6">(<expr><name PREFIX:line="86" PREFIX:column="7">lines</name> &gt; 1</expr>)</condition><then PREFIX:line="86" PREFIX:column="17"> <block PREFIX:line="86" PREFIX:column="18">{
    <expr_stmt><expr><name PREFIX:line="87" PREFIX:column="5">_displayfunction</name> |= <name PREFIX:line="87" PREFIX:column="25">LCD_2LINE</name></expr>;</expr_stmt>
  }</block></then></if>
  <expr_stmt><expr><name PREFIX:line="89" PREFIX:column="3">_numlines</name> = <name PREFIX:line="89" PREFIX:column="15">lines</name></expr>;</expr_stmt>

  <expr_stmt><expr><call><name PREFIX:line="91" PREFIX:column="3">setRowOffsets</name><argument_list PREFIX:line="91" PREFIX:column="16">(<argument><expr PREFIX:line="91" PREFIX:column="17">0x00</expr></argument>, <argument><expr PREFIX:line="91" PREFIX:column="23">0x40</expr></argument>, <argument><expr PREFIX:line="91" PREFIX:column="29">0x00 + <name PREFIX:line="91" PREFIX:column="36">cols</name></expr></argument>, <argument><expr PREFIX:line="91" PREFIX:column="42">0x40 + <name PREFIX:line="91" PREFIX:column="49">cols</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  

  <comment type="line" PREFIX:line="93" PREFIX:column="3">// for some 1 line displays you can select a 10 pixel high font</comment>
  <if PREFIX:line="94" PREFIX:column="3">if <condition PREFIX:line="94" PREFIX:column="6">(<expr PREFIX:line="94" PREFIX:column="7">(<name PREFIX:line="94" PREFIX:column="8">dotsize</name> != <name PREFIX:line="94" PREFIX:column="19">LCD_5x8DOTS</name>) &amp;&amp; (<name PREFIX:line="94" PREFIX:column="36">lines</name> == 1)</expr>)</condition><then PREFIX:line="94" PREFIX:column="48"> <block PREFIX:line="94" PREFIX:column="49">{
    <expr_stmt><expr><name PREFIX:line="95" PREFIX:column="5">_displayfunction</name> |= <name PREFIX:line="95" PREFIX:column="25">LCD_5x10DOTS</name></expr>;</expr_stmt>
  }</block></then></if>

  <comment type="line" PREFIX:line="98" PREFIX:column="3">// SEE PAGE 45/46 FOR INITIALIZATION SPECIFICATION!</comment>
  <comment type="line" PREFIX:line="99" PREFIX:column="3">// according to datasheet, we need at least 40ms after power rises above 2.7V</comment>
  <comment type="line" PREFIX:line="100" PREFIX:column="3">// before sending commands. Arduino can turn on way before 4.5V so we'll wait 50</comment>
  <expr_stmt><expr><call><name PREFIX:line="101" PREFIX:column="3">delayMicroseconds</name><argument_list PREFIX:line="101" PREFIX:column="20">(<argument><expr PREFIX:line="101" PREFIX:column="21">50000</expr></argument>)</argument_list></call></expr>;</expr_stmt> 
  <comment type="line" PREFIX:line="102" PREFIX:column="3">// Now we pull both RS and R/W low to begin commands</comment>
  <expr_stmt><expr><call><name PREFIX:line="103" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="103" PREFIX:column="15">(<argument><expr><name PREFIX:line="103" PREFIX:column="16">_rs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="103" PREFIX:column="25">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="104" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="104" PREFIX:column="15">(<argument><expr><name PREFIX:line="104" PREFIX:column="16">_enable_pin</name></expr></argument>, <argument><expr><name PREFIX:line="104" PREFIX:column="29">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <if PREFIX:line="105" PREFIX:column="3">if <condition PREFIX:line="105" PREFIX:column="6">(<expr><name PREFIX:line="105" PREFIX:column="7">_rw_pin</name> != 255</expr>)</condition><then PREFIX:line="105" PREFIX:column="22"> <block PREFIX:line="105" PREFIX:column="23">{ 
    <expr_stmt><expr><call><name PREFIX:line="106" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="106" PREFIX:column="17">(<argument><expr><name PREFIX:line="106" PREFIX:column="18">_rw_pin</name></expr></argument>, <argument><expr><name PREFIX:line="106" PREFIX:column="27">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></then></if>
  
  <comment type="line" PREFIX:line="109" PREFIX:column="3">//put the LCD into 4 bit or 8 bit mode</comment>
  <if PREFIX:line="110" PREFIX:column="3">if <condition PREFIX:line="110" PREFIX:column="6">(<expr PREFIX:line="110" PREFIX:column="7">! (<name PREFIX:line="110" PREFIX:column="10">_displayfunction</name> &amp; <name PREFIX:line="110" PREFIX:column="29">LCD_8BITMODE</name>)</expr>)</condition><then PREFIX:line="110" PREFIX:column="43"> <block PREFIX:line="110" PREFIX:column="44">{
    <comment type="line" PREFIX:line="111" PREFIX:column="5">// this is according to the hitachi HD44780 datasheet</comment>
    <comment type="line" PREFIX:line="112" PREFIX:column="5">// figure 24, pg 46</comment>

    <comment type="line" PREFIX:line="114" PREFIX:column="5">// we start in 8bit mode, try to set 4 bit mode</comment>
    <expr_stmt><expr><call><name PREFIX:line="115" PREFIX:column="5">write4bits</name><argument_list PREFIX:line="115" PREFIX:column="15">(<argument><expr PREFIX:line="115" PREFIX:column="16">0x03</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="116" PREFIX:column="5">delayMicroseconds</name><argument_list PREFIX:line="116" PREFIX:column="22">(<argument><expr PREFIX:line="116" PREFIX:column="23">4500</expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="116" PREFIX:column="30">// wait min 4.1ms</comment>

    <comment type="line" PREFIX:line="118" PREFIX:column="5">// second try</comment>
    <expr_stmt><expr><call><name PREFIX:line="119" PREFIX:column="5">write4bits</name><argument_list PREFIX:line="119" PREFIX:column="15">(<argument><expr PREFIX:line="119" PREFIX:column="16">0x03</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="120" PREFIX:column="5">delayMicroseconds</name><argument_list PREFIX:line="120" PREFIX:column="22">(<argument><expr PREFIX:line="120" PREFIX:column="23">4500</expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" PREFIX:line="120" PREFIX:column="30">// wait min 4.1ms</comment>
    
    <comment type="line" PREFIX:line="122" PREFIX:column="5">// third go!</comment>
    <expr_stmt><expr><call><name PREFIX:line="123" PREFIX:column="5">write4bits</name><argument_list PREFIX:line="123" PREFIX:column="15">(<argument><expr PREFIX:line="123" PREFIX:column="16">0x03</expr></argument>)</argument_list></call></expr>;</expr_stmt> 
    <expr_stmt><expr><call><name PREFIX:line="124" PREFIX:column="5">delayMicroseconds</name><argument_list PREFIX:line="124" PREFIX:column="22">(<argument><expr PREFIX:line="124" PREFIX:column="23">150</expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" PREFIX:line="126" PREFIX:column="5">// finally, set to 4-bit interface</comment>
    <expr_stmt><expr><call><name PREFIX:line="127" PREFIX:column="5">write4bits</name><argument_list PREFIX:line="127" PREFIX:column="15">(<argument><expr PREFIX:line="127" PREFIX:column="16">0x02</expr></argument>)</argument_list></call></expr>;</expr_stmt> 
  }</block></then> <else PREFIX:line="128" PREFIX:column="5">else <block PREFIX:line="128" PREFIX:column="10">{
    <comment type="line" PREFIX:line="129" PREFIX:column="5">// this is according to the hitachi HD44780 datasheet</comment>
    <comment type="line" PREFIX:line="130" PREFIX:column="5">// page 45 figure 23</comment>

    <comment type="line" PREFIX:line="132" PREFIX:column="5">// Send function set command sequence</comment>
    <expr_stmt><expr><call><name PREFIX:line="133" PREFIX:column="5">command</name><argument_list PREFIX:line="133" PREFIX:column="12">(<argument><expr><name PREFIX:line="133" PREFIX:column="13">LCD_FUNCTIONSET</name> | <name PREFIX:line="133" PREFIX:column="31">_displayfunction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="134" PREFIX:column="5">delayMicroseconds</name><argument_list PREFIX:line="134" PREFIX:column="22">(<argument><expr PREFIX:line="134" PREFIX:column="23">4500</expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" PREFIX:line="134" PREFIX:column="31">// wait more than 4.1ms</comment>

    <comment type="line" PREFIX:line="136" PREFIX:column="5">// second try</comment>
    <expr_stmt><expr><call><name PREFIX:line="137" PREFIX:column="5">command</name><argument_list PREFIX:line="137" PREFIX:column="12">(<argument><expr><name PREFIX:line="137" PREFIX:column="13">LCD_FUNCTIONSET</name> | <name PREFIX:line="137" PREFIX:column="31">_displayfunction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="138" PREFIX:column="5">delayMicroseconds</name><argument_list PREFIX:line="138" PREFIX:column="22">(<argument><expr PREFIX:line="138" PREFIX:column="23">150</expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" PREFIX:line="140" PREFIX:column="5">// third go</comment>
    <expr_stmt><expr><call><name PREFIX:line="141" PREFIX:column="5">command</name><argument_list PREFIX:line="141" PREFIX:column="12">(<argument><expr><name PREFIX:line="141" PREFIX:column="13">LCD_FUNCTIONSET</name> | <name PREFIX:line="141" PREFIX:column="31">_displayfunction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></else></if>

  <comment type="line" PREFIX:line="144" PREFIX:column="3">// finally, set # lines, font size, etc.</comment>
  <expr_stmt><expr><call><name PREFIX:line="145" PREFIX:column="3">command</name><argument_list PREFIX:line="145" PREFIX:column="10">(<argument><expr><name PREFIX:line="145" PREFIX:column="11">LCD_FUNCTIONSET</name> | <name PREFIX:line="145" PREFIX:column="29">_displayfunction</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  

  <comment type="line" PREFIX:line="147" PREFIX:column="3">// turn the display on with no cursor or blinking default</comment>
  <expr_stmt><expr><name PREFIX:line="148" PREFIX:column="3">_displaycontrol</name> = <name PREFIX:line="148" PREFIX:column="21">LCD_DISPLAYON</name> | <name PREFIX:line="148" PREFIX:column="37">LCD_CURSOROFF</name> | <name PREFIX:line="148" PREFIX:column="53">LCD_BLINKOFF</name></expr>;</expr_stmt>  
  <expr_stmt><expr><call><name PREFIX:line="149" PREFIX:column="3">display</name><argument_list PREFIX:line="149" PREFIX:column="10">()</argument_list></call></expr>;</expr_stmt>

  <comment type="line" PREFIX:line="151" PREFIX:column="3">// clear it off</comment>
  <expr_stmt><expr><call><name PREFIX:line="152" PREFIX:column="3">clear</name><argument_list PREFIX:line="152" PREFIX:column="8">()</argument_list></call></expr>;</expr_stmt>

  <comment type="line" PREFIX:line="154" PREFIX:column="3">// Initialize to default text direction (for romance languages)</comment>
  <expr_stmt><expr><name PREFIX:line="155" PREFIX:column="3">_displaymode</name> = <name PREFIX:line="155" PREFIX:column="18">LCD_ENTRYLEFT</name> | <name PREFIX:line="155" PREFIX:column="34">LCD_ENTRYSHIFTDECREMENT</name></expr>;</expr_stmt>
  <comment type="line" PREFIX:line="156" PREFIX:column="3">// set the entry mode</comment>
  <expr_stmt><expr><call><name PREFIX:line="157" PREFIX:column="3">command</name><argument_list PREFIX:line="157" PREFIX:column="10">(<argument><expr><name PREFIX:line="157" PREFIX:column="11">LCD_ENTRYMODESET</name> | <name PREFIX:line="157" PREFIX:column="30">_displaymode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

}</block></function>

<function><type><name PREFIX:line="161" PREFIX:column="1">void</name></type> <name><name PREFIX:line="161" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="161" PREFIX:column="21">setRowOffsets</name></name><parameter_list PREFIX:line="161" PREFIX:column="34">(<param><decl><type><name PREFIX:line="161" PREFIX:column="35">int</name></type> <name PREFIX:line="161" PREFIX:column="39">row0</name></decl></param>, <param><decl><type><name PREFIX:line="161" PREFIX:column="45">int</name></type> <name PREFIX:line="161" PREFIX:column="49">row1</name></decl></param>, <param><decl><type><name PREFIX:line="161" PREFIX:column="55">int</name></type> <name PREFIX:line="161" PREFIX:column="59">row2</name></decl></param>, <param><decl><type><name PREFIX:line="161" PREFIX:column="65">int</name></type> <name PREFIX:line="161" PREFIX:column="69">row3</name></decl></param>)</parameter_list>
<block PREFIX:line="162" PREFIX:column="1">{
	<expr_stmt><expr><name><name PREFIX:line="163" PREFIX:column="9">_row_offsets</name><index PREFIX:line="163" PREFIX:column="21">[<expr PREFIX:line="163" PREFIX:column="22">0</expr>]</index></name> = <name PREFIX:line="163" PREFIX:column="27">row0</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name PREFIX:line="164" PREFIX:column="9">_row_offsets</name><index PREFIX:line="164" PREFIX:column="21">[<expr PREFIX:line="164" PREFIX:column="22">1</expr>]</index></name> = <name PREFIX:line="164" PREFIX:column="27">row1</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name PREFIX:line="165" PREFIX:column="9">_row_offsets</name><index PREFIX:line="165" PREFIX:column="21">[<expr PREFIX:line="165" PREFIX:column="22">2</expr>]</index></name> = <name PREFIX:line="165" PREFIX:column="27">row2</name></expr>;</expr_stmt>
	<expr_stmt><expr><name><name PREFIX:line="166" PREFIX:column="9">_row_offsets</name><index PREFIX:line="166" PREFIX:column="21">[<expr PREFIX:line="166" PREFIX:column="22">3</expr>]</index></name> = <name PREFIX:line="166" PREFIX:column="27">row3</name></expr>;</expr_stmt>
}</block></function>

<comment type="block" format="doxygen" PREFIX:line="169" PREFIX:column="1">/********** high level commands, for the user! */</comment>
<function><type><name PREFIX:line="170" PREFIX:column="1">void</name></type> <name><name PREFIX:line="170" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="170" PREFIX:column="21">clear</name></name><parameter_list PREFIX:line="170" PREFIX:column="26">()</parameter_list>
<block PREFIX:line="171" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="172" PREFIX:column="3">command</name><argument_list PREFIX:line="172" PREFIX:column="10">(<argument><expr><name PREFIX:line="172" PREFIX:column="11">LCD_CLEARDISPLAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" PREFIX:line="172" PREFIX:column="31">// clear display, set cursor position to zero</comment>
  <expr_stmt><expr><call><name PREFIX:line="173" PREFIX:column="3">delayMicroseconds</name><argument_list PREFIX:line="173" PREFIX:column="20">(<argument><expr PREFIX:line="173" PREFIX:column="21">2000</expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" PREFIX:line="173" PREFIX:column="29">// this command takes a long time!</comment>
}</block></function>

<function><type><name PREFIX:line="176" PREFIX:column="1">void</name></type> <name><name PREFIX:line="176" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="176" PREFIX:column="21">home</name></name><parameter_list PREFIX:line="176" PREFIX:column="25">()</parameter_list>
<block PREFIX:line="177" PREFIX:column="1">{
  <expr_stmt><expr><call><name PREFIX:line="178" PREFIX:column="3">command</name><argument_list PREFIX:line="178" PREFIX:column="10">(<argument><expr><name PREFIX:line="178" PREFIX:column="11">LCD_RETURNHOME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" PREFIX:line="178" PREFIX:column="29">// set cursor position to zero</comment>
  <expr_stmt><expr><call><name PREFIX:line="179" PREFIX:column="3">delayMicroseconds</name><argument_list PREFIX:line="179" PREFIX:column="20">(<argument><expr PREFIX:line="179" PREFIX:column="21">2000</expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" PREFIX:line="179" PREFIX:column="29">// this command takes a long time!</comment>
}</block></function>

<function><type><name PREFIX:line="182" PREFIX:column="1">void</name></type> <name><name PREFIX:line="182" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="182" PREFIX:column="21">setCursor</name></name><parameter_list PREFIX:line="182" PREFIX:column="30">(<param><decl><type><name PREFIX:line="182" PREFIX:column="31">uint8_t</name></type> <name PREFIX:line="182" PREFIX:column="39">col</name></decl></param>, <param><decl><type><name PREFIX:line="182" PREFIX:column="44">uint8_t</name></type> <name PREFIX:line="182" PREFIX:column="52">row</name></decl></param>)</parameter_list>
<block PREFIX:line="183" PREFIX:column="1">{
   <decl_stmt><decl><type><name PREFIX:line="184" PREFIX:column="4">size_t</name></type> <name PREFIX:line="184" PREFIX:column="11">max_lines</name> <init PREFIX:line="184" PREFIX:column="21">= <expr><sizeof PREFIX:line="184" PREFIX:column="23">sizeof<argument_list PREFIX:line="184" PREFIX:column="29">(<argument><expr><name PREFIX:line="184" PREFIX:column="30">_row_offsets</name></expr></argument>)</argument_list></sizeof> / <sizeof PREFIX:line="184" PREFIX:column="46">sizeof<argument_list PREFIX:line="184" PREFIX:column="52">(<argument><expr PREFIX:line="184" PREFIX:column="53">*<name PREFIX:line="184" PREFIX:column="54">_row_offsets</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>
  <if PREFIX:line="185" PREFIX:column="3">if <condition PREFIX:line="185" PREFIX:column="6">( <expr><name PREFIX:line="185" PREFIX:column="8">row</name> &gt;= <name PREFIX:line="185" PREFIX:column="15">max_lines</name></expr> )</condition><then PREFIX:line="185" PREFIX:column="26"> <block PREFIX:line="185" PREFIX:column="27">{
    <expr_stmt><expr><name PREFIX:line="186" PREFIX:column="5">row</name> = <name PREFIX:line="186" PREFIX:column="11">max_lines</name> - 1</expr>;</expr_stmt>    <comment type="line" PREFIX:line="186" PREFIX:column="29">// we count rows starting w/0</comment>
  }</block></then></if>
  <if PREFIX:line="188" PREFIX:column="3">if <condition PREFIX:line="188" PREFIX:column="6">( <expr><name PREFIX:line="188" PREFIX:column="8">row</name> &gt;= <name PREFIX:line="188" PREFIX:column="15">_numlines</name></expr> )</condition><then PREFIX:line="188" PREFIX:column="26"> <block PREFIX:line="188" PREFIX:column="27">{
    <expr_stmt><expr><name PREFIX:line="189" PREFIX:column="5">row</name> = <name PREFIX:line="189" PREFIX:column="11">_numlines</name> - 1</expr>;</expr_stmt>    <comment type="line" PREFIX:line="189" PREFIX:column="29">// we count rows starting w/0</comment>
  }</block></then></if>
  
  <expr_stmt><expr><call><name PREFIX:line="192" PREFIX:column="3">command</name><argument_list PREFIX:line="192" PREFIX:column="10">(<argument><expr><name PREFIX:line="192" PREFIX:column="11">LCD_SETDDRAMADDR</name> | (<name PREFIX:line="192" PREFIX:column="31">col</name> + <name><name PREFIX:line="192" PREFIX:column="37">_row_offsets</name><index PREFIX:line="192" PREFIX:column="49">[<expr><name PREFIX:line="192" PREFIX:column="50">row</name></expr>]</index></name>)</expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="195" PREFIX:column="1">// Turn the display on/off (quickly)</comment>
<function><type><name PREFIX:line="196" PREFIX:column="1">void</name></type> <name><name PREFIX:line="196" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="196" PREFIX:column="21">noDisplay</name></name><parameter_list PREFIX:line="196" PREFIX:column="30">()</parameter_list> <block PREFIX:line="196" PREFIX:column="33">{
  <expr_stmt><expr><name PREFIX:line="197" PREFIX:column="3">_displaycontrol</name> &amp;= ~<name PREFIX:line="197" PREFIX:column="23">LCD_DISPLAYON</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="198" PREFIX:column="3">command</name><argument_list PREFIX:line="198" PREFIX:column="10">(<argument><expr><name PREFIX:line="198" PREFIX:column="11">LCD_DISPLAYCONTROL</name> | <name PREFIX:line="198" PREFIX:column="32">_displaycontrol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name PREFIX:line="200" PREFIX:column="1">void</name></type> <name><name PREFIX:line="200" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="200" PREFIX:column="21">display</name></name><parameter_list PREFIX:line="200" PREFIX:column="28">()</parameter_list> <block PREFIX:line="200" PREFIX:column="31">{
  <expr_stmt><expr><name PREFIX:line="201" PREFIX:column="3">_displaycontrol</name> |= <name PREFIX:line="201" PREFIX:column="22">LCD_DISPLAYON</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="202" PREFIX:column="3">command</name><argument_list PREFIX:line="202" PREFIX:column="10">(<argument><expr><name PREFIX:line="202" PREFIX:column="11">LCD_DISPLAYCONTROL</name> | <name PREFIX:line="202" PREFIX:column="32">_displaycontrol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="205" PREFIX:column="1">// Turns the underline cursor on/off</comment>
<function><type><name PREFIX:line="206" PREFIX:column="1">void</name></type> <name><name PREFIX:line="206" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="206" PREFIX:column="21">noCursor</name></name><parameter_list PREFIX:line="206" PREFIX:column="29">()</parameter_list> <block PREFIX:line="206" PREFIX:column="32">{
  <expr_stmt><expr><name PREFIX:line="207" PREFIX:column="3">_displaycontrol</name> &amp;= ~<name PREFIX:line="207" PREFIX:column="23">LCD_CURSORON</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="208" PREFIX:column="3">command</name><argument_list PREFIX:line="208" PREFIX:column="10">(<argument><expr><name PREFIX:line="208" PREFIX:column="11">LCD_DISPLAYCONTROL</name> | <name PREFIX:line="208" PREFIX:column="32">_displaycontrol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name PREFIX:line="210" PREFIX:column="1">void</name></type> <name><name PREFIX:line="210" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="210" PREFIX:column="21">cursor</name></name><parameter_list PREFIX:line="210" PREFIX:column="27">()</parameter_list> <block PREFIX:line="210" PREFIX:column="30">{
  <expr_stmt><expr><name PREFIX:line="211" PREFIX:column="3">_displaycontrol</name> |= <name PREFIX:line="211" PREFIX:column="22">LCD_CURSORON</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="212" PREFIX:column="3">command</name><argument_list PREFIX:line="212" PREFIX:column="10">(<argument><expr><name PREFIX:line="212" PREFIX:column="11">LCD_DISPLAYCONTROL</name> | <name PREFIX:line="212" PREFIX:column="32">_displaycontrol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="215" PREFIX:column="1">// Turn on and off the blinking cursor</comment>
<function><type><name PREFIX:line="216" PREFIX:column="1">void</name></type> <name><name PREFIX:line="216" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="216" PREFIX:column="21">noBlink</name></name><parameter_list PREFIX:line="216" PREFIX:column="28">()</parameter_list> <block PREFIX:line="216" PREFIX:column="31">{
  <expr_stmt><expr><name PREFIX:line="217" PREFIX:column="3">_displaycontrol</name> &amp;= ~<name PREFIX:line="217" PREFIX:column="23">LCD_BLINKON</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="218" PREFIX:column="3">command</name><argument_list PREFIX:line="218" PREFIX:column="10">(<argument><expr><name PREFIX:line="218" PREFIX:column="11">LCD_DISPLAYCONTROL</name> | <name PREFIX:line="218" PREFIX:column="32">_displaycontrol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name PREFIX:line="220" PREFIX:column="1">void</name></type> <name><name PREFIX:line="220" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="220" PREFIX:column="21">blink</name></name><parameter_list PREFIX:line="220" PREFIX:column="26">()</parameter_list> <block PREFIX:line="220" PREFIX:column="29">{
  <expr_stmt><expr><name PREFIX:line="221" PREFIX:column="3">_displaycontrol</name> |= <name PREFIX:line="221" PREFIX:column="22">LCD_BLINKON</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="222" PREFIX:column="3">command</name><argument_list PREFIX:line="222" PREFIX:column="10">(<argument><expr><name PREFIX:line="222" PREFIX:column="11">LCD_DISPLAYCONTROL</name> | <name PREFIX:line="222" PREFIX:column="32">_displaycontrol</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="225" PREFIX:column="1">// These commands scroll the display without changing the RAM</comment>
<function><type><name PREFIX:line="226" PREFIX:column="1">void</name></type> <name><name PREFIX:line="226" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="226" PREFIX:column="21">scrollDisplayLeft</name></name><parameter_list PREFIX:line="226" PREFIX:column="38">(<param><decl><type><name PREFIX:line="226" PREFIX:column="39">void</name></type></decl></param>)</parameter_list> <block PREFIX:line="226" PREFIX:column="45">{
  <expr_stmt><expr><call><name PREFIX:line="227" PREFIX:column="3">command</name><argument_list PREFIX:line="227" PREFIX:column="10">(<argument><expr><name PREFIX:line="227" PREFIX:column="11">LCD_CURSORSHIFT</name> | <name PREFIX:line="227" PREFIX:column="29">LCD_DISPLAYMOVE</name> | <name PREFIX:line="227" PREFIX:column="47">LCD_MOVELEFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>
<function><type><name PREFIX:line="229" PREFIX:column="1">void</name></type> <name><name PREFIX:line="229" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="229" PREFIX:column="21">scrollDisplayRight</name></name><parameter_list PREFIX:line="229" PREFIX:column="39">(<param><decl><type><name PREFIX:line="229" PREFIX:column="40">void</name></type></decl></param>)</parameter_list> <block PREFIX:line="229" PREFIX:column="46">{
  <expr_stmt><expr><call><name PREFIX:line="230" PREFIX:column="3">command</name><argument_list PREFIX:line="230" PREFIX:column="10">(<argument><expr><name PREFIX:line="230" PREFIX:column="11">LCD_CURSORSHIFT</name> | <name PREFIX:line="230" PREFIX:column="29">LCD_DISPLAYMOVE</name> | <name PREFIX:line="230" PREFIX:column="47">LCD_MOVERIGHT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="233" PREFIX:column="1">// This is for text that flows Left to Right</comment>
<function><type><name PREFIX:line="234" PREFIX:column="1">void</name></type> <name><name PREFIX:line="234" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="234" PREFIX:column="21">leftToRight</name></name><parameter_list PREFIX:line="234" PREFIX:column="32">(<param><decl><type><name PREFIX:line="234" PREFIX:column="33">void</name></type></decl></param>)</parameter_list> <block PREFIX:line="234" PREFIX:column="39">{
  <expr_stmt><expr><name PREFIX:line="235" PREFIX:column="3">_displaymode</name> |= <name PREFIX:line="235" PREFIX:column="19">LCD_ENTRYLEFT</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="236" PREFIX:column="3">command</name><argument_list PREFIX:line="236" PREFIX:column="10">(<argument><expr><name PREFIX:line="236" PREFIX:column="11">LCD_ENTRYMODESET</name> | <name PREFIX:line="236" PREFIX:column="30">_displaymode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="239" PREFIX:column="1">// This is for text that flows Right to Left</comment>
<function><type><name PREFIX:line="240" PREFIX:column="1">void</name></type> <name><name PREFIX:line="240" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="240" PREFIX:column="21">rightToLeft</name></name><parameter_list PREFIX:line="240" PREFIX:column="32">(<param><decl><type><name PREFIX:line="240" PREFIX:column="33">void</name></type></decl></param>)</parameter_list> <block PREFIX:line="240" PREFIX:column="39">{
  <expr_stmt><expr><name PREFIX:line="241" PREFIX:column="3">_displaymode</name> &amp;= ~<name PREFIX:line="241" PREFIX:column="20">LCD_ENTRYLEFT</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="242" PREFIX:column="3">command</name><argument_list PREFIX:line="242" PREFIX:column="10">(<argument><expr><name PREFIX:line="242" PREFIX:column="11">LCD_ENTRYMODESET</name> | <name PREFIX:line="242" PREFIX:column="30">_displaymode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="245" PREFIX:column="1">// This will 'right justify' text from the cursor</comment>
<function><type><name PREFIX:line="246" PREFIX:column="1">void</name></type> <name><name PREFIX:line="246" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="246" PREFIX:column="21">autoscroll</name></name><parameter_list PREFIX:line="246" PREFIX:column="31">(<param><decl><type><name PREFIX:line="246" PREFIX:column="32">void</name></type></decl></param>)</parameter_list> <block PREFIX:line="246" PREFIX:column="38">{
  <expr_stmt><expr><name PREFIX:line="247" PREFIX:column="3">_displaymode</name> |= <name PREFIX:line="247" PREFIX:column="19">LCD_ENTRYSHIFTINCREMENT</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="248" PREFIX:column="3">command</name><argument_list PREFIX:line="248" PREFIX:column="10">(<argument><expr><name PREFIX:line="248" PREFIX:column="11">LCD_ENTRYMODESET</name> | <name PREFIX:line="248" PREFIX:column="30">_displaymode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="251" PREFIX:column="1">// This will 'left justify' text from the cursor</comment>
<function><type><name PREFIX:line="252" PREFIX:column="1">void</name></type> <name><name PREFIX:line="252" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="252" PREFIX:column="21">noAutoscroll</name></name><parameter_list PREFIX:line="252" PREFIX:column="33">(<param><decl><type><name PREFIX:line="252" PREFIX:column="34">void</name></type></decl></param>)</parameter_list> <block PREFIX:line="252" PREFIX:column="40">{
  <expr_stmt><expr><name PREFIX:line="253" PREFIX:column="3">_displaymode</name> &amp;= ~<name PREFIX:line="253" PREFIX:column="20">LCD_ENTRYSHIFTINCREMENT</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="254" PREFIX:column="3">command</name><argument_list PREFIX:line="254" PREFIX:column="10">(<argument><expr><name PREFIX:line="254" PREFIX:column="11">LCD_ENTRYMODESET</name> | <name PREFIX:line="254" PREFIX:column="30">_displaymode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="line" PREFIX:line="257" PREFIX:column="1">// Allows us to fill the first 8 CGRAM locations</comment>
<comment type="line" PREFIX:line="258" PREFIX:column="1">// with custom characters</comment>
<function><type><name PREFIX:line="259" PREFIX:column="1">void</name></type> <name><name PREFIX:line="259" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="259" PREFIX:column="21">createChar</name></name><parameter_list PREFIX:line="259" PREFIX:column="31">(<param><decl><type><name PREFIX:line="259" PREFIX:column="32">uint8_t</name></type> <name PREFIX:line="259" PREFIX:column="40">location</name></decl></param>, <param><decl><type><name PREFIX:line="259" PREFIX:column="50">uint8_t</name></type> <name><name PREFIX:line="259" PREFIX:column="58">charmap</name><index PREFIX:line="259" PREFIX:column="65">[]</index></name></decl></param>)</parameter_list> <block PREFIX:line="259" PREFIX:column="69">{
  <expr_stmt><expr><name PREFIX:line="260" PREFIX:column="3">location</name> &amp;= 0x7</expr>;</expr_stmt> <comment type="line" PREFIX:line="260" PREFIX:column="20">// we only have 8 locations 0-7</comment>
  <expr_stmt><expr><call><name PREFIX:line="261" PREFIX:column="3">command</name><argument_list PREFIX:line="261" PREFIX:column="10">(<argument><expr><name PREFIX:line="261" PREFIX:column="11">LCD_SETCGRAMADDR</name> | (<name PREFIX:line="261" PREFIX:column="31">location</name> &lt;&lt; 3)</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <for PREFIX:line="262" PREFIX:column="3">for (<init><decl><type><name PREFIX:line="262" PREFIX:column="8">int</name></type> <name PREFIX:line="262" PREFIX:column="12">i</name><init PREFIX:line="262" PREFIX:column="13">=<expr PREFIX:line="262" PREFIX:column="14">0</expr></init></decl>;</init> <condition><expr><name PREFIX:line="262" PREFIX:column="17">i</name>&lt;8</expr>;</condition> <incr><expr><name PREFIX:line="262" PREFIX:column="22">i</name>++</expr></incr>) <block PREFIX:line="262" PREFIX:column="27">{
    <expr_stmt><expr><call><name PREFIX:line="263" PREFIX:column="5">write</name><argument_list PREFIX:line="263" PREFIX:column="10">(<argument><expr><name><name PREFIX:line="263" PREFIX:column="11">charmap</name><index PREFIX:line="263" PREFIX:column="18">[<expr><name PREFIX:line="263" PREFIX:column="19">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></for>
}</block></function>

<comment type="block" format="doxygen" PREFIX:line="267" PREFIX:column="1">/*********** mid level commands, for sending data/cmds */</comment>

<function><type><specifier PREFIX:line="269" PREFIX:column="1">inline</specifier> <name PREFIX:line="269" PREFIX:column="8">void</name></type> <name><name PREFIX:line="269" PREFIX:column="13">LiquidCrystal</name>::<name PREFIX:line="269" PREFIX:column="28">command</name></name><parameter_list PREFIX:line="269" PREFIX:column="35">(<param><decl><type><name PREFIX:line="269" PREFIX:column="36">uint8_t</name></type> <name PREFIX:line="269" PREFIX:column="44">value</name></decl></param>)</parameter_list> <block PREFIX:line="269" PREFIX:column="51">{
  <expr_stmt><expr><call><name PREFIX:line="270" PREFIX:column="3">send</name><argument_list PREFIX:line="270" PREFIX:column="7">(<argument><expr><name PREFIX:line="270" PREFIX:column="8">value</name></expr></argument>, <argument><expr><name PREFIX:line="270" PREFIX:column="15">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><specifier PREFIX:line="273" PREFIX:column="1">inline</specifier> <name PREFIX:line="273" PREFIX:column="8">size_t</name></type> <name><name PREFIX:line="273" PREFIX:column="15">LiquidCrystal</name>::<name PREFIX:line="273" PREFIX:column="30">write</name></name><parameter_list PREFIX:line="273" PREFIX:column="35">(<param><decl><type><name PREFIX:line="273" PREFIX:column="36">uint8_t</name></type> <name PREFIX:line="273" PREFIX:column="44">value</name></decl></param>)</parameter_list> <block PREFIX:line="273" PREFIX:column="51">{
  <expr_stmt><expr><call><name PREFIX:line="274" PREFIX:column="3">send</name><argument_list PREFIX:line="274" PREFIX:column="7">(<argument><expr><name PREFIX:line="274" PREFIX:column="8">value</name></expr></argument>, <argument><expr><name PREFIX:line="274" PREFIX:column="15">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <return PREFIX:line="275" PREFIX:column="3">return <expr PREFIX:line="275" PREFIX:column="10">1</expr>;</return> <comment type="line" PREFIX:line="275" PREFIX:column="13">// assume sucess</comment>
}</block></function>

<comment type="block" format="doxygen" PREFIX:line="278" PREFIX:column="1">/************ low level data pushing commands **********/</comment>

<comment type="line" PREFIX:line="280" PREFIX:column="1">// write either command or data, with automatic 4/8-bit selection</comment>
<function><type><name PREFIX:line="281" PREFIX:column="1">void</name></type> <name><name PREFIX:line="281" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="281" PREFIX:column="21">send</name></name><parameter_list PREFIX:line="281" PREFIX:column="25">(<param><decl><type><name PREFIX:line="281" PREFIX:column="26">uint8_t</name></type> <name PREFIX:line="281" PREFIX:column="34">value</name></decl></param>, <param><decl><type><name PREFIX:line="281" PREFIX:column="41">uint8_t</name></type> <name PREFIX:line="281" PREFIX:column="49">mode</name></decl></param>)</parameter_list> <block PREFIX:line="281" PREFIX:column="55">{
  <expr_stmt><expr><call><name PREFIX:line="282" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="282" PREFIX:column="15">(<argument><expr><name PREFIX:line="282" PREFIX:column="16">_rs_pin</name></expr></argument>, <argument><expr><name PREFIX:line="282" PREFIX:column="25">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <comment type="line" PREFIX:line="284" PREFIX:column="3">// if there is a RW pin indicated, set it low to Write</comment>
  <if PREFIX:line="285" PREFIX:column="3">if <condition PREFIX:line="285" PREFIX:column="6">(<expr><name PREFIX:line="285" PREFIX:column="7">_rw_pin</name> != 255</expr>)</condition><then PREFIX:line="285" PREFIX:column="22"> <block PREFIX:line="285" PREFIX:column="23">{ 
    <expr_stmt><expr><call><name PREFIX:line="286" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="286" PREFIX:column="17">(<argument><expr><name PREFIX:line="286" PREFIX:column="18">_rw_pin</name></expr></argument>, <argument><expr><name PREFIX:line="286" PREFIX:column="27">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></then></if>
  
  <if PREFIX:line="289" PREFIX:column="3">if <condition PREFIX:line="289" PREFIX:column="6">(<expr><name PREFIX:line="289" PREFIX:column="7">_displayfunction</name> &amp; <name PREFIX:line="289" PREFIX:column="26">LCD_8BITMODE</name></expr>)</condition><then PREFIX:line="289" PREFIX:column="39"> <block PREFIX:line="289" PREFIX:column="40">{
    <expr_stmt><expr><call><name PREFIX:line="290" PREFIX:column="5">write8bits</name><argument_list PREFIX:line="290" PREFIX:column="15">(<argument><expr><name PREFIX:line="290" PREFIX:column="16">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
  }</block></then> <else PREFIX:line="291" PREFIX:column="5">else <block PREFIX:line="291" PREFIX:column="10">{
    <expr_stmt><expr><call><name PREFIX:line="292" PREFIX:column="5">write4bits</name><argument_list PREFIX:line="292" PREFIX:column="15">(<argument><expr><name PREFIX:line="292" PREFIX:column="16">value</name>&gt;&gt;4</expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="293" PREFIX:column="5">write4bits</name><argument_list PREFIX:line="293" PREFIX:column="15">(<argument><expr><name PREFIX:line="293" PREFIX:column="16">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></else></if>
}</block></function>

<function><type><name PREFIX:line="297" PREFIX:column="1">void</name></type> <name><name PREFIX:line="297" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="297" PREFIX:column="21">pulseEnable</name></name><parameter_list PREFIX:line="297" PREFIX:column="32">(<param><decl><type><name PREFIX:line="297" PREFIX:column="33">void</name></type></decl></param>)</parameter_list> <block PREFIX:line="297" PREFIX:column="39">{
  <expr_stmt><expr><call><name PREFIX:line="298" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="298" PREFIX:column="15">(<argument><expr><name PREFIX:line="298" PREFIX:column="16">_enable_pin</name></expr></argument>, <argument><expr><name PREFIX:line="298" PREFIX:column="29">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="299" PREFIX:column="3">delayMicroseconds</name><argument_list PREFIX:line="299" PREFIX:column="20">(<argument><expr PREFIX:line="299" PREFIX:column="21">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>    
  <expr_stmt><expr><call><name PREFIX:line="300" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="300" PREFIX:column="15">(<argument><expr><name PREFIX:line="300" PREFIX:column="16">_enable_pin</name></expr></argument>, <argument><expr><name PREFIX:line="300" PREFIX:column="29">HIGH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="301" PREFIX:column="3">delayMicroseconds</name><argument_list PREFIX:line="301" PREFIX:column="20">(<argument><expr PREFIX:line="301" PREFIX:column="21">1</expr></argument>)</argument_list></call></expr>;</expr_stmt>    <comment type="line" PREFIX:line="301" PREFIX:column="28">// enable pulse must be &gt;450ns</comment>
  <expr_stmt><expr><call><name PREFIX:line="302" PREFIX:column="3">digitalWrite</name><argument_list PREFIX:line="302" PREFIX:column="15">(<argument><expr><name PREFIX:line="302" PREFIX:column="16">_enable_pin</name></expr></argument>, <argument><expr><name PREFIX:line="302" PREFIX:column="29">LOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="303" PREFIX:column="3">delayMicroseconds</name><argument_list PREFIX:line="303" PREFIX:column="20">(<argument><expr PREFIX:line="303" PREFIX:column="21">100</expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" PREFIX:line="303" PREFIX:column="29">// commands need &gt; 37us to settle</comment>
}</block></function>

<function><type><name PREFIX:line="306" PREFIX:column="1">void</name></type> <name><name PREFIX:line="306" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="306" PREFIX:column="21">write4bits</name></name><parameter_list PREFIX:line="306" PREFIX:column="31">(<param><decl><type><name PREFIX:line="306" PREFIX:column="32">uint8_t</name></type> <name PREFIX:line="306" PREFIX:column="40">value</name></decl></param>)</parameter_list> <block PREFIX:line="306" PREFIX:column="47">{
  <for PREFIX:line="307" PREFIX:column="3">for (<init><decl><type><name PREFIX:line="307" PREFIX:column="8">int</name></type> <name PREFIX:line="307" PREFIX:column="12">i</name> <init PREFIX:line="307" PREFIX:column="14">= <expr PREFIX:line="307" PREFIX:column="16">0</expr></init></decl>;</init> <condition><expr><name PREFIX:line="307" PREFIX:column="19">i</name> &lt; 4</expr>;</condition> <incr><expr><name PREFIX:line="307" PREFIX:column="26">i</name>++</expr></incr>) <block PREFIX:line="307" PREFIX:column="31">{
    <expr_stmt><expr><call><name PREFIX:line="308" PREFIX:column="5">pinMode</name><argument_list PREFIX:line="308" PREFIX:column="12">(<argument><expr><name><name PREFIX:line="308" PREFIX:column="13">_data_pins</name><index PREFIX:line="308" PREFIX:column="23">[<expr><name PREFIX:line="308" PREFIX:column="24">i</name></expr>]</index></name></expr></argument>, <argument><expr><name PREFIX:line="308" PREFIX:column="28">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="309" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="309" PREFIX:column="17">(<argument><expr><name><name PREFIX:line="309" PREFIX:column="18">_data_pins</name><index PREFIX:line="309" PREFIX:column="28">[<expr><name PREFIX:line="309" PREFIX:column="29">i</name></expr>]</index></name></expr></argument>, <argument><expr PREFIX:line="309" PREFIX:column="33">(<name PREFIX:line="309" PREFIX:column="34">value</name> &gt;&gt; <name PREFIX:line="309" PREFIX:column="43">i</name>) &amp; 0x01</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></for>

  <expr_stmt><expr><call><name PREFIX:line="312" PREFIX:column="3">pulseEnable</name><argument_list PREFIX:line="312" PREFIX:column="14">()</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name PREFIX:line="315" PREFIX:column="1">void</name></type> <name><name PREFIX:line="315" PREFIX:column="6">LiquidCrystal</name>::<name PREFIX:line="315" PREFIX:column="21">write8bits</name></name><parameter_list PREFIX:line="315" PREFIX:column="31">(<param><decl><type><name PREFIX:line="315" PREFIX:column="32">uint8_t</name></type> <name PREFIX:line="315" PREFIX:column="40">value</name></decl></param>)</parameter_list> <block PREFIX:line="315" PREFIX:column="47">{
  <for PREFIX:line="316" PREFIX:column="3">for (<init><decl><type><name PREFIX:line="316" PREFIX:column="8">int</name></type> <name PREFIX:line="316" PREFIX:column="12">i</name> <init PREFIX:line="316" PREFIX:column="14">= <expr PREFIX:line="316" PREFIX:column="16">0</expr></init></decl>;</init> <condition><expr><name PREFIX:line="316" PREFIX:column="19">i</name> &lt; 8</expr>;</condition> <incr><expr><name PREFIX:line="316" PREFIX:column="26">i</name>++</expr></incr>) <block PREFIX:line="316" PREFIX:column="31">{
    <expr_stmt><expr><call><name PREFIX:line="317" PREFIX:column="5">pinMode</name><argument_list PREFIX:line="317" PREFIX:column="12">(<argument><expr><name><name PREFIX:line="317" PREFIX:column="13">_data_pins</name><index PREFIX:line="317" PREFIX:column="23">[<expr><name PREFIX:line="317" PREFIX:column="24">i</name></expr>]</index></name></expr></argument>, <argument><expr><name PREFIX:line="317" PREFIX:column="28">OUTPUT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt><expr><call><name PREFIX:line="318" PREFIX:column="5">digitalWrite</name><argument_list PREFIX:line="318" PREFIX:column="17">(<argument><expr><name><name PREFIX:line="318" PREFIX:column="18">_data_pins</name><index PREFIX:line="318" PREFIX:column="28">[<expr><name PREFIX:line="318" PREFIX:column="29">i</name></expr>]</index></name></expr></argument>, <argument><expr PREFIX:line="318" PREFIX:column="33">(<name PREFIX:line="318" PREFIX:column="34">value</name> &gt;&gt; <name PREFIX:line="318" PREFIX:column="43">i</name>) &amp; 0x01</expr></argument>)</argument_list></call></expr>;</expr_stmt>
  }</block></for>
  
  <expr_stmt><expr><call><name PREFIX:line="321" PREFIX:column="3">pulseEnable</name><argument_list PREFIX:line="321" PREFIX:column="14">()</argument_list></call></expr>;</expr_stmt>
}</block></function>
</unit>
