<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C++" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/cores/arduino/new.h.cpp" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*
  Copyright (c) 2014 Arduino.  All right reserved.

  This library is free software; you can redistribute it and/or
  modify it under the terms of the GNU Lesser General Public
  License as published by the Free Software Foundation; either
  version 2.1 of the License, or (at your option) any later version.

  This library is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  You should have received a copy of the GNU Lesser General Public
  License along with this library; if not, write to the Free Software
  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
*/</comment>

<cpp:ifndef PREFIX:line="19" PREFIX:column="1">#<cpp:directive PREFIX:line="19" PREFIX:column="2">ifndef</cpp:directive> <name PREFIX:line="19" PREFIX:column="9">NEW_H</name></cpp:ifndef>
<cpp:define PREFIX:line="20" PREFIX:column="1">#<cpp:directive PREFIX:line="20" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="20" PREFIX:column="9">NEW_H</name></cpp:macro></cpp:define>

<cpp:include PREFIX:line="22" PREFIX:column="1">#<cpp:directive PREFIX:line="22" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="22" PREFIX:column="10">&lt;stdlib.h&gt;</cpp:file></cpp:include>

<function_decl><type><name PREFIX:line="24" PREFIX:column="1">void</name> *</type> <name PREFIX:line="24" PREFIX:column="8">operator new</name><parameter_list PREFIX:line="24" PREFIX:column="20">(<param><decl><type><name PREFIX:line="24" PREFIX:column="21">size_t</name></type> <name PREFIX:line="24" PREFIX:column="28">size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="25" PREFIX:column="1">void</name> *</type> <name PREFIX:line="25" PREFIX:column="8">operator new[]</name><parameter_list PREFIX:line="25" PREFIX:column="22">(<param><decl><type><name PREFIX:line="25" PREFIX:column="23">size_t</name></type> <name PREFIX:line="25" PREFIX:column="30">size</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="26" PREFIX:column="1">void</name></type> <name PREFIX:line="26" PREFIX:column="6">operator delete</name><parameter_list PREFIX:line="26" PREFIX:column="21">(<param><decl><type><name PREFIX:line="26" PREFIX:column="22">void</name> *</type> <name PREFIX:line="26" PREFIX:column="29">ptr</name></decl></param>)</parameter_list>;</function_decl>
<function_decl><type><name PREFIX:line="27" PREFIX:column="1">void</name></type> <name PREFIX:line="27" PREFIX:column="6">operator delete[]</name><parameter_list PREFIX:line="27" PREFIX:column="23">(<param><decl><type><name PREFIX:line="27" PREFIX:column="24">void</name> *</type> <name PREFIX:line="27" PREFIX:column="31">ptr</name></decl></param>)</parameter_list>;</function_decl>

<cpp:endif PREFIX:line="29" PREFIX:column="1">#<cpp:directive PREFIX:line="29" PREFIX:column="2">endif</cpp:directive></cpp:endif>

</unit>
