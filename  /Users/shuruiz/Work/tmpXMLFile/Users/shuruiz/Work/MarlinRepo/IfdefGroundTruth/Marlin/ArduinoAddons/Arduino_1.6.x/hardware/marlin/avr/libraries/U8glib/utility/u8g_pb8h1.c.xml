<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/libraries/U8glib/utility/u8g_pb8h1.c" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*

  u8g_pb8h1.c
  
  8bit height monochrom (1 bit) page buffer
  byte has horizontal orientation

  Universal 8bit Graphics Library
  
  Copyright (c) 2011, olikraus@gmail.com
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this list 
    of conditions and the following disclaimer.
    
  * Redistributions in binary form must reproduce the above copyright notice, this 
    list of conditions and the following disclaimer in the documentation and/or other 
    materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  


  total buffer size is limited to 256 bytes because of the calculation inside the set pixel procedure

  23. Sep 2012: Bug with down procedure, see FPS 1st page --&gt; fixed (bug located in u8g_clip.c)

*/</comment>

<cpp:include PREFIX:line="44" PREFIX:column="1">#<cpp:directive PREFIX:line="44" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="44" PREFIX:column="10">"u8g.h"</cpp:file></cpp:include>
<cpp:include PREFIX:line="45" PREFIX:column="1">#<cpp:directive PREFIX:line="45" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="45" PREFIX:column="10">&lt;string.h&gt;</cpp:file></cpp:include>

<cpp:ifdef PREFIX:line="47" PREFIX:column="1">#<cpp:directive PREFIX:line="47" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="47" PREFIX:column="8">__unix__</name></cpp:ifdef>
<cpp:include PREFIX:line="48" PREFIX:column="1">#<cpp:directive PREFIX:line="48" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="48" PREFIX:column="10">&lt;assert.h&gt;</cpp:file></cpp:include>
<cpp:endif PREFIX:line="49" PREFIX:column="1">#<cpp:directive PREFIX:line="49" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<comment type="block" PREFIX:line="51" PREFIX:column="1">/* NEW_CODE disabled, because the performance increase was too slow and not worth compared */</comment>
<comment type="block" PREFIX:line="52" PREFIX:column="1">/* to the increase of code size */</comment>
<comment type="block" PREFIX:line="53" PREFIX:column="1">/* #define NEW_CODE */</comment>

<cpp:ifdef PREFIX:line="55" PREFIX:column="1">#<cpp:directive PREFIX:line="55" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="55" PREFIX:column="8">__unix__</name></cpp:ifdef>
<decl_stmt><decl><type><name PREFIX:line="56" PREFIX:column="1">void</name> *</type><name PREFIX:line="56" PREFIX:column="7">u8g_buf_lower_limit</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name PREFIX:line="57" PREFIX:column="1">void</name> *</type><name PREFIX:line="57" PREFIX:column="7">u8g_buf_upper_limit</name></decl>;</decl_stmt>
<cpp:endif PREFIX:line="58" PREFIX:column="1">#<cpp:directive PREFIX:line="58" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<decl_stmt><decl><type><name PREFIX:line="60" PREFIX:column="1">void</name></type> <name PREFIX:line="60" PREFIX:column="6">u8g_pb8h1_Init</name><argument_list PREFIX:line="60" PREFIX:column="20">(<argument><expr><name PREFIX:line="60" PREFIX:column="21">u8g_pb_t</name> *<name PREFIX:line="60" PREFIX:column="31">b</name></expr></argument>, <argument><expr><name PREFIX:line="60" PREFIX:column="34">void</name> *<name PREFIX:line="60" PREFIX:column="40">buf</name></expr></argument>, <argument><expr><name PREFIX:line="60" PREFIX:column="45">u8g_uint_t</name> <name PREFIX:line="60" PREFIX:column="56">width</name></expr></argument>)</argument_list> <name PREFIX:line="60" PREFIX:column="63">U8G_NOINLINE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name PREFIX:line="61" PREFIX:column="1">void</name></type> <name PREFIX:line="61" PREFIX:column="6">u8g_pb8h1_set_pixel</name><argument_list PREFIX:line="61" PREFIX:column="25">(<argument><expr><name PREFIX:line="61" PREFIX:column="26">u8g_pb_t</name> *<name PREFIX:line="61" PREFIX:column="36">b</name></expr></argument>, <argument><expr><name PREFIX:line="61" PREFIX:column="39">u8g_uint_t</name> <name PREFIX:line="61" PREFIX:column="50">x</name></expr></argument>, <argument><expr><name PREFIX:line="61" PREFIX:column="53">u8g_uint_t</name> <name PREFIX:line="61" PREFIX:column="64">y</name></expr></argument>, <argument><expr><name PREFIX:line="61" PREFIX:column="67">uint8_t</name> <name PREFIX:line="61" PREFIX:column="75">color_index</name></expr></argument>)</argument_list> <name PREFIX:line="61" PREFIX:column="88">U8G_NOINLINE</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name PREFIX:line="62" PREFIX:column="1">void</name></type> <name PREFIX:line="62" PREFIX:column="6">u8g_pb8h1_SetPixel</name><argument_list PREFIX:line="62" PREFIX:column="24">(<argument><expr><name PREFIX:line="62" PREFIX:column="25">u8g_pb_t</name> *<name PREFIX:line="62" PREFIX:column="35">b</name></expr></argument>,  <argument><expr><name PREFIX:line="62" PREFIX:column="39">u8g_dev_arg_pixel_t</name> *  <name PREFIX:line="62" PREFIX:column="62">arg_pixel</name></expr></argument>)</argument_list> <name PREFIX:line="62" PREFIX:column="73">U8G_NOINLINE</name></decl> ;</decl_stmt>
<decl_stmt><decl><type><name PREFIX:line="63" PREFIX:column="1">void</name></type> <name PREFIX:line="63" PREFIX:column="6">u8g_pb8h1_Set8PixelStd</name><argument_list PREFIX:line="63" PREFIX:column="28">(<argument><expr><name PREFIX:line="63" PREFIX:column="29">u8g_pb_t</name> *<name PREFIX:line="63" PREFIX:column="39">b</name></expr></argument>, <argument><expr><name PREFIX:line="63" PREFIX:column="42">u8g_dev_arg_pixel_t</name> *<name PREFIX:line="63" PREFIX:column="63">arg_pixel</name></expr></argument>)</argument_list> <name PREFIX:line="63" PREFIX:column="74">U8G_NOINLINE</name></decl>;</decl_stmt>
<function_decl><type><name PREFIX:line="64" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="64" PREFIX:column="9">u8g_dev_pb8h1_base_fn</name><parameter_list PREFIX:line="64" PREFIX:column="30">(<param><decl><type><name PREFIX:line="64" PREFIX:column="31">u8g_t</name> *</type><name PREFIX:line="64" PREFIX:column="38">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="64" PREFIX:column="43">u8g_dev_t</name> *</type><name PREFIX:line="64" PREFIX:column="54">dev</name></decl></param>, <param><decl><type><name PREFIX:line="64" PREFIX:column="59">uint8_t</name></type> <name PREFIX:line="64" PREFIX:column="67">msg</name></decl></param>, <param><decl><type><name PREFIX:line="64" PREFIX:column="72">void</name> *</type><name PREFIX:line="64" PREFIX:column="78">arg</name></decl></param>)</parameter_list>;</function_decl>


<cpp:ifdef PREFIX:line="67" PREFIX:column="1">#<cpp:directive PREFIX:line="67" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="67" PREFIX:column="8">NEW_CODE</name></cpp:ifdef>
<struct PREFIX:line="68" PREFIX:column="1">struct <name PREFIX:line="68" PREFIX:column="8">u8g_pb_h1_struct</name>
<block PREFIX:line="69" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="70" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="70" PREFIX:column="14">x</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="71" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="71" PREFIX:column="14">y</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="72" PREFIX:column="3">uint8_t</name> *</type><name PREFIX:line="72" PREFIX:column="12">ptr</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="73" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="73" PREFIX:column="11">mask</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="74" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="74" PREFIX:column="11">line_byte_len</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="75" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="75" PREFIX:column="11">cnt</name></decl>;</decl_stmt>
}</block>;</struct>

<decl_stmt><decl><type><specifier PREFIX:line="78" PREFIX:column="1">static</specifier> <name PREFIX:line="78" PREFIX:column="8">uint8_t</name></type> <name><name PREFIX:line="78" PREFIX:column="16">u8g_pb8h1_bitmask</name><index PREFIX:line="78" PREFIX:column="33">[<expr PREFIX:line="78" PREFIX:column="34">8</expr>]</index></name> <init PREFIX:line="78" PREFIX:column="37">= <expr><block PREFIX:line="78" PREFIX:column="39">{ <expr PREFIX:line="78" PREFIX:column="41">0x080</expr>, <expr PREFIX:line="78" PREFIX:column="48">0x040</expr>, <expr PREFIX:line="78" PREFIX:column="55">0x020</expr>, <expr PREFIX:line="78" PREFIX:column="62">0x010</expr>, <expr PREFIX:line="78" PREFIX:column="69">0x008</expr>, <expr PREFIX:line="78" PREFIX:column="76">0x004</expr>, <expr PREFIX:line="78" PREFIX:column="83">0x002</expr>, <expr PREFIX:line="78" PREFIX:column="90">0x001</expr> }</block></expr></init></decl>;</decl_stmt>

<decl_stmt><decl><type><specifier PREFIX:line="80" PREFIX:column="1">static</specifier> <name PREFIX:line="80" PREFIX:column="8">void</name></type> <name PREFIX:line="80" PREFIX:column="13">u8g_pb8h1_state_right</name><argument_list PREFIX:line="80" PREFIX:column="34">(<argument PREFIX:line="80" PREFIX:column="35">struct <expr><name PREFIX:line="80" PREFIX:column="42">u8g_pb_h1_struct</name> *<name PREFIX:line="80" PREFIX:column="60">s</name></expr></argument>)</argument_list>  <name PREFIX:line="80" PREFIX:column="64">U8G_NOINLINE</name></decl>;</decl_stmt>
<function><type><specifier PREFIX:line="81" PREFIX:column="1">static</specifier> <name PREFIX:line="81" PREFIX:column="8">void</name></type> <name PREFIX:line="81" PREFIX:column="13">u8g_pb8h1_state_right</name><parameter_list PREFIX:line="81" PREFIX:column="34">(<param><decl><type PREFIX:line="81" PREFIX:column="35">struct <name PREFIX:line="81" PREFIX:column="42">u8g_pb_h1_struct</name> *</type><name PREFIX:line="81" PREFIX:column="60">s</name></decl></param>)</parameter_list>
<block PREFIX:line="82" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="83" PREFIX:column="3">register</name> <name PREFIX:line="83" PREFIX:column="12">u8g_uint_t</name></type> <name PREFIX:line="83" PREFIX:column="23">x</name></decl>;</decl_stmt>
  <expr_stmt><expr><name PREFIX:line="84" PREFIX:column="3">x</name> = <name><name PREFIX:line="84" PREFIX:column="7">s</name>-&gt;<name PREFIX:line="84" PREFIX:column="10">x</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="85" PREFIX:column="3">x</name>++</expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="86" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="86" PREFIX:column="6">x</name></name> = <name PREFIX:line="86" PREFIX:column="10">x</name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="87" PREFIX:column="3">x</name> &amp;= 7</expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="88" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="88" PREFIX:column="6">mask</name></name> = <name><name PREFIX:line="88" PREFIX:column="13">u8g_pb8h1_bitmask</name><index PREFIX:line="88" PREFIX:column="30">[<expr><name PREFIX:line="88" PREFIX:column="31">x</name></expr>]</index></name></expr>;</expr_stmt>
  <if PREFIX:line="89" PREFIX:column="3">if <condition PREFIX:line="89" PREFIX:column="6">( <expr><name PREFIX:line="89" PREFIX:column="8">x</name> == 0</expr> )</condition><then PREFIX:line="89" PREFIX:column="16">
    <expr_stmt><expr><name><name PREFIX:line="90" PREFIX:column="5">s</name>-&gt;<name PREFIX:line="90" PREFIX:column="8">ptr</name></name>++</expr>;</expr_stmt></then></if>
}</block></function>

<function><type><specifier PREFIX:line="93" PREFIX:column="1">static</specifier> <name PREFIX:line="93" PREFIX:column="8">void</name></type> <name PREFIX:line="93" PREFIX:column="13">u8g_pb8h1_state_left</name><parameter_list PREFIX:line="93" PREFIX:column="33">(<param><decl><type PREFIX:line="93" PREFIX:column="34">struct <name PREFIX:line="93" PREFIX:column="41">u8g_pb_h1_struct</name> *</type><name PREFIX:line="93" PREFIX:column="59">s</name></decl></param>)</parameter_list>
<block PREFIX:line="94" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="95" PREFIX:column="3">register</name> <name PREFIX:line="95" PREFIX:column="12">u8g_uint_t</name></type> <name PREFIX:line="95" PREFIX:column="23">x</name></decl>;</decl_stmt>
  <expr_stmt><expr><name PREFIX:line="96" PREFIX:column="3">x</name> = <name><name PREFIX:line="96" PREFIX:column="7">s</name>-&gt;<name PREFIX:line="96" PREFIX:column="10">x</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="97" PREFIX:column="3">x</name>--</expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="98" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="98" PREFIX:column="6">x</name></name> = <name PREFIX:line="98" PREFIX:column="10">x</name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="99" PREFIX:column="3">x</name> &amp;= 7</expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="100" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="100" PREFIX:column="6">mask</name></name> = <name><name PREFIX:line="100" PREFIX:column="13">u8g_pb8h1_bitmask</name><index PREFIX:line="100" PREFIX:column="30">[<expr><name PREFIX:line="100" PREFIX:column="31">x</name></expr>]</index></name></expr>;</expr_stmt>
  <if PREFIX:line="101" PREFIX:column="3">if <condition PREFIX:line="101" PREFIX:column="6">( <expr><name PREFIX:line="101" PREFIX:column="8">x</name> == 7</expr> )</condition><then PREFIX:line="101" PREFIX:column="16">
    <expr_stmt><expr><name><name PREFIX:line="102" PREFIX:column="5">s</name>-&gt;<name PREFIX:line="102" PREFIX:column="8">ptr</name></name>--</expr>;</expr_stmt></then></if>
}</block></function>

<function><type><specifier PREFIX:line="105" PREFIX:column="1">static</specifier> <name PREFIX:line="105" PREFIX:column="8">void</name></type> <name PREFIX:line="105" PREFIX:column="13">u8g_pb8h1_state_down</name><parameter_list PREFIX:line="105" PREFIX:column="33">(<param><decl><type PREFIX:line="105" PREFIX:column="34">struct <name PREFIX:line="105" PREFIX:column="41">u8g_pb_h1_struct</name> *</type><name PREFIX:line="105" PREFIX:column="59">s</name></decl></param>)</parameter_list>
<block PREFIX:line="106" PREFIX:column="1">{
  <expr_stmt><expr><name><name PREFIX:line="107" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="107" PREFIX:column="6">y</name></name>++</expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="108" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="108" PREFIX:column="6">ptr</name></name> += <name><name PREFIX:line="108" PREFIX:column="13">s</name>-&gt;<name PREFIX:line="108" PREFIX:column="16">line_byte_len</name></name></expr>;</expr_stmt>
}</block></function>

<function><type><specifier PREFIX:line="111" PREFIX:column="1">static</specifier> <name PREFIX:line="111" PREFIX:column="8">void</name></type> <name PREFIX:line="111" PREFIX:column="13">u8g_pb8h1_state_up</name><parameter_list PREFIX:line="111" PREFIX:column="31">(<param><decl><type PREFIX:line="111" PREFIX:column="32">struct <name PREFIX:line="111" PREFIX:column="39">u8g_pb_h1_struct</name> *</type><name PREFIX:line="111" PREFIX:column="57">s</name></decl></param>)</parameter_list>
<block PREFIX:line="112" PREFIX:column="1">{
  <expr_stmt><expr><name><name PREFIX:line="113" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="113" PREFIX:column="6">y</name></name>--</expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="114" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="114" PREFIX:column="6">ptr</name></name> -= <name><name PREFIX:line="114" PREFIX:column="13">s</name>-&gt;<name PREFIX:line="114" PREFIX:column="16">line_byte_len</name></name></expr>;</expr_stmt>
}</block></function>

<decl_stmt><decl><type><specifier PREFIX:line="117" PREFIX:column="1">static</specifier> <name PREFIX:line="117" PREFIX:column="8">void</name></type> <name PREFIX:line="117" PREFIX:column="13">u8g_pb8h1_state_init</name><argument_list PREFIX:line="117" PREFIX:column="33">(<argument PREFIX:line="117" PREFIX:column="34">struct <expr><name PREFIX:line="117" PREFIX:column="41">u8g_pb_h1_struct</name> *<name PREFIX:line="117" PREFIX:column="59">s</name></expr></argument>, <argument><expr><name PREFIX:line="117" PREFIX:column="62">u8g_pb_t</name> *<name PREFIX:line="117" PREFIX:column="72">b</name></expr></argument>, <argument><expr><name PREFIX:line="117" PREFIX:column="75">u8g_uint_t</name> <name PREFIX:line="117" PREFIX:column="86">x</name></expr></argument>, <argument><expr><name PREFIX:line="117" PREFIX:column="89">u8g_uint_t</name> <name PREFIX:line="117" PREFIX:column="100">y</name></expr></argument>)</argument_list> <name PREFIX:line="117" PREFIX:column="103">U8G_NOINLINE</name></decl>;</decl_stmt>
<function><type><specifier PREFIX:line="118" PREFIX:column="1">static</specifier> <name PREFIX:line="118" PREFIX:column="8">void</name></type> <name PREFIX:line="118" PREFIX:column="13">u8g_pb8h1_state_init</name><parameter_list PREFIX:line="118" PREFIX:column="33">(<param><decl><type PREFIX:line="118" PREFIX:column="34">struct <name PREFIX:line="118" PREFIX:column="41">u8g_pb_h1_struct</name> *</type><name PREFIX:line="118" PREFIX:column="59">s</name></decl></param>, <param><decl><type><name PREFIX:line="118" PREFIX:column="62">u8g_pb_t</name> *</type><name PREFIX:line="118" PREFIX:column="72">b</name></decl></param>, <param><decl><type><name PREFIX:line="118" PREFIX:column="75">u8g_uint_t</name></type> <name PREFIX:line="118" PREFIX:column="86">x</name></decl></param>, <param><decl><type><name PREFIX:line="118" PREFIX:column="89">u8g_uint_t</name></type> <name PREFIX:line="118" PREFIX:column="100">y</name></decl></param>)</parameter_list>
<block PREFIX:line="119" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="120" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="120" PREFIX:column="14">tmp</name></decl>;</decl_stmt>
  
  <decl_stmt><decl><type><name PREFIX:line="122" PREFIX:column="3">uint8_t</name> *</type><name PREFIX:line="122" PREFIX:column="12">ptr</name> <init PREFIX:line="122" PREFIX:column="16">= <expr><name><name PREFIX:line="122" PREFIX:column="18">b</name>-&gt;<name PREFIX:line="122" PREFIX:column="21">buf</name></name></expr></init></decl>;</decl_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="124" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="124" PREFIX:column="6">x</name></name> = <name PREFIX:line="124" PREFIX:column="10">x</name></expr>;</expr_stmt>  
  <expr_stmt><expr><name><name PREFIX:line="125" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="125" PREFIX:column="6">y</name></name> = <name PREFIX:line="125" PREFIX:column="10">y</name></expr>;</expr_stmt>
  
  <expr_stmt><expr><name PREFIX:line="127" PREFIX:column="3">y</name> -= <name><name PREFIX:line="127" PREFIX:column="8">b</name>-&gt;<name PREFIX:line="127" PREFIX:column="11">p</name>.<name PREFIX:line="127" PREFIX:column="13">page_y0</name></name></expr>;</expr_stmt>
  
  <expr_stmt><expr><name PREFIX:line="129" PREFIX:column="3">tmp</name> = <name><name PREFIX:line="129" PREFIX:column="9">b</name>-&gt;<name PREFIX:line="129" PREFIX:column="12">width</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="130" PREFIX:column="3">tmp</name> &gt;&gt;= 3</expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="131" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="131" PREFIX:column="6">line_byte_len</name></name> = <name PREFIX:line="131" PREFIX:column="22">tmp</name></expr>;</expr_stmt>
  
  <comment type="block" PREFIX:line="133" PREFIX:column="3">/* assume negative y values, can be down to -7, subtract this from the pointer and add correction of 8 to y */</comment>
  <expr_stmt><expr><name PREFIX:line="134" PREFIX:column="3">ptr</name> -= <name PREFIX:line="134" PREFIX:column="10">tmp</name>*8</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="135" PREFIX:column="3">y</name>+=8</expr>;</expr_stmt>
  <comment type="block" PREFIX:line="136" PREFIX:column="3">/* it is important that the result of tmp*y can be 16 bit value also for 8 bit mode */</comment>
  <expr_stmt><expr><name PREFIX:line="137" PREFIX:column="3">ptr</name> += <name PREFIX:line="137" PREFIX:column="10">tmp</name>*<name PREFIX:line="137" PREFIX:column="14">y</name></expr>;</expr_stmt>
  
  <expr_stmt><expr><name><name PREFIX:line="139" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="139" PREFIX:column="6">mask</name></name> = <name><name PREFIX:line="139" PREFIX:column="13">u8g_pb8h1_bitmask</name><index PREFIX:line="139" PREFIX:column="30">[<expr><name PREFIX:line="139" PREFIX:column="31">x</name> &amp; 7</expr>]</index></name></expr>;</expr_stmt>
  
  <comment type="block" PREFIX:line="141" PREFIX:column="3">/* assume negative x values (to -7), subtract 8 pixel from the pointer and add 8 to x */</comment>
  <expr_stmt><expr><name PREFIX:line="142" PREFIX:column="3">ptr</name>--</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="143" PREFIX:column="3">x</name> += 8</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="144" PREFIX:column="3">x</name> &gt;&gt;= 3</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="145" PREFIX:column="3">ptr</name> += <name PREFIX:line="145" PREFIX:column="10">x</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="146" PREFIX:column="3">s</name>-&gt;<name PREFIX:line="146" PREFIX:column="6">ptr</name></name> = <name PREFIX:line="146" PREFIX:column="12">ptr</name></expr>;</expr_stmt>
}</block></function>

<decl_stmt><decl><type><specifier PREFIX:line="149" PREFIX:column="1">static</specifier> <name PREFIX:line="149" PREFIX:column="8">void</name></type> <name PREFIX:line="149" PREFIX:column="13">u8g_pb8h1_state_set_pixel</name><argument_list PREFIX:line="149" PREFIX:column="38">(<argument PREFIX:line="149" PREFIX:column="39">struct <expr><name PREFIX:line="149" PREFIX:column="46">u8g_pb_h1_struct</name> *<name PREFIX:line="149" PREFIX:column="64">s</name></expr></argument>, <argument><expr><name PREFIX:line="149" PREFIX:column="67">uint8_t</name> <name PREFIX:line="149" PREFIX:column="75">color_index</name></expr></argument>)</argument_list> <name PREFIX:line="149" PREFIX:column="88">U8G_NOINLINE</name></decl>;</decl_stmt>
<function><type><specifier PREFIX:line="150" PREFIX:column="1">static</specifier> <name PREFIX:line="150" PREFIX:column="8">void</name></type> <name PREFIX:line="150" PREFIX:column="13">u8g_pb8h1_state_set_pixel</name><parameter_list PREFIX:line="150" PREFIX:column="38">(<param><decl><type PREFIX:line="150" PREFIX:column="39">struct <name PREFIX:line="150" PREFIX:column="46">u8g_pb_h1_struct</name> *</type><name PREFIX:line="150" PREFIX:column="64">s</name></decl></param>, <param><decl><type><name PREFIX:line="150" PREFIX:column="67">uint8_t</name></type> <name PREFIX:line="150" PREFIX:column="75">color_index</name></decl></param>)</parameter_list>
<block PREFIX:line="151" PREFIX:column="1">{
  
<cpp:ifdef PREFIX:line="153" PREFIX:column="1">#<cpp:directive PREFIX:line="153" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="153" PREFIX:column="8">__unix__</name></cpp:ifdef>
  <expr_stmt><expr><call><name PREFIX:line="154" PREFIX:column="3">assert</name><argument_list PREFIX:line="154" PREFIX:column="9">( <argument><expr><name><name PREFIX:line="154" PREFIX:column="11">s</name>-&gt;<name PREFIX:line="154" PREFIX:column="14">ptr</name></name> &gt;= <name PREFIX:line="154" PREFIX:column="21">u8g_buf_lower_limit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="155" PREFIX:column="3">assert</name><argument_list PREFIX:line="155" PREFIX:column="9">( <argument><expr><name><name PREFIX:line="155" PREFIX:column="11">s</name>-&gt;<name PREFIX:line="155" PREFIX:column="14">ptr</name></name> &lt; <name PREFIX:line="155" PREFIX:column="20">u8g_buf_upper_limit</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>
<cpp:endif PREFIX:line="156" PREFIX:column="1">#<cpp:directive PREFIX:line="156" PREFIX:column="2">endif</cpp:directive></cpp:endif>
  
  <if PREFIX:line="158" PREFIX:column="3">if <condition PREFIX:line="158" PREFIX:column="6">( <expr><name PREFIX:line="158" PREFIX:column="8">color_index</name></expr> )</condition><then PREFIX:line="158" PREFIX:column="21">
  <block PREFIX:line="159" PREFIX:column="3">{
    <expr_stmt><expr PREFIX:line="160" PREFIX:column="5">*<name><name PREFIX:line="160" PREFIX:column="6">s</name>-&gt;<name PREFIX:line="160" PREFIX:column="9">ptr</name></name> |= <name><name PREFIX:line="160" PREFIX:column="16">s</name>-&gt;<name PREFIX:line="160" PREFIX:column="19">mask</name></name></expr>;</expr_stmt>
  }</block></then>
  <else PREFIX:line="162" PREFIX:column="3">else
  <block PREFIX:line="163" PREFIX:column="3">{
    <decl_stmt><decl><type><name PREFIX:line="164" PREFIX:column="5">uint8_t</name></type> <name PREFIX:line="164" PREFIX:column="13">mask</name> <init PREFIX:line="164" PREFIX:column="18">= <expr><name><name PREFIX:line="164" PREFIX:column="20">s</name>-&gt;<name PREFIX:line="164" PREFIX:column="23">mask</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt><expr><name PREFIX:line="165" PREFIX:column="5">mask</name> ^=0xff</expr>;</expr_stmt>
    <expr_stmt><expr PREFIX:line="166" PREFIX:column="5">*<name><name PREFIX:line="166" PREFIX:column="6">s</name>-&gt;<name PREFIX:line="166" PREFIX:column="9">ptr</name></name> &amp;= <name PREFIX:line="166" PREFIX:column="16">mask</name></expr>;</expr_stmt>
  }</block></else></if>  
}</block></function>
<cpp:endif PREFIX:line="169" PREFIX:column="1">#<cpp:directive PREFIX:line="169" PREFIX:column="2">endif</cpp:directive></cpp:endif>


<function><type><name PREFIX:line="172" PREFIX:column="1">void</name></type> <name PREFIX:line="172" PREFIX:column="6">u8g_pb8h1_Init</name><parameter_list PREFIX:line="172" PREFIX:column="20">(<param><decl><type><name PREFIX:line="172" PREFIX:column="21">u8g_pb_t</name> *</type><name PREFIX:line="172" PREFIX:column="31">b</name></decl></param>, <param><decl><type><name PREFIX:line="172" PREFIX:column="34">void</name> *</type><name PREFIX:line="172" PREFIX:column="40">buf</name></decl></param>, <param><decl><type><name PREFIX:line="172" PREFIX:column="45">u8g_uint_t</name></type> <name PREFIX:line="172" PREFIX:column="56">width</name></decl></param>)</parameter_list>
<block PREFIX:line="173" PREFIX:column="1">{
  <expr_stmt><expr><name><name PREFIX:line="174" PREFIX:column="3">b</name>-&gt;<name PREFIX:line="174" PREFIX:column="6">buf</name></name> = <name PREFIX:line="174" PREFIX:column="12">buf</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="175" PREFIX:column="3">b</name>-&gt;<name PREFIX:line="175" PREFIX:column="6">width</name></name> = <name PREFIX:line="175" PREFIX:column="14">width</name></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="176" PREFIX:column="3">u8g_pb_Clear</name><argument_list PREFIX:line="176" PREFIX:column="15">(<argument><expr><name PREFIX:line="176" PREFIX:column="16">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<comment type="block" PREFIX:line="179" PREFIX:column="1">/* limitation: total buffer must not exceed 256 bytes */</comment>
<function><type><name PREFIX:line="180" PREFIX:column="1">void</name></type> <name PREFIX:line="180" PREFIX:column="6">u8g_pb8h1_set_pixel</name><parameter_list PREFIX:line="180" PREFIX:column="25">(<param><decl><type><name PREFIX:line="180" PREFIX:column="26">u8g_pb_t</name> *</type><name PREFIX:line="180" PREFIX:column="36">b</name></decl></param>, <param><decl><type><name PREFIX:line="180" PREFIX:column="39">u8g_uint_t</name></type> <name PREFIX:line="180" PREFIX:column="50">x</name></decl></param>, <param><decl><type><name PREFIX:line="180" PREFIX:column="53">u8g_uint_t</name></type> <name PREFIX:line="180" PREFIX:column="64">y</name></decl></param>, <param><decl><type><name PREFIX:line="180" PREFIX:column="67">uint8_t</name></type> <name PREFIX:line="180" PREFIX:column="75">color_index</name></decl></param>)</parameter_list>
<block PREFIX:line="181" PREFIX:column="1">{
<cpp:ifdef PREFIX:line="182" PREFIX:column="1">#<cpp:directive PREFIX:line="182" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="182" PREFIX:column="8">NEW_CODE</name></cpp:ifdef>
  <decl_stmt><decl><type PREFIX:line="183" PREFIX:column="3">struct <name PREFIX:line="183" PREFIX:column="10">u8g_pb_h1_struct</name></type> <name PREFIX:line="183" PREFIX:column="27">s</name></decl>;</decl_stmt>
  <expr_stmt><expr><call><name PREFIX:line="184" PREFIX:column="3">u8g_pb8h1_state_init</name><argument_list PREFIX:line="184" PREFIX:column="23">(<argument><expr PREFIX:line="184" PREFIX:column="24">&amp;<name PREFIX:line="184" PREFIX:column="25">s</name></expr></argument>, <argument><expr><name PREFIX:line="184" PREFIX:column="28">b</name></expr></argument>, <argument><expr><name PREFIX:line="184" PREFIX:column="31">x</name></expr></argument>, <argument><expr><name PREFIX:line="184" PREFIX:column="34">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><call><name PREFIX:line="185" PREFIX:column="3">u8g_pb8h1_state_set_pixel</name><argument_list PREFIX:line="185" PREFIX:column="28">(<argument><expr PREFIX:line="185" PREFIX:column="29">&amp;<name PREFIX:line="185" PREFIX:column="30">s</name></expr></argument>, <argument><expr><name PREFIX:line="185" PREFIX:column="33">color_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<comment type="line" PREFIX:line="187" PREFIX:column="1">//  u8g_pb8h1_state_up(&amp;s);</comment>
<comment type="line" PREFIX:line="188" PREFIX:column="1">//  if ( s.y &gt; b-&gt;p.page_y1 )</comment>
<comment type="line" PREFIX:line="189" PREFIX:column="1">//    return;</comment>
<comment type="line" PREFIX:line="190" PREFIX:column="1">//  if ( s.x &gt; b-&gt;width )</comment>
<comment type="line" PREFIX:line="191" PREFIX:column="1">//    return;</comment>
<comment type="line" PREFIX:line="192" PREFIX:column="1">//  u8g_pb8h1_state_set_pixel(&amp;s, color_index);</comment>
<cpp:else PREFIX:line="193" PREFIX:column="1">#<cpp:directive PREFIX:line="193" PREFIX:column="2">else</cpp:directive></cpp:else>
  <decl_stmt><decl><type><name PREFIX:line="194" PREFIX:column="3">register</name> <name PREFIX:line="194" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="194" PREFIX:column="20">mask</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="195" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="195" PREFIX:column="14">tmp</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="196" PREFIX:column="3">uint8_t</name> *</type><name PREFIX:line="196" PREFIX:column="12">ptr</name> <init PREFIX:line="196" PREFIX:column="16">= <expr><name><name PREFIX:line="196" PREFIX:column="18">b</name>-&gt;<name PREFIX:line="196" PREFIX:column="21">buf</name></name></expr></init></decl>;</decl_stmt>
  
  <expr_stmt><expr><name PREFIX:line="198" PREFIX:column="3">y</name> -= <name><name PREFIX:line="198" PREFIX:column="8">b</name>-&gt;<name PREFIX:line="198" PREFIX:column="11">p</name>.<name PREFIX:line="198" PREFIX:column="13">page_y0</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="199" PREFIX:column="3">tmp</name> = <name><name PREFIX:line="199" PREFIX:column="9">b</name>-&gt;<name PREFIX:line="199" PREFIX:column="12">width</name></name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="200" PREFIX:column="3">tmp</name> &gt;&gt;= 3</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="201" PREFIX:column="3">tmp</name> *= (<name PREFIX:line="201" PREFIX:column="11">uint8_t</name>)<name PREFIX:line="201" PREFIX:column="19">y</name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="202" PREFIX:column="3">ptr</name> += <name PREFIX:line="202" PREFIX:column="10">tmp</name></expr>;</expr_stmt>
  
  <expr_stmt><expr><name PREFIX:line="204" PREFIX:column="3">mask</name> = 0x080</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="205" PREFIX:column="3">mask</name> &gt;&gt;= <name PREFIX:line="205" PREFIX:column="12">x</name> &amp; 7</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="206" PREFIX:column="3">x</name> &gt;&gt;= 3</expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="207" PREFIX:column="3">ptr</name> += <name PREFIX:line="207" PREFIX:column="10">x</name></expr>;</expr_stmt>
  <if PREFIX:line="208" PREFIX:column="3">if <condition PREFIX:line="208" PREFIX:column="6">( <expr><name PREFIX:line="208" PREFIX:column="8">color_index</name></expr> )</condition><then PREFIX:line="208" PREFIX:column="21">
  <block PREFIX:line="209" PREFIX:column="3">{
    <expr_stmt><expr PREFIX:line="210" PREFIX:column="5">*<name PREFIX:line="210" PREFIX:column="6">ptr</name> |= <name PREFIX:line="210" PREFIX:column="13">mask</name></expr>;</expr_stmt>
  }</block></then>
  <else PREFIX:line="212" PREFIX:column="3">else
  <block PREFIX:line="213" PREFIX:column="3">{
    <expr_stmt><expr><name PREFIX:line="214" PREFIX:column="5">mask</name> ^=0xff</expr>;</expr_stmt>
    <expr_stmt><expr PREFIX:line="215" PREFIX:column="5">*<name PREFIX:line="215" PREFIX:column="6">ptr</name> &amp;= <name PREFIX:line="215" PREFIX:column="13">mask</name></expr>;</expr_stmt>
  }</block></else></if>
<cpp:endif PREFIX:line="217" PREFIX:column="1">#<cpp:directive PREFIX:line="217" PREFIX:column="2">endif</cpp:directive></cpp:endif>
}</block></function>


<function><type><name PREFIX:line="221" PREFIX:column="1">void</name></type> <name PREFIX:line="221" PREFIX:column="6">u8g_pb8h1_SetPixel</name><parameter_list PREFIX:line="221" PREFIX:column="24">(<param><decl><type><name PREFIX:line="221" PREFIX:column="25">u8g_pb_t</name> *</type><name PREFIX:line="221" PREFIX:column="35">b</name></decl></param>,  <param><decl><type><name PREFIX:line="221" PREFIX:column="39">u8g_dev_arg_pixel_t</name> *</type>  <name PREFIX:line="221" PREFIX:column="62">arg_pixel</name></decl></param>)</parameter_list>
<block PREFIX:line="222" PREFIX:column="1">{
  <if PREFIX:line="223" PREFIX:column="3">if <condition PREFIX:line="223" PREFIX:column="6">( <expr><name><name PREFIX:line="223" PREFIX:column="8">arg_pixel</name>-&gt;<name PREFIX:line="223" PREFIX:column="19">y</name></name> &lt; <name><name PREFIX:line="223" PREFIX:column="23">b</name>-&gt;<name PREFIX:line="223" PREFIX:column="26">p</name>.<name PREFIX:line="223" PREFIX:column="28">page_y0</name></name></expr> )</condition><then PREFIX:line="223" PREFIX:column="37">
    <return PREFIX:line="224" PREFIX:column="5">return;</return></then></if>
  <if PREFIX:line="225" PREFIX:column="3">if <condition PREFIX:line="225" PREFIX:column="6">( <expr><name><name PREFIX:line="225" PREFIX:column="8">arg_pixel</name>-&gt;<name PREFIX:line="225" PREFIX:column="19">y</name></name> &gt; <name><name PREFIX:line="225" PREFIX:column="23">b</name>-&gt;<name PREFIX:line="225" PREFIX:column="26">p</name>.<name PREFIX:line="225" PREFIX:column="28">page_y1</name></name></expr> )</condition><then PREFIX:line="225" PREFIX:column="37">
    <return PREFIX:line="226" PREFIX:column="5">return;</return></then></if>
  <if PREFIX:line="227" PREFIX:column="3">if <condition PREFIX:line="227" PREFIX:column="6">( <expr><name><name PREFIX:line="227" PREFIX:column="8">arg_pixel</name>-&gt;<name PREFIX:line="227" PREFIX:column="19">x</name></name> &gt;= <name><name PREFIX:line="227" PREFIX:column="24">b</name>-&gt;<name PREFIX:line="227" PREFIX:column="27">width</name></name></expr> )</condition><then PREFIX:line="227" PREFIX:column="34">
    <return PREFIX:line="228" PREFIX:column="5">return;</return></then></if>
  <expr_stmt><expr><call><name PREFIX:line="229" PREFIX:column="3">u8g_pb8h1_set_pixel</name><argument_list PREFIX:line="229" PREFIX:column="22">(<argument><expr><name PREFIX:line="229" PREFIX:column="23">b</name></expr></argument>, <argument><expr><name><name PREFIX:line="229" PREFIX:column="26">arg_pixel</name>-&gt;<name PREFIX:line="229" PREFIX:column="37">x</name></name></expr></argument>, <argument><expr><name><name PREFIX:line="229" PREFIX:column="40">arg_pixel</name>-&gt;<name PREFIX:line="229" PREFIX:column="51">y</name></name></expr></argument>, <argument><expr><name><name PREFIX:line="229" PREFIX:column="54">arg_pixel</name>-&gt;<name PREFIX:line="229" PREFIX:column="65">color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
}</block></function>

<function><type><name PREFIX:line="232" PREFIX:column="1">void</name></type> <name PREFIX:line="232" PREFIX:column="6">u8g_pb8h1_Set8PixelStd</name><parameter_list PREFIX:line="232" PREFIX:column="28">(<param><decl><type><name PREFIX:line="232" PREFIX:column="29">u8g_pb_t</name> *</type><name PREFIX:line="232" PREFIX:column="39">b</name></decl></param>, <param><decl><type><name PREFIX:line="232" PREFIX:column="42">u8g_dev_arg_pixel_t</name> *</type><name PREFIX:line="232" PREFIX:column="63">arg_pixel</name></decl></param>)</parameter_list>
<block PREFIX:line="233" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="234" PREFIX:column="3">register</name> <name PREFIX:line="234" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="234" PREFIX:column="20">pixel</name> <init PREFIX:line="234" PREFIX:column="26">= <expr><name><name PREFIX:line="234" PREFIX:column="28">arg_pixel</name>-&gt;<name PREFIX:line="234" PREFIX:column="39">pixel</name></name></expr></init></decl>;</decl_stmt>
  <do PREFIX:line="235" PREFIX:column="3">do
  <block PREFIX:line="236" PREFIX:column="3">{
    <if PREFIX:line="237" PREFIX:column="5">if <condition PREFIX:line="237" PREFIX:column="8">( <expr><name PREFIX:line="237" PREFIX:column="10">pixel</name> &amp; 128</expr> )</condition><then PREFIX:line="237" PREFIX:column="23">
    <block PREFIX:line="238" PREFIX:column="5">{
      <expr_stmt><expr><call><name PREFIX:line="239" PREFIX:column="7">u8g_pb8h1_SetPixel</name><argument_list PREFIX:line="239" PREFIX:column="25">(<argument><expr><name PREFIX:line="239" PREFIX:column="26">b</name></expr></argument>, <argument><expr><name PREFIX:line="239" PREFIX:column="29">arg_pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    }</block></then></if>
    <switch PREFIX:line="241" PREFIX:column="5">switch<condition PREFIX:line="241" PREFIX:column="11">( <expr><name><name PREFIX:line="241" PREFIX:column="13">arg_pixel</name>-&gt;<name PREFIX:line="241" PREFIX:column="24">dir</name></name></expr> )</condition>
    <block PREFIX:line="242" PREFIX:column="5">{
      <case PREFIX:line="243" PREFIX:column="7">case <expr PREFIX:line="243" PREFIX:column="12">0</expr>: <expr_stmt><expr><name><name PREFIX:line="243" PREFIX:column="15">arg_pixel</name>-&gt;<name PREFIX:line="243" PREFIX:column="26">x</name></name>++</expr>;</expr_stmt> <break PREFIX:line="243" PREFIX:column="31">break;</break>
      </case><case PREFIX:line="244" PREFIX:column="7">case <expr PREFIX:line="244" PREFIX:column="12">1</expr>: <expr_stmt><expr><name><name PREFIX:line="244" PREFIX:column="15">arg_pixel</name>-&gt;<name PREFIX:line="244" PREFIX:column="26">y</name></name>++</expr>;</expr_stmt> <break PREFIX:line="244" PREFIX:column="31">break;</break>
      </case><case PREFIX:line="245" PREFIX:column="7">case <expr PREFIX:line="245" PREFIX:column="12">2</expr>: <expr_stmt><expr><name><name PREFIX:line="245" PREFIX:column="15">arg_pixel</name>-&gt;<name PREFIX:line="245" PREFIX:column="26">x</name></name>--</expr>;</expr_stmt> <break PREFIX:line="245" PREFIX:column="31">break;</break>
      </case><case PREFIX:line="246" PREFIX:column="7">case <expr PREFIX:line="246" PREFIX:column="12">3</expr>: <expr_stmt><expr><name><name PREFIX:line="246" PREFIX:column="15">arg_pixel</name>-&gt;<name PREFIX:line="246" PREFIX:column="26">y</name></name>--</expr>;</expr_stmt> <break PREFIX:line="246" PREFIX:column="31">break;</break>
    </case>}</block></switch>
    <expr_stmt><expr><name PREFIX:line="248" PREFIX:column="5">pixel</name> &lt;&lt;= 1</expr>;</expr_stmt>
  }</block> while<condition PREFIX:line="249" PREFIX:column="10">( <expr><name PREFIX:line="249" PREFIX:column="12">pixel</name> != 0</expr>  )</condition>;</do>
}</block></function>

<function><type><name PREFIX:line="252" PREFIX:column="1">void</name></type> <name PREFIX:line="252" PREFIX:column="6">u8g_pb8h1_Set8PixelOpt2</name><parameter_list PREFIX:line="252" PREFIX:column="29">(<param><decl><type><name PREFIX:line="252" PREFIX:column="30">u8g_pb_t</name> *</type><name PREFIX:line="252" PREFIX:column="40">b</name></decl></param>, <param><decl><type><name PREFIX:line="252" PREFIX:column="43">u8g_dev_arg_pixel_t</name> *</type><name PREFIX:line="252" PREFIX:column="64">arg_pixel</name></decl></param>)</parameter_list>
<block PREFIX:line="253" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="254" PREFIX:column="3">register</name> <name PREFIX:line="254" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="254" PREFIX:column="20">pixel</name> <init PREFIX:line="254" PREFIX:column="26">= <expr><name><name PREFIX:line="254" PREFIX:column="28">arg_pixel</name>-&gt;<name PREFIX:line="254" PREFIX:column="39">pixel</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="255" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="255" PREFIX:column="14">dx</name> <init PREFIX:line="255" PREFIX:column="17">= <expr PREFIX:line="255" PREFIX:column="19">0</expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="256" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="256" PREFIX:column="14">dy</name> <init PREFIX:line="256" PREFIX:column="17">= <expr PREFIX:line="256" PREFIX:column="19">0</expr></init></decl>;</decl_stmt>
  
  <switch PREFIX:line="258" PREFIX:column="3">switch<condition PREFIX:line="258" PREFIX:column="9">( <expr><name><name PREFIX:line="258" PREFIX:column="11">arg_pixel</name>-&gt;<name PREFIX:line="258" PREFIX:column="22">dir</name></name></expr> )</condition>
  <block PREFIX:line="259" PREFIX:column="3">{
    <case PREFIX:line="260" PREFIX:column="5">case <expr PREFIX:line="260" PREFIX:column="10">0</expr>: <expr_stmt><expr><name PREFIX:line="260" PREFIX:column="13">dx</name>++</expr>;</expr_stmt> <break PREFIX:line="260" PREFIX:column="19">break;</break>
    </case><case PREFIX:line="261" PREFIX:column="5">case <expr PREFIX:line="261" PREFIX:column="10">1</expr>: <expr_stmt><expr><name PREFIX:line="261" PREFIX:column="13">dy</name>++</expr>;</expr_stmt> <break PREFIX:line="261" PREFIX:column="19">break;</break>
    </case><case PREFIX:line="262" PREFIX:column="5">case <expr PREFIX:line="262" PREFIX:column="10">2</expr>: <expr_stmt><expr><name PREFIX:line="262" PREFIX:column="13">dx</name>--</expr>;</expr_stmt> <break PREFIX:line="262" PREFIX:column="19">break;</break>
    </case><case PREFIX:line="263" PREFIX:column="5">case <expr PREFIX:line="263" PREFIX:column="10">3</expr>: <expr_stmt><expr><name PREFIX:line="263" PREFIX:column="13">dy</name>--</expr>;</expr_stmt> <break PREFIX:line="263" PREFIX:column="19">break;</break>
  </case>}</block></switch>
  
  <do PREFIX:line="266" PREFIX:column="3">do
  <block PREFIX:line="267" PREFIX:column="3">{
    <if PREFIX:line="268" PREFIX:column="5">if <condition PREFIX:line="268" PREFIX:column="8">( <expr><name PREFIX:line="268" PREFIX:column="10">pixel</name> &amp; 128</expr> )</condition><then PREFIX:line="268" PREFIX:column="23">
      <expr_stmt><expr><call><name PREFIX:line="269" PREFIX:column="7">u8g_pb8h1_SetPixel</name><argument_list PREFIX:line="269" PREFIX:column="25">(<argument><expr><name PREFIX:line="269" PREFIX:column="26">b</name></expr></argument>, <argument><expr><name PREFIX:line="269" PREFIX:column="29">arg_pixel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
    <expr_stmt><expr><name><name PREFIX:line="270" PREFIX:column="5">arg_pixel</name>-&gt;<name PREFIX:line="270" PREFIX:column="16">x</name></name> += <name PREFIX:line="270" PREFIX:column="21">dx</name></expr>;</expr_stmt>
    <expr_stmt><expr><name><name PREFIX:line="271" PREFIX:column="5">arg_pixel</name>-&gt;<name PREFIX:line="271" PREFIX:column="16">y</name></name> += <name PREFIX:line="271" PREFIX:column="21">dy</name></expr>;</expr_stmt>
    <expr_stmt><expr><name PREFIX:line="272" PREFIX:column="5">pixel</name> &lt;&lt;= 1</expr>;</expr_stmt>
  }</block> while<condition PREFIX:line="273" PREFIX:column="10">( <expr><name PREFIX:line="273" PREFIX:column="12">pixel</name> != 0</expr>  )</condition>;</do>  
}</block></function>

<cpp:ifdef PREFIX:line="276" PREFIX:column="1">#<cpp:directive PREFIX:line="276" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="276" PREFIX:column="8">NEW_CODE</name></cpp:ifdef>
<function><type><specifier PREFIX:line="277" PREFIX:column="1">static</specifier> <name PREFIX:line="277" PREFIX:column="8">void</name></type> <name PREFIX:line="277" PREFIX:column="13">u8g_pb8h1_Set8PixelState</name><parameter_list PREFIX:line="277" PREFIX:column="37">(<param><decl><type><name PREFIX:line="277" PREFIX:column="38">u8g_pb_t</name> *</type><name PREFIX:line="277" PREFIX:column="48">b</name></decl></param>, <param><decl><type><name PREFIX:line="277" PREFIX:column="51">u8g_dev_arg_pixel_t</name> *</type><name PREFIX:line="277" PREFIX:column="72">arg_pixel</name></decl></param>)</parameter_list>
<block PREFIX:line="278" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="279" PREFIX:column="3">register</name> <name PREFIX:line="279" PREFIX:column="12">uint8_t</name></type> <name PREFIX:line="279" PREFIX:column="20">pixel</name> <init PREFIX:line="279" PREFIX:column="26">= <expr><name><name PREFIX:line="279" PREFIX:column="28">arg_pixel</name>-&gt;<name PREFIX:line="279" PREFIX:column="39">pixel</name></name></expr></init></decl>;</decl_stmt>
  <decl_stmt><decl><type PREFIX:line="280" PREFIX:column="3">struct <name PREFIX:line="280" PREFIX:column="10">u8g_pb_h1_struct</name></type> <name PREFIX:line="280" PREFIX:column="27">s</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="281" PREFIX:column="3">uint8_t</name></type> <name PREFIX:line="281" PREFIX:column="11">cnt</name></decl>;</decl_stmt>
  <expr_stmt><expr><call><name PREFIX:line="282" PREFIX:column="3">u8g_pb8h1_state_init</name><argument_list PREFIX:line="282" PREFIX:column="23">(<argument><expr PREFIX:line="282" PREFIX:column="24">&amp;<name PREFIX:line="282" PREFIX:column="25">s</name></expr></argument>, <argument><expr><name PREFIX:line="282" PREFIX:column="28">b</name></expr></argument>, <argument><expr><name><name PREFIX:line="282" PREFIX:column="31">arg_pixel</name>-&gt;<name PREFIX:line="282" PREFIX:column="42">x</name></name></expr></argument>, <argument><expr><name><name PREFIX:line="282" PREFIX:column="45">arg_pixel</name>-&gt;<name PREFIX:line="282" PREFIX:column="56">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="283" PREFIX:column="3">cnt</name> = 8</expr>;</expr_stmt>
  <switch PREFIX:line="284" PREFIX:column="3">switch<condition PREFIX:line="284" PREFIX:column="9">( <expr><name><name PREFIX:line="284" PREFIX:column="11">arg_pixel</name>-&gt;<name PREFIX:line="284" PREFIX:column="22">dir</name></name></expr> )</condition>
  <block PREFIX:line="285" PREFIX:column="3">{
    <case PREFIX:line="286" PREFIX:column="5">case <expr PREFIX:line="286" PREFIX:column="10">0</expr>: 
      <do PREFIX:line="287" PREFIX:column="7">do
      <block PREFIX:line="288" PREFIX:column="7">{
	<if PREFIX:line="289" PREFIX:column="9">if <condition PREFIX:line="289" PREFIX:column="12">( <expr><name><name PREFIX:line="289" PREFIX:column="14">s</name>.<name PREFIX:line="289" PREFIX:column="16">x</name></name> &lt; <name><name PREFIX:line="289" PREFIX:column="20">b</name>-&gt;<name PREFIX:line="289" PREFIX:column="23">width</name></name></expr> )</condition><then PREFIX:line="289" PREFIX:column="30">
	  <if PREFIX:line="290" PREFIX:column="11">if <condition PREFIX:line="290" PREFIX:column="14">( <expr><name PREFIX:line="290" PREFIX:column="16">pixel</name> &amp; 128</expr> )</condition><then PREFIX:line="290" PREFIX:column="29">
	    <expr_stmt><expr><call><name PREFIX:line="291" PREFIX:column="13">u8g_pb8h1_state_set_pixel</name><argument_list PREFIX:line="291" PREFIX:column="38">(<argument><expr PREFIX:line="291" PREFIX:column="39">&amp;<name PREFIX:line="291" PREFIX:column="40">s</name></expr></argument>, <argument><expr><name><name PREFIX:line="291" PREFIX:column="43">arg_pixel</name>-&gt;<name PREFIX:line="291" PREFIX:column="54">color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></then></if>
	<expr_stmt><expr><call><name PREFIX:line="292" PREFIX:column="9">u8g_pb8h1_state_right</name><argument_list PREFIX:line="292" PREFIX:column="30">(<argument><expr PREFIX:line="292" PREFIX:column="31">&amp;<name PREFIX:line="292" PREFIX:column="32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	<expr_stmt><expr><name PREFIX:line="293" PREFIX:column="9">pixel</name> &lt;&lt;= 1</expr>;</expr_stmt>
	<expr_stmt><expr><name PREFIX:line="294" PREFIX:column="9">cnt</name>--</expr>;</expr_stmt>
      }</block> while<condition PREFIX:line="295" PREFIX:column="14">( <expr><name PREFIX:line="295" PREFIX:column="16">cnt</name> &gt; 0 &amp;&amp; <name PREFIX:line="295" PREFIX:column="27">pixel</name> != 0</expr>  )</condition>;</do>
      <break PREFIX:line="296" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="297" PREFIX:column="5">case <expr PREFIX:line="297" PREFIX:column="10">1</expr>: 
      <do PREFIX:line="298" PREFIX:column="7">do
      <block PREFIX:line="299" PREFIX:column="7">{
	<if PREFIX:line="300" PREFIX:column="9">if <condition PREFIX:line="300" PREFIX:column="12">( <expr><name><name PREFIX:line="300" PREFIX:column="14">s</name>.<name PREFIX:line="300" PREFIX:column="16">y</name></name> &gt;= <name><name PREFIX:line="300" PREFIX:column="21">b</name>-&gt;<name PREFIX:line="300" PREFIX:column="24">p</name>.<name PREFIX:line="300" PREFIX:column="26">page_y0</name></name></expr> )</condition><then PREFIX:line="300" PREFIX:column="35">
	  <if PREFIX:line="301" PREFIX:column="11">if <condition PREFIX:line="301" PREFIX:column="14">( <expr><name><name PREFIX:line="301" PREFIX:column="16">s</name>.<name PREFIX:line="301" PREFIX:column="18">y</name></name> &lt;= <name><name PREFIX:line="301" PREFIX:column="23">b</name>-&gt;<name PREFIX:line="301" PREFIX:column="26">p</name>.<name PREFIX:line="301" PREFIX:column="28">page_y1</name></name></expr> )</condition><then PREFIX:line="301" PREFIX:column="37">
	    <if PREFIX:line="302" PREFIX:column="13">if <condition PREFIX:line="302" PREFIX:column="16">( <expr><name PREFIX:line="302" PREFIX:column="18">pixel</name> &amp; 128</expr> )</condition><then PREFIX:line="302" PREFIX:column="31">
	      <expr_stmt><expr><call><name PREFIX:line="303" PREFIX:column="15">u8g_pb8h1_state_set_pixel</name><argument_list PREFIX:line="303" PREFIX:column="40">(<argument><expr PREFIX:line="303" PREFIX:column="41">&amp;<name PREFIX:line="303" PREFIX:column="42">s</name></expr></argument>, <argument><expr><name><name PREFIX:line="303" PREFIX:column="45">arg_pixel</name>-&gt;<name PREFIX:line="303" PREFIX:column="56">color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></then></if></then></if>
	<expr_stmt><expr><call><name PREFIX:line="304" PREFIX:column="9">u8g_pb8h1_state_down</name><argument_list PREFIX:line="304" PREFIX:column="29">(<argument><expr PREFIX:line="304" PREFIX:column="30">&amp;<name PREFIX:line="304" PREFIX:column="31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	<expr_stmt><expr><name PREFIX:line="305" PREFIX:column="9">pixel</name> &lt;&lt;= 1</expr>;</expr_stmt>
	<expr_stmt><expr><name PREFIX:line="306" PREFIX:column="9">cnt</name>--</expr>;</expr_stmt>
      }</block> while<condition PREFIX:line="307" PREFIX:column="14">( <expr><name PREFIX:line="307" PREFIX:column="16">cnt</name> &gt; 0 &amp;&amp; <name PREFIX:line="307" PREFIX:column="27">pixel</name> != 0</expr>  )</condition>;</do>
      <break PREFIX:line="308" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="309" PREFIX:column="5">case <expr PREFIX:line="309" PREFIX:column="10">2</expr>: 
      <do PREFIX:line="310" PREFIX:column="7">do
      <block PREFIX:line="311" PREFIX:column="7">{
	<if PREFIX:line="312" PREFIX:column="9">if <condition PREFIX:line="312" PREFIX:column="12">( <expr><name><name PREFIX:line="312" PREFIX:column="14">s</name>.<name PREFIX:line="312" PREFIX:column="16">x</name></name> &lt; <name><name PREFIX:line="312" PREFIX:column="20">b</name>-&gt;<name PREFIX:line="312" PREFIX:column="23">width</name></name></expr> )</condition><then PREFIX:line="312" PREFIX:column="30">
	  <if PREFIX:line="313" PREFIX:column="11">if <condition PREFIX:line="313" PREFIX:column="14">( <expr><name PREFIX:line="313" PREFIX:column="16">pixel</name> &amp; 128</expr> )</condition><then PREFIX:line="313" PREFIX:column="29">
	    <expr_stmt><expr><call><name PREFIX:line="314" PREFIX:column="13">u8g_pb8h1_state_set_pixel</name><argument_list PREFIX:line="314" PREFIX:column="38">(<argument><expr PREFIX:line="314" PREFIX:column="39">&amp;<name PREFIX:line="314" PREFIX:column="40">s</name></expr></argument>, <argument><expr><name><name PREFIX:line="314" PREFIX:column="43">arg_pixel</name>-&gt;<name PREFIX:line="314" PREFIX:column="54">color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></then></if>
	<expr_stmt><expr><call><name PREFIX:line="315" PREFIX:column="9">u8g_pb8h1_state_left</name><argument_list PREFIX:line="315" PREFIX:column="29">(<argument><expr PREFIX:line="315" PREFIX:column="30">&amp;<name PREFIX:line="315" PREFIX:column="31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	<expr_stmt><expr><name PREFIX:line="316" PREFIX:column="9">pixel</name> &lt;&lt;= 1</expr>;</expr_stmt>
	<expr_stmt><expr><name PREFIX:line="317" PREFIX:column="9">cnt</name>--</expr>;</expr_stmt>
      }</block> while<condition PREFIX:line="318" PREFIX:column="14">( <expr><name PREFIX:line="318" PREFIX:column="16">cnt</name> &gt; 0 &amp;&amp; <name PREFIX:line="318" PREFIX:column="27">pixel</name> != 0</expr> )</condition>;</do>
      <break PREFIX:line="319" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="320" PREFIX:column="5">case <expr PREFIX:line="320" PREFIX:column="10">3</expr>: 	
      <do PREFIX:line="321" PREFIX:column="7">do
      <block PREFIX:line="322" PREFIX:column="7">{
	<if PREFIX:line="323" PREFIX:column="9">if <condition PREFIX:line="323" PREFIX:column="12">( <expr><name><name PREFIX:line="323" PREFIX:column="14">s</name>.<name PREFIX:line="323" PREFIX:column="16">y</name></name> &gt;= <name><name PREFIX:line="323" PREFIX:column="21">b</name>-&gt;<name PREFIX:line="323" PREFIX:column="24">p</name>.<name PREFIX:line="323" PREFIX:column="26">page_y0</name></name></expr> )</condition><then PREFIX:line="323" PREFIX:column="35">
	  <if PREFIX:line="324" PREFIX:column="11">if <condition PREFIX:line="324" PREFIX:column="14">( <expr><name><name PREFIX:line="324" PREFIX:column="16">s</name>.<name PREFIX:line="324" PREFIX:column="18">y</name></name> &lt;= <name><name PREFIX:line="324" PREFIX:column="23">b</name>-&gt;<name PREFIX:line="324" PREFIX:column="26">p</name>.<name PREFIX:line="324" PREFIX:column="28">page_y1</name></name></expr> )</condition><then PREFIX:line="324" PREFIX:column="37">
	    <if PREFIX:line="325" PREFIX:column="13">if <condition PREFIX:line="325" PREFIX:column="16">( <expr><name PREFIX:line="325" PREFIX:column="18">pixel</name> &amp; 128</expr> )</condition><then PREFIX:line="325" PREFIX:column="31">
	      <expr_stmt><expr><call><name PREFIX:line="326" PREFIX:column="15">u8g_pb8h1_state_set_pixel</name><argument_list PREFIX:line="326" PREFIX:column="40">(<argument><expr PREFIX:line="326" PREFIX:column="41">&amp;<name PREFIX:line="326" PREFIX:column="42">s</name></expr></argument>, <argument><expr><name><name PREFIX:line="326" PREFIX:column="45">arg_pixel</name>-&gt;<name PREFIX:line="326" PREFIX:column="56">color</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if></then></if></then></if>
	<expr_stmt><expr><call><name PREFIX:line="327" PREFIX:column="9">u8g_pb8h1_state_up</name><argument_list PREFIX:line="327" PREFIX:column="27">(<argument><expr PREFIX:line="327" PREFIX:column="28">&amp;<name PREFIX:line="327" PREFIX:column="29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 
	<expr_stmt><expr><name PREFIX:line="328" PREFIX:column="9">pixel</name> &lt;&lt;= 1</expr>;</expr_stmt>
	<expr_stmt><expr><name PREFIX:line="329" PREFIX:column="9">cnt</name>--</expr>;</expr_stmt>
      }</block> while<condition PREFIX:line="330" PREFIX:column="14">( <expr><name PREFIX:line="330" PREFIX:column="16">cnt</name> &gt; 0 &amp;&amp; <name PREFIX:line="330" PREFIX:column="27">pixel</name> != 0</expr>  )</condition>;</do>
      <break PREFIX:line="331" PREFIX:column="7">break;</break>
  </case>}</block></switch>
}</block></function>
<cpp:endif PREFIX:line="334" PREFIX:column="1">#<cpp:directive PREFIX:line="334" PREFIX:column="2">endif</cpp:directive></cpp:endif>

<function><type><name PREFIX:line="336" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="336" PREFIX:column="9">u8g_dev_pb8h1_base_fn</name><parameter_list PREFIX:line="336" PREFIX:column="30">(<param><decl><type><name PREFIX:line="336" PREFIX:column="31">u8g_t</name> *</type><name PREFIX:line="336" PREFIX:column="38">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="336" PREFIX:column="43">u8g_dev_t</name> *</type><name PREFIX:line="336" PREFIX:column="54">dev</name></decl></param>, <param><decl><type><name PREFIX:line="336" PREFIX:column="59">uint8_t</name></type> <name PREFIX:line="336" PREFIX:column="67">msg</name></decl></param>, <param><decl><type><name PREFIX:line="336" PREFIX:column="72">void</name> *</type><name PREFIX:line="336" PREFIX:column="78">arg</name></decl></param>)</parameter_list>
<block PREFIX:line="337" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="338" PREFIX:column="3">u8g_pb_t</name> *</type><name PREFIX:line="338" PREFIX:column="13">pb</name> <init PREFIX:line="338" PREFIX:column="16">= <expr><call PREFIX:line="338" PREFIX:column="18">(<name PREFIX:line="338" PREFIX:column="19">u8g_pb_t</name> *)<argument_list PREFIX:line="338" PREFIX:column="30">(<argument><expr><name><name PREFIX:line="338" PREFIX:column="31">dev</name>-&gt;<name PREFIX:line="338" PREFIX:column="36">dev_mem</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
  <switch PREFIX:line="339" PREFIX:column="3">switch<condition PREFIX:line="339" PREFIX:column="9">(<expr><name PREFIX:line="339" PREFIX:column="10">msg</name></expr>)</condition>
  <block PREFIX:line="340" PREFIX:column="3">{
    <case PREFIX:line="341" PREFIX:column="5">case <expr><name PREFIX:line="341" PREFIX:column="10">U8G_DEV_MSG_SET_8PIXEL</name></expr>:
<cpp:ifdef PREFIX:line="342" PREFIX:column="1">#<cpp:directive PREFIX:line="342" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="342" PREFIX:column="8">NEW_CODE</name></cpp:ifdef>
      <if PREFIX:line="343" PREFIX:column="7">if <condition PREFIX:line="343" PREFIX:column="10">( <expr><call><name PREFIX:line="343" PREFIX:column="12">u8g_pb_Is8PixelVisible</name><argument_list PREFIX:line="343" PREFIX:column="34">(<argument><expr><name PREFIX:line="343" PREFIX:column="35">pb</name></expr></argument>, <argument><expr PREFIX:line="343" PREFIX:column="39">(<name PREFIX:line="343" PREFIX:column="40">u8g_dev_arg_pixel_t</name> *)<name PREFIX:line="343" PREFIX:column="62">arg</name></expr></argument>)</argument_list></call></expr> )</condition><then PREFIX:line="343" PREFIX:column="68">
        <expr_stmt><expr><call><name PREFIX:line="344" PREFIX:column="9">u8g_pb8h1_Set8PixelState</name><argument_list PREFIX:line="344" PREFIX:column="33">(<argument><expr><name PREFIX:line="344" PREFIX:column="34">pb</name></expr></argument>, <argument><expr PREFIX:line="344" PREFIX:column="38">(<name PREFIX:line="344" PREFIX:column="39">u8g_dev_arg_pixel_t</name> *)<name PREFIX:line="344" PREFIX:column="61">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<cpp:else PREFIX:line="345" PREFIX:column="1">#<cpp:directive PREFIX:line="345" PREFIX:column="2">else</cpp:directive></cpp:else>
      <if PREFIX:line="346" PREFIX:column="7">if <condition PREFIX:line="346" PREFIX:column="10">( <expr><call><name PREFIX:line="346" PREFIX:column="12">u8g_pb_Is8PixelVisible</name><argument_list PREFIX:line="346" PREFIX:column="34">(<argument><expr><name PREFIX:line="346" PREFIX:column="35">pb</name></expr></argument>, <argument><expr PREFIX:line="346" PREFIX:column="39">(<name PREFIX:line="346" PREFIX:column="40">u8g_dev_arg_pixel_t</name> *)<name PREFIX:line="346" PREFIX:column="62">arg</name></expr></argument>)</argument_list></call></expr> )</condition><then PREFIX:line="346" PREFIX:column="68">
        <expr_stmt><expr><call><name PREFIX:line="347" PREFIX:column="9">u8g_pb8h1_Set8PixelOpt2</name><argument_list PREFIX:line="347" PREFIX:column="32">(<argument><expr><name PREFIX:line="347" PREFIX:column="33">pb</name></expr></argument>, <argument><expr PREFIX:line="347" PREFIX:column="37">(<name PREFIX:line="347" PREFIX:column="38">u8g_dev_arg_pixel_t</name> *)<name PREFIX:line="347" PREFIX:column="60">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
<cpp:endif PREFIX:line="348" PREFIX:column="1">#<cpp:directive PREFIX:line="348" PREFIX:column="2">endif</cpp:directive></cpp:endif>
      <break PREFIX:line="349" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="350" PREFIX:column="5">case <expr><name PREFIX:line="350" PREFIX:column="10">U8G_DEV_MSG_SET_PIXEL</name></expr>:
      <expr_stmt><expr><call><name PREFIX:line="351" PREFIX:column="7">u8g_pb8h1_SetPixel</name><argument_list PREFIX:line="351" PREFIX:column="25">(<argument><expr><name PREFIX:line="351" PREFIX:column="26">pb</name></expr></argument>, <argument><expr PREFIX:line="351" PREFIX:column="30">(<name PREFIX:line="351" PREFIX:column="31">u8g_dev_arg_pixel_t</name> *)<name PREFIX:line="351" PREFIX:column="53">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <break PREFIX:line="352" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="353" PREFIX:column="5">case <expr><name PREFIX:line="353" PREFIX:column="10">U8G_DEV_MSG_INIT</name></expr>:
      <break PREFIX:line="354" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="355" PREFIX:column="5">case <expr><name PREFIX:line="355" PREFIX:column="10">U8G_DEV_MSG_STOP</name></expr>:
      <break PREFIX:line="356" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="357" PREFIX:column="5">case <expr><name PREFIX:line="357" PREFIX:column="10">U8G_DEV_MSG_PAGE_FIRST</name></expr>:
      <expr_stmt><expr><call><name PREFIX:line="358" PREFIX:column="7">u8g_pb_Clear</name><argument_list PREFIX:line="358" PREFIX:column="19">(<argument><expr><name PREFIX:line="358" PREFIX:column="20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <expr_stmt><expr><call><name PREFIX:line="359" PREFIX:column="7">u8g_page_First</name><argument_list PREFIX:line="359" PREFIX:column="21">(<argument><expr PREFIX:line="359" PREFIX:column="22">&amp;(<name><name PREFIX:line="359" PREFIX:column="24">pb</name>-&gt;<name PREFIX:line="359" PREFIX:column="28">p</name></name>)</expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <break PREFIX:line="360" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="361" PREFIX:column="5">case <expr><name PREFIX:line="361" PREFIX:column="10">U8G_DEV_MSG_PAGE_NEXT</name></expr>:
      <if PREFIX:line="362" PREFIX:column="7">if <condition PREFIX:line="362" PREFIX:column="10">( <expr><call><name PREFIX:line="362" PREFIX:column="12">u8g_page_Next</name><argument_list PREFIX:line="362" PREFIX:column="25">(<argument><expr PREFIX:line="362" PREFIX:column="26">&amp;(<name><name PREFIX:line="362" PREFIX:column="28">pb</name>-&gt;<name PREFIX:line="362" PREFIX:column="32">p</name></name>)</expr></argument>)</argument_list></call> == 0</expr> )</condition><then PREFIX:line="362" PREFIX:column="42">
        <return PREFIX:line="363" PREFIX:column="9">return <expr PREFIX:line="363" PREFIX:column="16">0</expr>;</return></then></if>
      <expr_stmt><expr><call><name PREFIX:line="364" PREFIX:column="7">u8g_pb_Clear</name><argument_list PREFIX:line="364" PREFIX:column="19">(<argument><expr><name PREFIX:line="364" PREFIX:column="20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <break PREFIX:line="365" PREFIX:column="7">break;</break>
<cpp:ifdef PREFIX:line="366" PREFIX:column="1">#<cpp:directive PREFIX:line="366" PREFIX:column="2">ifdef</cpp:directive> <name PREFIX:line="366" PREFIX:column="8">U8G_DEV_MSG_IS_BBX_INTERSECTION</name></cpp:ifdef>
    </case><case PREFIX:line="367" PREFIX:column="5">case <expr><name PREFIX:line="367" PREFIX:column="10">U8G_DEV_MSG_IS_BBX_INTERSECTION</name></expr>:
      <return PREFIX:line="368" PREFIX:column="7">return <expr><call><name PREFIX:line="368" PREFIX:column="14">u8g_pb_IsIntersection</name><argument_list PREFIX:line="368" PREFIX:column="35">(<argument><expr><name PREFIX:line="368" PREFIX:column="36">pb</name></expr></argument>, <argument><expr PREFIX:line="368" PREFIX:column="40">(<name PREFIX:line="368" PREFIX:column="41">u8g_dev_arg_bbx_t</name> *)<name PREFIX:line="368" PREFIX:column="61">arg</name></expr></argument>)</argument_list></call></expr>;</return>
<cpp:endif PREFIX:line="369" PREFIX:column="1">#<cpp:directive PREFIX:line="369" PREFIX:column="2">endif</cpp:directive></cpp:endif>
    </case><case PREFIX:line="370" PREFIX:column="5">case <expr><name PREFIX:line="370" PREFIX:column="10">U8G_DEV_MSG_GET_PAGE_BOX</name></expr>:
      <expr_stmt><expr><call><name PREFIX:line="371" PREFIX:column="7">u8g_pb_GetPageBox</name><argument_list PREFIX:line="371" PREFIX:column="24">(<argument><expr><name PREFIX:line="371" PREFIX:column="25">pb</name></expr></argument>, <argument><expr PREFIX:line="371" PREFIX:column="29">(<name PREFIX:line="371" PREFIX:column="30">u8g_box_t</name> *)<name PREFIX:line="371" PREFIX:column="42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
      <break PREFIX:line="372" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="373" PREFIX:column="5">case <expr><name PREFIX:line="373" PREFIX:column="10">U8G_DEV_MSG_GET_WIDTH</name></expr>:
      <expr_stmt><expr PREFIX:line="374" PREFIX:column="7">*((<name PREFIX:line="374" PREFIX:column="10">u8g_uint_t</name> *)<name PREFIX:line="374" PREFIX:column="23">arg</name>) = <name><name PREFIX:line="374" PREFIX:column="30">pb</name>-&gt;<name PREFIX:line="374" PREFIX:column="34">width</name></name></expr>;</expr_stmt>
      <break PREFIX:line="375" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="376" PREFIX:column="5">case <expr><name PREFIX:line="376" PREFIX:column="10">U8G_DEV_MSG_GET_HEIGHT</name></expr>:
      <expr_stmt><expr PREFIX:line="377" PREFIX:column="7">*((<name PREFIX:line="377" PREFIX:column="10">u8g_uint_t</name> *)<name PREFIX:line="377" PREFIX:column="23">arg</name>) = <name><name PREFIX:line="377" PREFIX:column="30">pb</name>-&gt;<name PREFIX:line="377" PREFIX:column="34">p</name>.<name PREFIX:line="377" PREFIX:column="36">total_height</name></name></expr>;</expr_stmt>
      <break PREFIX:line="378" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="379" PREFIX:column="5">case <expr><name PREFIX:line="379" PREFIX:column="10">U8G_DEV_MSG_SET_COLOR_ENTRY</name></expr>:
      <break PREFIX:line="380" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="381" PREFIX:column="5">case <expr><name PREFIX:line="381" PREFIX:column="10">U8G_DEV_MSG_SET_XY_CB</name></expr>:
      <break PREFIX:line="382" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="383" PREFIX:column="5">case <expr><name PREFIX:line="383" PREFIX:column="10">U8G_DEV_MSG_GET_MODE</name></expr>:
      <return PREFIX:line="384" PREFIX:column="7">return <expr><name PREFIX:line="384" PREFIX:column="14">U8G_MODE_BW</name></expr>;</return>
  </case>}</block></switch>
  <return PREFIX:line="386" PREFIX:column="3">return <expr PREFIX:line="386" PREFIX:column="10">1</expr>;</return>
}</block></function>
 
  
</unit>
