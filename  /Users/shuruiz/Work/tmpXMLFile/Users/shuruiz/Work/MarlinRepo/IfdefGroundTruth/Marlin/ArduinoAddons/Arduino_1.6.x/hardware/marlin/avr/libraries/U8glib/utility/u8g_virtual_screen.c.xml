<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.sdml.info/srcML/src" xmlns:cpp="http://www.sdml.info/srcML/cpp" xmlns:PREFIX="http://www.sdml.info/srcML/position" language="C" filename=" /Users/shuruiz/Work/tmpXMLFile//Users/shuruiz/Work/MarlinRepo/IfdefGroundTruth/Marlin/ArduinoAddons/Arduino_1.6.x/hardware/marlin/avr/libraries/U8glib/utility/u8g_virtual_screen.c" PREFIX:tabs="8"><comment type="block" PREFIX:line="1" PREFIX:column="1">/*

  u8g_virtual_screen.c

  Universal 8bit Graphics Library
  
  Copyright (c) 2012, olikraus@gmail.com
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, this list 
    of conditions and the following disclaimer.
    
  * Redistributions in binary form must reproduce the above copyright notice, this 
    list of conditions and the following disclaimer in the documentation and/or other 
    materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
  CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
  INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
  ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
  
  
*/</comment>

<cpp:include PREFIX:line="37" PREFIX:column="1">#<cpp:directive PREFIX:line="37" PREFIX:column="2">include</cpp:directive> <cpp:file PREFIX:line="37" PREFIX:column="10">"u8g.h"</cpp:file></cpp:include>

<struct PREFIX:line="39" PREFIX:column="1">struct <name PREFIX:line="39" PREFIX:column="8">_u8g_vs_t</name>
<block PREFIX:line="40" PREFIX:column="1">{
  <decl_stmt><decl><type><name PREFIX:line="41" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="41" PREFIX:column="14">x</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="42" PREFIX:column="3">u8g_uint_t</name></type> <name PREFIX:line="42" PREFIX:column="14">y</name></decl>;</decl_stmt>
  <decl_stmt><decl><type><name PREFIX:line="43" PREFIX:column="3">u8g_t</name> *</type><name PREFIX:line="43" PREFIX:column="10">u8g</name></decl>;</decl_stmt>
}</block>;</struct>
<typedef PREFIX:line="45" PREFIX:column="1">typedef <type PREFIX:line="45" PREFIX:column="9">struct <name PREFIX:line="45" PREFIX:column="16">_u8g_vs_t</name></type> <name PREFIX:line="45" PREFIX:column="26">u8g_vs_t</name>;</typedef>

<cpp:define PREFIX:line="47" PREFIX:column="1">#<cpp:directive PREFIX:line="47" PREFIX:column="2">define</cpp:directive> <cpp:macro><name PREFIX:line="47" PREFIX:column="9">U8g_VS_MAX</name></cpp:macro> <cpp:value PREFIX:line="47" PREFIX:column="20">4</cpp:value></cpp:define>
<decl_stmt><decl><type><name PREFIX:line="48" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="48" PREFIX:column="9">u8g_vs_cnt</name> <init PREFIX:line="48" PREFIX:column="20">= <expr PREFIX:line="48" PREFIX:column="22">0</expr></init></decl>;</decl_stmt>
<decl_stmt><decl><type><name PREFIX:line="49" PREFIX:column="1">u8g_vs_t</name></type> <name><name PREFIX:line="49" PREFIX:column="10">u8g_vs_list</name><index PREFIX:line="49" PREFIX:column="21">[<expr><name PREFIX:line="49" PREFIX:column="22">U8g_VS_MAX</name></expr>]</index></name></decl>;</decl_stmt> 
<decl_stmt><decl><type><name PREFIX:line="50" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="50" PREFIX:column="9">u8g_vs_current</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name PREFIX:line="51" PREFIX:column="1">u8g_uint_t</name></type> <name PREFIX:line="51" PREFIX:column="12">u8g_vs_width</name></decl>;</decl_stmt>
<decl_stmt><decl><type><name PREFIX:line="52" PREFIX:column="1">u8g_uint_t</name></type> <name PREFIX:line="52" PREFIX:column="12">u8g_vs_height</name></decl>;</decl_stmt>

<function><type><name PREFIX:line="54" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="54" PREFIX:column="9">u8g_dev_vs_fn</name><parameter_list PREFIX:line="54" PREFIX:column="22">(<param><decl><type><name PREFIX:line="54" PREFIX:column="23">u8g_t</name> *</type><name PREFIX:line="54" PREFIX:column="30">u8g</name></decl></param>, <param><decl><type><name PREFIX:line="54" PREFIX:column="35">u8g_dev_t</name> *</type><name PREFIX:line="54" PREFIX:column="46">dev</name></decl></param>, <param><decl><type><name PREFIX:line="54" PREFIX:column="51">uint8_t</name></type> <name PREFIX:line="54" PREFIX:column="59">msg</name></decl></param>, <param><decl><type><name PREFIX:line="54" PREFIX:column="64">void</name> *</type><name PREFIX:line="54" PREFIX:column="70">arg</name></decl></param>)</parameter_list>
<block PREFIX:line="55" PREFIX:column="1">{
  <switch PREFIX:line="56" PREFIX:column="3">switch<condition PREFIX:line="56" PREFIX:column="9">(<expr><name PREFIX:line="56" PREFIX:column="10">msg</name></expr>)</condition>
  <block PREFIX:line="57" PREFIX:column="3">{
    <default PREFIX:line="58" PREFIX:column="5">default:
      <block PREFIX:line="59" PREFIX:column="7">{
	<decl_stmt><decl><type><name PREFIX:line="60" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="60" PREFIX:column="17">i</name></decl>;</decl_stmt>
	<for PREFIX:line="61" PREFIX:column="9">for( <init><expr><name PREFIX:line="61" PREFIX:column="14">i</name> = 0</expr>;</init> <condition><expr><name PREFIX:line="61" PREFIX:column="21">i</name> &lt; <name PREFIX:line="61" PREFIX:column="25">u8g_vs_cnt</name></expr>;</condition> <incr><expr><name PREFIX:line="61" PREFIX:column="37">i</name>++</expr></incr> )
	<block PREFIX:line="62" PREFIX:column="9">{
	  <expr_stmt><expr><call><name PREFIX:line="63" PREFIX:column="11">u8g_call_dev_fn</name><argument_list PREFIX:line="63" PREFIX:column="26">(<argument><expr><name><name PREFIX:line="63" PREFIX:column="27">u8g_vs_list</name><index PREFIX:line="63" PREFIX:column="38">[<expr><name PREFIX:line="63" PREFIX:column="39">i</name></expr>]</index></name>.<name PREFIX:line="63" PREFIX:column="42">u8g</name></expr></argument>, <argument><expr><name><name PREFIX:line="63" PREFIX:column="47">u8g_vs_list</name><index PREFIX:line="63" PREFIX:column="58">[<expr><name PREFIX:line="63" PREFIX:column="59">i</name></expr>]</index></name>.<name><name PREFIX:line="63" PREFIX:column="62">u8g</name>-&gt;<name PREFIX:line="63" PREFIX:column="67">dev</name></name></expr></argument>, <argument><expr><name PREFIX:line="63" PREFIX:column="72">msg</name></expr></argument>, <argument><expr><name PREFIX:line="63" PREFIX:column="77">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	}</block></for>
      }</block>
      <return PREFIX:line="66" PREFIX:column="7">return <expr PREFIX:line="66" PREFIX:column="14">1</expr>;</return>
    </default><case PREFIX:line="67" PREFIX:column="5">case <expr><name PREFIX:line="67" PREFIX:column="10">U8G_DEV_MSG_PAGE_FIRST</name></expr>:
      <expr_stmt><expr><name PREFIX:line="68" PREFIX:column="7">u8g_vs_current</name> = 0</expr>;</expr_stmt>
      <if PREFIX:line="69" PREFIX:column="7">if <condition PREFIX:line="69" PREFIX:column="10">( <expr><name PREFIX:line="69" PREFIX:column="12">u8g_vs_cnt</name> != 0</expr> )</condition><then PREFIX:line="69" PREFIX:column="29">
	<return PREFIX:line="70" PREFIX:column="9">return <expr><call><name PREFIX:line="70" PREFIX:column="16">u8g_call_dev_fn</name><argument_list PREFIX:line="70" PREFIX:column="31">(<argument><expr><name><name PREFIX:line="70" PREFIX:column="32">u8g_vs_list</name><index PREFIX:line="70" PREFIX:column="43">[<expr><name PREFIX:line="70" PREFIX:column="44">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="70" PREFIX:column="60">u8g</name></expr></argument>, <argument><expr><name><name PREFIX:line="70" PREFIX:column="65">u8g_vs_list</name><index PREFIX:line="70" PREFIX:column="76">[<expr><name PREFIX:line="70" PREFIX:column="77">u8g_vs_current</name></expr>]</index></name>.<name><name PREFIX:line="70" PREFIX:column="93">u8g</name>-&gt;<name PREFIX:line="70" PREFIX:column="98">dev</name></name></expr></argument>, <argument><expr><name PREFIX:line="70" PREFIX:column="103">msg</name></expr></argument>, <argument><expr><name PREFIX:line="70" PREFIX:column="108">arg</name></expr></argument>)</argument_list></call></expr>;</return></then></if>
      <return PREFIX:line="71" PREFIX:column="7">return <expr PREFIX:line="71" PREFIX:column="14">0</expr>;</return>
    </case><case PREFIX:line="72" PREFIX:column="5">case <expr><name PREFIX:line="72" PREFIX:column="10">U8G_DEV_MSG_PAGE_NEXT</name></expr>:
      <block PREFIX:line="73" PREFIX:column="7">{	
	<decl_stmt><decl><type><name PREFIX:line="74" PREFIX:column="9">uint8_t</name></type> <name PREFIX:line="74" PREFIX:column="17">ret</name> <init PREFIX:line="74" PREFIX:column="21">= <expr PREFIX:line="74" PREFIX:column="23">0</expr></init></decl>;</decl_stmt>
	<if PREFIX:line="75" PREFIX:column="9">if <condition PREFIX:line="75" PREFIX:column="12">( <expr><name PREFIX:line="75" PREFIX:column="14">u8g_vs_cnt</name> != 0</expr> )</condition><then PREFIX:line="75" PREFIX:column="31">
	  <expr_stmt><expr><name PREFIX:line="76" PREFIX:column="11">ret</name> = <call><name PREFIX:line="76" PREFIX:column="17">u8g_call_dev_fn</name><argument_list PREFIX:line="76" PREFIX:column="32">(<argument><expr><name><name PREFIX:line="76" PREFIX:column="33">u8g_vs_list</name><index PREFIX:line="76" PREFIX:column="44">[<expr><name PREFIX:line="76" PREFIX:column="45">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="76" PREFIX:column="61">u8g</name></expr></argument>, <argument><expr><name><name PREFIX:line="76" PREFIX:column="66">u8g_vs_list</name><index PREFIX:line="76" PREFIX:column="77">[<expr><name PREFIX:line="76" PREFIX:column="78">u8g_vs_current</name></expr>]</index></name>.<name><name PREFIX:line="76" PREFIX:column="94">u8g</name>-&gt;<name PREFIX:line="76" PREFIX:column="99">dev</name></name></expr></argument>, <argument><expr><name PREFIX:line="76" PREFIX:column="104">msg</name></expr></argument>, <argument><expr><name PREFIX:line="76" PREFIX:column="109">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></then></if>
	<if PREFIX:line="77" PREFIX:column="9">if <condition PREFIX:line="77" PREFIX:column="12">( <expr><name PREFIX:line="77" PREFIX:column="14">ret</name> != 0</expr> )</condition><then PREFIX:line="77" PREFIX:column="24">
	  <return PREFIX:line="78" PREFIX:column="11">return <expr><name PREFIX:line="78" PREFIX:column="18">ret</name></expr>;</return></then></if>
	<expr_stmt><expr><name PREFIX:line="79" PREFIX:column="9">u8g_vs_current</name>++</expr>;</expr_stmt>	<comment type="block" PREFIX:line="79" PREFIX:column="33">/* next device */</comment>
	<if PREFIX:line="80" PREFIX:column="9">if <condition PREFIX:line="80" PREFIX:column="12">( <expr><name PREFIX:line="80" PREFIX:column="14">u8g_vs_current</name> &gt;= <name PREFIX:line="80" PREFIX:column="32">u8g_vs_cnt</name></expr> )</condition><then PREFIX:line="80" PREFIX:column="44">  <comment type="block" PREFIX:line="80" PREFIX:column="46">/* reached end? */</comment>
	  <return PREFIX:line="81" PREFIX:column="11">return <expr PREFIX:line="81" PREFIX:column="18">0</expr>;</return></then></if>
	<return PREFIX:line="82" PREFIX:column="9">return <expr><call><name PREFIX:line="82" PREFIX:column="16">u8g_call_dev_fn</name><argument_list PREFIX:line="82" PREFIX:column="31">(<argument><expr><name><name PREFIX:line="82" PREFIX:column="32">u8g_vs_list</name><index PREFIX:line="82" PREFIX:column="43">[<expr><name PREFIX:line="82" PREFIX:column="44">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="82" PREFIX:column="60">u8g</name></expr></argument>, <argument><expr><name><name PREFIX:line="82" PREFIX:column="65">u8g_vs_list</name><index PREFIX:line="82" PREFIX:column="76">[<expr><name PREFIX:line="82" PREFIX:column="77">u8g_vs_current</name></expr>]</index></name>.<name><name PREFIX:line="82" PREFIX:column="93">u8g</name>-&gt;<name PREFIX:line="82" PREFIX:column="98">dev</name></name></expr></argument>, <argument><expr><name PREFIX:line="82" PREFIX:column="103">U8G_DEV_MSG_PAGE_FIRST</name></expr></argument>, <argument><expr><name PREFIX:line="82" PREFIX:column="127">arg</name></expr></argument>)</argument_list></call></expr>;</return>	
      }</block>
      <return PREFIX:line="84" PREFIX:column="7">return <expr PREFIX:line="84" PREFIX:column="14">0</expr>;</return>
    </case><case PREFIX:line="85" PREFIX:column="5">case <expr><name PREFIX:line="85" PREFIX:column="10">U8G_DEV_MSG_GET_WIDTH</name></expr>:
      <expr_stmt><expr PREFIX:line="86" PREFIX:column="7">*((<name PREFIX:line="86" PREFIX:column="10">u8g_uint_t</name> *)<name PREFIX:line="86" PREFIX:column="23">arg</name>) = <name PREFIX:line="86" PREFIX:column="30">u8g_vs_width</name></expr>;</expr_stmt>
      <break PREFIX:line="87" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="88" PREFIX:column="5">case <expr><name PREFIX:line="88" PREFIX:column="10">U8G_DEV_MSG_GET_HEIGHT</name></expr>:
      <expr_stmt><expr PREFIX:line="89" PREFIX:column="7">*((<name PREFIX:line="89" PREFIX:column="10">u8g_uint_t</name> *)<name PREFIX:line="89" PREFIX:column="23">arg</name>) = <name PREFIX:line="89" PREFIX:column="30">u8g_vs_height</name></expr>;</expr_stmt>
      <break PREFIX:line="90" PREFIX:column="7">break;</break>
    </case><case PREFIX:line="91" PREFIX:column="5">case <expr><name PREFIX:line="91" PREFIX:column="10">U8G_DEV_MSG_GET_PAGE_BOX</name></expr>:
      <if PREFIX:line="92" PREFIX:column="7">if <condition PREFIX:line="92" PREFIX:column="10">( <expr><name PREFIX:line="92" PREFIX:column="12">u8g_vs_current</name> &lt; <name PREFIX:line="92" PREFIX:column="29">u8g_vs_cnt</name></expr> )</condition><then PREFIX:line="92" PREFIX:column="41">
      <block PREFIX:line="93" PREFIX:column="7">{
	<expr_stmt><expr><call><name PREFIX:line="94" PREFIX:column="9">u8g_call_dev_fn</name><argument_list PREFIX:line="94" PREFIX:column="24">(<argument><expr><name><name PREFIX:line="94" PREFIX:column="25">u8g_vs_list</name><index PREFIX:line="94" PREFIX:column="36">[<expr><name PREFIX:line="94" PREFIX:column="37">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="94" PREFIX:column="53">u8g</name></expr></argument>, <argument><expr><name><name PREFIX:line="94" PREFIX:column="58">u8g_vs_list</name><index PREFIX:line="94" PREFIX:column="69">[<expr><name PREFIX:line="94" PREFIX:column="70">u8g_vs_current</name></expr>]</index></name>.<name><name PREFIX:line="94" PREFIX:column="86">u8g</name>-&gt;<name PREFIX:line="94" PREFIX:column="91">dev</name></name></expr></argument>, <argument><expr><name PREFIX:line="94" PREFIX:column="96">msg</name></expr></argument>, <argument><expr><name PREFIX:line="94" PREFIX:column="101">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
	<expr_stmt><expr PREFIX:line="95" PREFIX:column="9">((<name PREFIX:line="95" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="95" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="95" PREFIX:column="29">x0</name> += <name><name PREFIX:line="95" PREFIX:column="35">u8g_vs_list</name><index PREFIX:line="95" PREFIX:column="46">[<expr><name PREFIX:line="95" PREFIX:column="47">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="95" PREFIX:column="63">x</name></expr>;</expr_stmt>
	<expr_stmt><expr PREFIX:line="96" PREFIX:column="9">((<name PREFIX:line="96" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="96" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="96" PREFIX:column="29">x1</name> += <name><name PREFIX:line="96" PREFIX:column="35">u8g_vs_list</name><index PREFIX:line="96" PREFIX:column="46">[<expr><name PREFIX:line="96" PREFIX:column="47">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="96" PREFIX:column="63">x</name></expr>;</expr_stmt>
	<expr_stmt><expr PREFIX:line="97" PREFIX:column="9">((<name PREFIX:line="97" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="97" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="97" PREFIX:column="29">y0</name> += <name><name PREFIX:line="97" PREFIX:column="35">u8g_vs_list</name><index PREFIX:line="97" PREFIX:column="46">[<expr><name PREFIX:line="97" PREFIX:column="47">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="97" PREFIX:column="63">y</name></expr>;</expr_stmt>
	<expr_stmt><expr PREFIX:line="98" PREFIX:column="9">((<name PREFIX:line="98" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="98" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="98" PREFIX:column="29">y1</name> += <name><name PREFIX:line="98" PREFIX:column="35">u8g_vs_list</name><index PREFIX:line="98" PREFIX:column="46">[<expr><name PREFIX:line="98" PREFIX:column="47">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="98" PREFIX:column="63">y</name></expr>;</expr_stmt>
      }</block></then>
      <else PREFIX:line="100" PREFIX:column="7">else
      <block PREFIX:line="101" PREFIX:column="7">{
	<expr_stmt><expr PREFIX:line="102" PREFIX:column="9">((<name PREFIX:line="102" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="102" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="102" PREFIX:column="29">x0</name> = 0</expr>;</expr_stmt>
	<expr_stmt><expr PREFIX:line="103" PREFIX:column="9">((<name PREFIX:line="103" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="103" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="103" PREFIX:column="29">x1</name> = 0</expr>;</expr_stmt>
	<expr_stmt><expr PREFIX:line="104" PREFIX:column="9">((<name PREFIX:line="104" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="104" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="104" PREFIX:column="29">y0</name> = 0</expr>;</expr_stmt>
	<expr_stmt><expr PREFIX:line="105" PREFIX:column="9">((<name PREFIX:line="105" PREFIX:column="11">u8g_box_t</name> *)<name PREFIX:line="105" PREFIX:column="23">arg</name>)-&gt;<name PREFIX:line="105" PREFIX:column="29">y1</name> = 0</expr>;</expr_stmt>
      }</block></else></if>
      <return PREFIX:line="107" PREFIX:column="7">return <expr PREFIX:line="107" PREFIX:column="14">1</expr>;</return>
    </case><case PREFIX:line="108" PREFIX:column="5">case <expr><name PREFIX:line="108" PREFIX:column="10">U8G_DEV_MSG_SET_PIXEL</name></expr>:
    </case><case PREFIX:line="109" PREFIX:column="5">case <expr><name PREFIX:line="109" PREFIX:column="10">U8G_DEV_MSG_SET_8PIXEL</name></expr>:
      <if PREFIX:line="110" PREFIX:column="7">if <condition PREFIX:line="110" PREFIX:column="10">( <expr><name PREFIX:line="110" PREFIX:column="12">u8g_vs_current</name> &lt; <name PREFIX:line="110" PREFIX:column="29">u8g_vs_cnt</name></expr> )</condition><then PREFIX:line="110" PREFIX:column="41">
      <block PREFIX:line="111" PREFIX:column="7">{
        <expr_stmt><expr PREFIX:line="112" PREFIX:column="9">((<name PREFIX:line="112" PREFIX:column="11">u8g_dev_arg_pixel_t</name> *)<name PREFIX:line="112" PREFIX:column="33">arg</name>)-&gt;<name PREFIX:line="112" PREFIX:column="39">x</name> -= <name><name PREFIX:line="112" PREFIX:column="44">u8g_vs_list</name><index PREFIX:line="112" PREFIX:column="55">[<expr><name PREFIX:line="112" PREFIX:column="56">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="112" PREFIX:column="72">x</name></expr>;</expr_stmt>
        <expr_stmt><expr PREFIX:line="113" PREFIX:column="9">((<name PREFIX:line="113" PREFIX:column="11">u8g_dev_arg_pixel_t</name> *)<name PREFIX:line="113" PREFIX:column="33">arg</name>)-&gt;<name PREFIX:line="113" PREFIX:column="39">y</name> -= <name><name PREFIX:line="113" PREFIX:column="44">u8g_vs_list</name><index PREFIX:line="113" PREFIX:column="55">[<expr><name PREFIX:line="113" PREFIX:column="56">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="113" PREFIX:column="72">y</name></expr>;</expr_stmt>
	<return PREFIX:line="114" PREFIX:column="9">return <expr><call><name PREFIX:line="114" PREFIX:column="16">u8g_call_dev_fn</name><argument_list PREFIX:line="114" PREFIX:column="31">(<argument><expr><name><name PREFIX:line="114" PREFIX:column="32">u8g_vs_list</name><index PREFIX:line="114" PREFIX:column="43">[<expr><name PREFIX:line="114" PREFIX:column="44">u8g_vs_current</name></expr>]</index></name>.<name PREFIX:line="114" PREFIX:column="60">u8g</name></expr></argument>, <argument><expr><name><name PREFIX:line="114" PREFIX:column="65">u8g_vs_list</name><index PREFIX:line="114" PREFIX:column="76">[<expr><name PREFIX:line="114" PREFIX:column="77">u8g_vs_current</name></expr>]</index></name>.<name><name PREFIX:line="114" PREFIX:column="93">u8g</name>-&gt;<name PREFIX:line="114" PREFIX:column="98">dev</name></name></expr></argument>, <argument><expr><name PREFIX:line="114" PREFIX:column="103">msg</name></expr></argument>, <argument><expr><name PREFIX:line="114" PREFIX:column="108">arg</name></expr></argument>)</argument_list></call></expr>;</return>
      }</block></then></if>
      <break PREFIX:line="116" PREFIX:column="7">break;</break>
  </case>}</block></switch>
  <return PREFIX:line="118" PREFIX:column="3">return <expr PREFIX:line="118" PREFIX:column="10">1</expr>;</return>
}</block></function>



<decl_stmt><decl><type><name PREFIX:line="123" PREFIX:column="1">u8g_dev_t</name></type> <name PREFIX:line="123" PREFIX:column="11">u8g_dev_vs</name> <init PREFIX:line="123" PREFIX:column="22">= <expr><block PREFIX:line="123" PREFIX:column="24">{ <expr><name PREFIX:line="123" PREFIX:column="26">u8g_dev_vs_fn</name></expr>, <expr><name PREFIX:line="123" PREFIX:column="41">NULL</name></expr>, <expr><name PREFIX:line="123" PREFIX:column="47">NULL</name></expr> }</block></expr></init></decl>;</decl_stmt>

<function><type><name PREFIX:line="125" PREFIX:column="1">void</name></type> <name PREFIX:line="125" PREFIX:column="6">u8g_SetVirtualScreenDimension</name><parameter_list PREFIX:line="125" PREFIX:column="35">(<param><decl><type><name PREFIX:line="125" PREFIX:column="36">u8g_t</name> *</type><name PREFIX:line="125" PREFIX:column="43">vs_u8g</name></decl></param>, <param><decl><type><name PREFIX:line="125" PREFIX:column="51">u8g_uint_t</name></type> <name PREFIX:line="125" PREFIX:column="62">width</name></decl></param>, <param><decl><type><name PREFIX:line="125" PREFIX:column="69">u8g_uint_t</name></type> <name PREFIX:line="125" PREFIX:column="80">height</name></decl></param>)</parameter_list>
<block PREFIX:line="126" PREFIX:column="1">{
  <if PREFIX:line="127" PREFIX:column="3">if <condition PREFIX:line="127" PREFIX:column="6">( <expr><name><name PREFIX:line="127" PREFIX:column="8">vs_u8g</name>-&gt;<name PREFIX:line="127" PREFIX:column="16">dev</name></name> != &amp;<name PREFIX:line="127" PREFIX:column="24">u8g_dev_vs</name></expr> )</condition><then PREFIX:line="127" PREFIX:column="36">
    <return PREFIX:line="128" PREFIX:column="5">return;</return></then></if> 	<comment type="block" PREFIX:line="128" PREFIX:column="17">/* abort if there is no a virtual screen device */</comment>
  <expr_stmt><expr><name PREFIX:line="129" PREFIX:column="3">u8g_vs_width</name> = <name PREFIX:line="129" PREFIX:column="18">width</name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="130" PREFIX:column="3">u8g_vs_height</name> = <name PREFIX:line="130" PREFIX:column="19">height</name></expr>;</expr_stmt>  
}</block></function>

<function><type><name PREFIX:line="133" PREFIX:column="1">uint8_t</name></type> <name PREFIX:line="133" PREFIX:column="9">u8g_AddToVirtualScreen</name><parameter_list PREFIX:line="133" PREFIX:column="31">(<param><decl><type><name PREFIX:line="133" PREFIX:column="32">u8g_t</name> *</type><name PREFIX:line="133" PREFIX:column="39">vs_u8g</name></decl></param>, <param><decl><type><name PREFIX:line="133" PREFIX:column="47">u8g_uint_t</name></type> <name PREFIX:line="133" PREFIX:column="58">x</name></decl></param>, <param><decl><type><name PREFIX:line="133" PREFIX:column="61">u8g_uint_t</name></type> <name PREFIX:line="133" PREFIX:column="72">y</name></decl></param>, <param><decl><type><name PREFIX:line="133" PREFIX:column="75">u8g_t</name> *</type><name PREFIX:line="133" PREFIX:column="82">child_u8g</name></decl></param>)</parameter_list>
<block PREFIX:line="134" PREFIX:column="1">{
  <if PREFIX:line="135" PREFIX:column="3">if <condition PREFIX:line="135" PREFIX:column="6">( <expr><name><name PREFIX:line="135" PREFIX:column="8">vs_u8g</name>-&gt;<name PREFIX:line="135" PREFIX:column="16">dev</name></name> != &amp;<name PREFIX:line="135" PREFIX:column="24">u8g_dev_vs</name></expr> )</condition><then PREFIX:line="135" PREFIX:column="36">
    <return PREFIX:line="136" PREFIX:column="5">return <expr PREFIX:line="136" PREFIX:column="12">0</expr>;</return></then></if> 	<comment type="block" PREFIX:line="136" PREFIX:column="17">/* abort if there is no a virtual screen device */</comment>
  <if PREFIX:line="137" PREFIX:column="3">if <condition PREFIX:line="137" PREFIX:column="6">( <expr><name PREFIX:line="137" PREFIX:column="8">u8g_vs_cnt</name> &gt;= <name PREFIX:line="137" PREFIX:column="22">U8g_VS_MAX</name></expr> )</condition><then PREFIX:line="137" PREFIX:column="34">
    <return PREFIX:line="138" PREFIX:column="5">return <expr PREFIX:line="138" PREFIX:column="12">0</expr>;</return></then></if>  	<comment type="block" PREFIX:line="138" PREFIX:column="17">/* maximum number of  child u8g's reached */</comment>
  <expr_stmt><expr><name><name PREFIX:line="139" PREFIX:column="3">u8g_vs_list</name><index PREFIX:line="139" PREFIX:column="14">[<expr><name PREFIX:line="139" PREFIX:column="15">u8g_vs_cnt</name></expr>]</index></name>.<name PREFIX:line="139" PREFIX:column="27">u8g</name> = <name PREFIX:line="139" PREFIX:column="33">child_u8g</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="140" PREFIX:column="3">u8g_vs_list</name><index PREFIX:line="140" PREFIX:column="14">[<expr><name PREFIX:line="140" PREFIX:column="15">u8g_vs_cnt</name></expr>]</index></name>.<name PREFIX:line="140" PREFIX:column="27">x</name> = <name PREFIX:line="140" PREFIX:column="31">x</name></expr>;</expr_stmt>
  <expr_stmt><expr><name><name PREFIX:line="141" PREFIX:column="3">u8g_vs_list</name><index PREFIX:line="141" PREFIX:column="14">[<expr><name PREFIX:line="141" PREFIX:column="15">u8g_vs_cnt</name></expr>]</index></name>.<name PREFIX:line="141" PREFIX:column="27">y</name> = <name PREFIX:line="141" PREFIX:column="31">y</name></expr>;</expr_stmt>
  <expr_stmt><expr><name PREFIX:line="142" PREFIX:column="3">u8g_vs_cnt</name>++</expr>;</expr_stmt>
  <return PREFIX:line="143" PREFIX:column="3">return <expr PREFIX:line="143" PREFIX:column="10">1</expr>;</return>
}</block></function>

</unit>
